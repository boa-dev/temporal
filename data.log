Identifier: America/Bahia_Banderas
[ZoneInfo { offset: -25260, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1922), January, Ordinal(1), TimeSpecAndType(HoursMinutes(7, 0), UTC))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilDay(Number(1927), June, Ordinal(10))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilDay(Number(1930), November, Ordinal(15))) }, ZoneInfo { offset: -25200, saving: Multiple("Mexico"), format: Placeholder("M%sT"), end_time: Some(UntilDay(Number(1932), April, Ordinal(1))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilDay(Number(1942), April, Ordinal(24))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilYear(Number(1970))) }, ZoneInfo { offset: -25200, saving: Multiple("Mexico"), format: Placeholder("M%sT"), end_time: Some(UntilTime(Number(2010), April, Ordinal(4), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("Mexico"), format: Placeholder("C%sT"), end_time: None }]
Identifier: Etc/GMT+1
[ZoneInfo { offset: -3600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Africa/Ndjamena
[ZoneInfo { offset: 3612, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1912), January, Ordinal(1))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("WAT"), end_time: Some(UntilDay(Number(1979), October, Ordinal(14))) }, ZoneInfo { offset: 3600, saving: OneOff(3600), format: Constant("WAST"), end_time: Some(UntilDay(Number(1980), March, Ordinal(8))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("WAT"), end_time: None }]
Identifier: Pacific/Tongatapu
[ZoneInfo { offset: 44352, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1945), September, Ordinal(10))) }, ZoneInfo { offset: 44400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1961))) }, ZoneInfo { offset: 46800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1999))) }, ZoneInfo { offset: 46800, saving: Multiple("Tonga"), format: Constant("%z"), end_time: None }]
Identifier: Asia/Nicosia
[ZoneInfo { offset: 8008, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1921), November, Ordinal(14))) }, ZoneInfo { offset: 7200, saving: Multiple("Cyprus"), format: Placeholder("EE%sT"), end_time: Some(UntilMonth(Number(1998), September)) }, ZoneInfo { offset: 7200, saving: Multiple("EUAsia"), format: Placeholder("EE%sT"), end_time: None }]
Identifier: America/Dawson
[ZoneInfo { offset: -33460, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1900), August, Ordinal(20))) }, ZoneInfo { offset: -32400, saving: Multiple("NT_YK"), format: Placeholder("Y%sT"), end_time: Some(UntilYear(Number(1965))) }, ZoneInfo { offset: -32400, saving: Multiple("Yukon"), format: Placeholder("Y%sT"), end_time: Some(UntilTime(Number(1973), October, Ordinal(28), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilYear(Number(1980))) }, ZoneInfo { offset: -28800, saving: Multiple("Canada"), format: Placeholder("P%sT"), end_time: Some(UntilDay(Number(2020), November, Ordinal(1))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: None }]
Identifier: Pacific/Kiritimati
[ZoneInfo { offset: -37760, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1901))) }, ZoneInfo { offset: -38400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1979), October)) }, ZoneInfo { offset: -36000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1994), December, Ordinal(31))) }, ZoneInfo { offset: 50400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Etc/GMT+7
[ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Lima
[ZoneInfo { offset: -18492, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -18516, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1908), July, Ordinal(28))) }, ZoneInfo { offset: -18000, saving: Multiple("Peru"), format: Constant("%z"), end_time: None }]
Identifier: America/Indiana/Indianapolis
[ZoneInfo { offset: -20678, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(18, 0), UTC))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1920))) }, ZoneInfo { offset: -21600, saving: Multiple("Indianapolis"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1942))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -21600, saving: Multiple("Indianapolis"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1955), April, Ordinal(24), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(1957), September, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilTime(Number(1958), April, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilYear(Number(1969))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1971))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilYear(Number(2006))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: None }]
Identifier: Africa/Abidjan
[ZoneInfo { offset: -968, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1912), January, Ordinal(1))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("GMT"), end_time: None }]
Identifier: America/Araguaina
[ZoneInfo { offset: -11568, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(1990), September, Ordinal(17))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1995), September, Ordinal(14))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(2003), September, Ordinal(24))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2012), October, Ordinal(21))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilMonth(Number(2013), September)) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Karachi
[ZoneInfo { offset: 16092, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1907))) }, ZoneInfo { offset: 19800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1942), September)) }, ZoneInfo { offset: 19800, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(1945), October, Ordinal(15))) }, ZoneInfo { offset: 19800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1951), September, Ordinal(30))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1971), March, Ordinal(26))) }, ZoneInfo { offset: 18000, saving: Multiple("Pakistan"), format: Placeholder("PK%sT"), end_time: None }]
Identifier: Pacific/Kosrae
[ZoneInfo { offset: -47284, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1844), December, Ordinal(31))) }, ZoneInfo { offset: 39116, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1901))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1914), October)) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1919), February, Ordinal(1))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1937))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1941), April, Ordinal(1))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1945), August)) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1969), October)) }, ZoneInfo { offset: 43200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1999))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Grand_Turk
[ZoneInfo { offset: -17072, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -18430, saving: NoSaving, format: Constant("KMT"), end_time: Some(UntilMonth(Number(1912), February)) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilYear(Number(1979))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilTime(Number(2015), March, Ordinal(8), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("AST"), end_time: Some(UntilTime(Number(2018), March, Ordinal(11), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: None }]
Identifier: Atlantic/Stanley
[ZoneInfo { offset: -13884, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -13884, saving: NoSaving, format: Constant("SMT"), end_time: Some(UntilDay(Number(1912), March, Ordinal(12))) }, ZoneInfo { offset: -14400, saving: Multiple("Falk"), format: Constant("%z"), end_time: Some(UntilMonth(Number(1983), May)) }, ZoneInfo { offset: -10800, saving: Multiple("Falk"), format: Constant("%z"), end_time: Some(UntilDay(Number(1985), September, Ordinal(15))) }, ZoneInfo { offset: -14400, saving: Multiple("Falk"), format: Constant("%z"), end_time: Some(UntilTime(Number(2010), September, Ordinal(5), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Almaty
[ZoneInfo { offset: 18468, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 21600, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2004), October, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2024), March, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Etc/GMT-4
[ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Andorra
[ZoneInfo { offset: 364, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1901))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("WET"), end_time: Some(UntilDay(Number(1946), September, Ordinal(30))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("CET"), end_time: Some(UntilTime(Number(1985), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: America/Guayaquil
[ZoneInfo { offset: -19160, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -18840, saving: NoSaving, format: Constant("QMT"), end_time: Some(UntilYear(Number(1931))) }, ZoneInfo { offset: -18000, saving: Multiple("Ecuador"), format: Constant("%z"), end_time: None }]
Identifier: Indian/Mauritius
[ZoneInfo { offset: 13800, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1907))) }, ZoneInfo { offset: 14400, saving: Multiple("Mauritius"), format: Constant("%z"), end_time: None }]
Identifier: America/Paramaribo
[ZoneInfo { offset: -13240, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1911))) }, ZoneInfo { offset: -13252, saving: NoSaving, format: Constant("PMT"), end_time: Some(UntilYear(Number(1935))) }, ZoneInfo { offset: -13236, saving: NoSaving, format: Constant("PMT"), end_time: Some(UntilMonth(Number(1945), October)) }, ZoneInfo { offset: -12600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1984), October)) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Inuvik
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilYear(Number(1953))) }, ZoneInfo { offset: -28800, saving: Multiple("NT_YK"), format: Placeholder("P%sT"), end_time: Some(UntilTime(Number(1979), April, Last(Sunday), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -25200, saving: Multiple("NT_YK"), format: Placeholder("M%sT"), end_time: Some(UntilYear(Number(1980))) }, ZoneInfo { offset: -25200, saving: Multiple("Canada"), format: Placeholder("M%sT"), end_time: None }]
Identifier: Australia/Adelaide
[ZoneInfo { offset: 33260, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1895), February)) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("ACST"), end_time: Some(UntilMonth(Number(1899), May)) }, ZoneInfo { offset: 34200, saving: Multiple("Aus"), format: Placeholder("AC%sT"), end_time: Some(UntilYear(Number(1971))) }, ZoneInfo { offset: 34200, saving: Multiple("AS"), format: Placeholder("AC%sT"), end_time: None }]
Identifier: Asia/Pyongyang
[ZoneInfo { offset: 30180, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1908), April, Ordinal(1))) }, ZoneInfo { offset: 30600, saving: NoSaving, format: Constant("KST"), end_time: Some(UntilDay(Number(1912), January, Ordinal(1))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("JST"), end_time: Some(UntilDay(Number(1945), August, Ordinal(24))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("KST"), end_time: Some(UntilTime(Number(2015), August, Ordinal(15), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: 30600, saving: NoSaving, format: Constant("KST"), end_time: Some(UntilTime(Number(2018), May, Ordinal(4), TimeSpecAndType(HoursMinutes(23, 30), Wall))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("KST"), end_time: None }]
Identifier: Europe/Vienna
[ZoneInfo { offset: 3921, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1893), April)) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1920))) }, ZoneInfo { offset: 3600, saving: Multiple("Austria"), format: Placeholder("CE%sT"), end_time: Some(UntilTime(Number(1940), April, Ordinal(1), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilTime(Number(1945), April, Ordinal(2), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 3600, saving: OneOff(3600), format: Constant("CEST"), end_time: Some(UntilTime(Number(1945), April, Ordinal(12), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("CET"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: 3600, saving: Multiple("Austria"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1981))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: Asia/Tomsk
[ZoneInfo { offset: 20391, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1919), December, Ordinal(22))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 25200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 25200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2002), May, Ordinal(1), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 21600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2016), May, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Paris
[ZoneInfo { offset: 561, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1891), March, Ordinal(16))) }, ZoneInfo { offset: 561, saving: NoSaving, format: Constant("PMT"), end_time: Some(UntilDay(Number(1911), March, Ordinal(11))) }, ZoneInfo { offset: 0, saving: Multiple("France"), format: Placeholder("WE%sT"), end_time: Some(UntilTime(Number(1940), June, Ordinal(14), TimeSpecAndType(HoursMinutes(23, 0), Wall))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1944), August, Ordinal(25))) }, ZoneInfo { offset: 0, saving: Multiple("France"), format: Placeholder("WE%sT"), end_time: Some(UntilTime(Number(1945), September, Ordinal(16), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 3600, saving: Multiple("France"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1977))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: Asia/Tbilisi
[ZoneInfo { offset: 10751, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 10751, saving: NoSaving, format: Constant("TBMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1957), March)) }, ZoneInfo { offset: 14400, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilYear(Number(1992))) }, ZoneInfo { offset: 10800, saving: Multiple("E-EurAsia"), format: Constant("%z"), end_time: Some(UntilDay(Number(1994), September, Last(Sunday))) }, ZoneInfo { offset: 14400, saving: Multiple("E-EurAsia"), format: Constant("%z"), end_time: Some(UntilDay(Number(1996), October, Last(Sunday))) }, ZoneInfo { offset: 14400, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(1997), March, Last(Sunday))) }, ZoneInfo { offset: 14400, saving: Multiple("E-EurAsia"), format: Constant("%z"), end_time: Some(UntilDay(Number(2004), June, Ordinal(27))) }, ZoneInfo { offset: 10800, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2005), March, Last(Sunday), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Astrakhan
[ZoneInfo { offset: 11532, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1924), May)) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 14400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1989), March, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1992), March, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2016), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Jakarta
[ZoneInfo { offset: 25632, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1867), August, Ordinal(10))) }, ZoneInfo { offset: 25632, saving: NoSaving, format: Constant("BMT"), end_time: Some(UntilTime(Number(1923), December, Ordinal(31), TimeSpecAndType(HoursMinutes(16, 40), UTC))) }, ZoneInfo { offset: 26400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1932), November)) }, ZoneInfo { offset: 27000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1942), March, Ordinal(23))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1945), September, Ordinal(23))) }, ZoneInfo { offset: 27000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1948), May)) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1950), May)) }, ZoneInfo { offset: 27000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1964))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("WIB"), end_time: None }]
Identifier: Africa/Bissau
[ZoneInfo { offset: -3740, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1912), January, Ordinal(1), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: -3600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1975))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("GMT"), end_time: None }]
Identifier: Pacific/Gambier
[ZoneInfo { offset: -32388, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1912), October, Ordinal(1))) }, ZoneInfo { offset: -32400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Samarkand
[ZoneInfo { offset: 16073, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1981), April, Ordinal(1))) }, ZoneInfo { offset: 18000, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(1981), October, Ordinal(1))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1982), April, Ordinal(1))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilYear(Number(1992))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Prague
[ZoneInfo { offset: 3464, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1850))) }, ZoneInfo { offset: 3464, saving: NoSaving, format: Constant("PMT"), end_time: Some(UntilMonth(Number(1891), October)) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1945), May, Ordinal(9))) }, ZoneInfo { offset: 3600, saving: Multiple("Czech"), format: Placeholder("CE%sT"), end_time: Some(UntilTime(Number(1946), December, Ordinal(1), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 3600, saving: OneOff(-3600), format: Constant("GMT"), end_time: Some(UntilTime(Number(1947), February, Ordinal(23), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 3600, saving: Multiple("Czech"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1979))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: Etc/GMT+11
[ZoneInfo { offset: -39600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Kaliningrad
[ZoneInfo { offset: 4920, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1893), April)) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1945), April, Ordinal(10))) }, ZoneInfo { offset: 7200, saving: Multiple("Poland"), format: Placeholder("EE%sT"), end_time: Some(UntilDay(Number(1946), April, Ordinal(7))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilTime(Number(1989), March, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 7200, saving: Multiple("Russia"), format: Placeholder("EE%sT"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: None }]
Identifier: Asia/Srednekolymsk
[ZoneInfo { offset: 36892, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 39600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 36000, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 39600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 43200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Edmonton
[ZoneInfo { offset: -27232, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1906), September)) }, ZoneInfo { offset: -25200, saving: Multiple("Edm"), format: Placeholder("M%sT"), end_time: Some(UntilYear(Number(1987))) }, ZoneInfo { offset: -25200, saving: Multiple("Canada"), format: Placeholder("M%sT"), end_time: None }]
Identifier: Pacific/Kanton
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilDay(Number(1937), August, Ordinal(31))) }, ZoneInfo { offset: -43200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1979), October)) }, ZoneInfo { offset: -39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1994), December, Ordinal(31))) }, ZoneInfo { offset: 46800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Indiana/Vevay
[ZoneInfo { offset: -20416, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(18, 0), UTC))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1954), April, Ordinal(25), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilYear(Number(1969))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1973))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilYear(Number(2006))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: None }]
Identifier: America/Indiana/Petersburg
[ZoneInfo { offset: -20947, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(18, 0), UTC))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1955))) }, ZoneInfo { offset: -21600, saving: Multiple("Pike"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1965), April, Ordinal(25), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(1966), October, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1977), October, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(2006), April, Ordinal(2), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(2007), November, Ordinal(4), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: None }]
Identifier: Etc/GMT+5
[ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Kirov
[ZoneInfo { offset: 11928, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1919), July, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), UTC))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 14400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1989), March, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1992), March, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("MSK"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("MSK"), end_time: None }]
Identifier: America/Mazatlan
[ZoneInfo { offset: -25540, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1922), January, Ordinal(1), TimeSpecAndType(HoursMinutes(7, 0), UTC))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilDay(Number(1927), June, Ordinal(10))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilDay(Number(1930), November, Ordinal(15))) }, ZoneInfo { offset: -25200, saving: Multiple("Mexico"), format: Placeholder("M%sT"), end_time: Some(UntilDay(Number(1932), April, Ordinal(1))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilDay(Number(1942), April, Ordinal(24))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilYear(Number(1970))) }, ZoneInfo { offset: -25200, saving: Multiple("Mexico"), format: Placeholder("M%sT"), end_time: None }]
Identifier: America/Rankin_Inlet
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilYear(Number(1957))) }, ZoneInfo { offset: -21600, saving: Multiple("NT_YK"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(2000), October, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(2001), April, Ordinal(1), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("Canada"), format: Placeholder("C%sT"), end_time: None }]
Identifier: America/Argentina/La_Rioja
[ZoneInfo { offset: -16044, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1894), October, Ordinal(31))) }, ZoneInfo { offset: -15408, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilMonth(Number(1920), May)) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1930), December)) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1969), October, Ordinal(5))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1991), March, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1991), May, Ordinal(7))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1999), October, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), March, Ordinal(3))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), June, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), June, Ordinal(20))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2008), October, Ordinal(18))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Africa/Tripoli
[ZoneInfo { offset: 3164, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1920))) }, ZoneInfo { offset: 3600, saving: Multiple("Libya"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1959))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilYear(Number(1982))) }, ZoneInfo { offset: 3600, saving: Multiple("Libya"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1990), May, Ordinal(4))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilDay(Number(1996), September, Ordinal(30))) }, ZoneInfo { offset: 3600, saving: Multiple("Libya"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1997), October, Ordinal(4))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilTime(Number(2012), November, Ordinal(10), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 3600, saving: Multiple("Libya"), format: Placeholder("CE%sT"), end_time: Some(UntilTime(Number(2013), October, Ordinal(25), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: None }]
Identifier: America/Puerto_Rico
[ZoneInfo { offset: -15865, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1899), March, Ordinal(28), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("AST"), end_time: Some(UntilDay(Number(1942), May, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: Multiple("US"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("AST"), end_time: None }]
Identifier: America/Argentina/Tucuman
[ZoneInfo { offset: -15652, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1894), October, Ordinal(31))) }, ZoneInfo { offset: -15408, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilMonth(Number(1920), May)) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1930), December)) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1969), October, Ordinal(5))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1991), March, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1991), October, Ordinal(20))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1999), October, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), March, Ordinal(3))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), June, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), June, Ordinal(13))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: None }]
Identifier: America/Fortaleza
[ZoneInfo { offset: -9240, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(1990), September, Ordinal(17))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1999), September, Ordinal(30))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), October, Ordinal(22))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2001), September, Ordinal(13))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(2002), October, Ordinal(1))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Yerevan
[ZoneInfo { offset: 10680, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1957), March)) }, ZoneInfo { offset: 14400, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1995), September, Ordinal(24), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1997))) }, ZoneInfo { offset: 14400, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilYear(Number(2011))) }, ZoneInfo { offset: 14400, saving: Multiple("Armenia"), format: Constant("%z"), end_time: None }]
Identifier: Etc/GMT+9
[ZoneInfo { offset: -32400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Omsk
[ZoneInfo { offset: 17610, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1919), November, Ordinal(14))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 21600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Anadyr
[ZoneInfo { offset: 42596, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 43200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 46800, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1982), April, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), Standard))) }, ZoneInfo { offset: 43200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 39600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 43200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2010), March, Ordinal(28), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 39600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 43200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Merida
[ZoneInfo { offset: -21508, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1922), January, Ordinal(1), TimeSpecAndType(HoursMinutes(6, 0), UTC))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilTime(Number(1981), December, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(1982), November, Ordinal(2), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("Mexico"), format: Placeholder("C%sT"), end_time: None }]
Identifier: America/Asuncion
[ZoneInfo { offset: -13840, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -13840, saving: NoSaving, format: Constant("AMT"), end_time: Some(UntilDay(Number(1931), October, Ordinal(10))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1972), October)) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1974), April)) }, ZoneInfo { offset: -14400, saving: Multiple("Para"), format: Constant("%z"), end_time: Some(UntilDay(Number(2024), October, Ordinal(15))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Cambridge_Bay
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilYear(Number(1920))) }, ZoneInfo { offset: -25200, saving: Multiple("NT_YK"), format: Placeholder("M%sT"), end_time: Some(UntilTime(Number(1999), October, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("Canada"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(2000), October, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(2000), November, Ordinal(5), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilTime(Number(2001), April, Ordinal(1), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: -25200, saving: Multiple("Canada"), format: Placeholder("M%sT"), end_time: None }]
Identifier: America/Miquelon
[ZoneInfo { offset: -13480, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1911), June, Ordinal(15))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("AST"), end_time: Some(UntilMonth(Number(1980), May)) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1987))) }, ZoneInfo { offset: -10800, saving: Multiple("Canada"), format: Constant("%z"), end_time: None }]
Identifier: Europe/Rome
[ZoneInfo { offset: 2996, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1866), December, Ordinal(12))) }, ZoneInfo { offset: 2996, saving: NoSaving, format: Constant("RMT"), end_time: Some(UntilTime(Number(1893), October, Ordinal(31), TimeSpecAndType(HoursMinutes(23, 0), UTC))) }, ZoneInfo { offset: 3600, saving: Multiple("Italy"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1943), September, Ordinal(10))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1944), June, Ordinal(4))) }, ZoneInfo { offset: 3600, saving: Multiple("Italy"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1980))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: Australia/Broken_Hill
[ZoneInfo { offset: 33948, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1895), February)) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("AEST"), end_time: Some(UntilDay(Number(1896), August, Ordinal(23))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("ACST"), end_time: Some(UntilMonth(Number(1899), May)) }, ZoneInfo { offset: 34200, saving: Multiple("Aus"), format: Placeholder("AC%sT"), end_time: Some(UntilYear(Number(1971))) }, ZoneInfo { offset: 34200, saving: Multiple("AN"), format: Placeholder("AC%sT"), end_time: Some(UntilYear(Number(2000))) }, ZoneInfo { offset: 34200, saving: Multiple("AS"), format: Placeholder("AC%sT"), end_time: None }]
Identifier: Asia/Gaza
[ZoneInfo { offset: 8272, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1900), October)) }, ZoneInfo { offset: 7200, saving: Multiple("Zion"), format: Alternate { standard: "EET", dst: "EEST" }, end_time: Some(UntilDay(Number(1948), May, Ordinal(15))) }, ZoneInfo { offset: 7200, saving: Multiple("EgyptAsia"), format: Placeholder("EE%sT"), end_time: Some(UntilDay(Number(1967), June, Ordinal(5))) }, ZoneInfo { offset: 7200, saving: Multiple("Zion"), format: Placeholder("I%sT"), end_time: Some(UntilYear(Number(1996))) }, ZoneInfo { offset: 7200, saving: Multiple("Jordan"), format: Placeholder("EE%sT"), end_time: Some(UntilYear(Number(1999))) }, ZoneInfo { offset: 7200, saving: Multiple("Palestine"), format: Placeholder("EE%sT"), end_time: Some(UntilTime(Number(2008), August, Ordinal(29), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilMonth(Number(2008), September)) }, ZoneInfo { offset: 7200, saving: Multiple("Palestine"), format: Placeholder("EE%sT"), end_time: Some(UntilYear(Number(2010))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilTime(Number(2010), March, Ordinal(27), TimeSpecAndType(HoursMinutes(0, 1), Wall))) }, ZoneInfo { offset: 7200, saving: Multiple("Palestine"), format: Placeholder("EE%sT"), end_time: Some(UntilDay(Number(2011), August, Ordinal(1))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilYear(Number(2012))) }, ZoneInfo { offset: 7200, saving: Multiple("Palestine"), format: Placeholder("EE%sT"), end_time: None }]
Identifier: Europe/Saratov
[ZoneInfo { offset: 11058, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1919), July, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), UTC))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 14400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1988), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1992), March, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2016), December, Ordinal(4), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Martinique
[ZoneInfo { offset: -14660, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -14660, saving: NoSaving, format: Constant("FFMT"), end_time: Some(UntilDay(Number(1911), May, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("AST"), end_time: Some(UntilDay(Number(1980), April, Ordinal(6))) }, ZoneInfo { offset: -14400, saving: OneOff(3600), format: Constant("ADT"), end_time: Some(UntilDay(Number(1980), September, Ordinal(28))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("AST"), end_time: None }]
Identifier: America/Caracas
[ZoneInfo { offset: -16064, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -16060, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilDay(Number(1912), February, Ordinal(12))) }, ZoneInfo { offset: -16200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1965), January, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2007), December, Ordinal(9), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: -16200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2016), May, Ordinal(1), TimeSpecAndType(HoursMinutes(2, 30), Wall))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Atlantic/Cape_Verde
[ZoneInfo { offset: -5644, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1912), January, Ordinal(1), TimeSpecAndType(HoursMinutes(2, 0), UTC))) }, ZoneInfo { offset: -7200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1942), September)) }, ZoneInfo { offset: -7200, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(1945), October, Ordinal(15))) }, ZoneInfo { offset: -7200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1975), November, Ordinal(25), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -3600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Minsk
[ZoneInfo { offset: 6616, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 6600, saving: NoSaving, format: Constant("MMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("MSK"), end_time: Some(UntilDay(Number(1941), June, Ordinal(28))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1944), July, Ordinal(3))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilYear(Number(1990))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("MSK"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 7200, saving: Multiple("Russia"), format: Placeholder("EE%sT"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Australia/Brisbane
[ZoneInfo { offset: 36728, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1895))) }, ZoneInfo { offset: 36000, saving: Multiple("Aus"), format: Placeholder("AE%sT"), end_time: Some(UntilYear(Number(1971))) }, ZoneInfo { offset: 36000, saving: Multiple("AQ"), format: Placeholder("AE%sT"), end_time: None }]
Identifier: Asia/Kabul
[ZoneInfo { offset: 16608, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1945))) }, ZoneInfo { offset: 16200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Halifax
[ZoneInfo { offset: -15264, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1902), June, Ordinal(15))) }, ZoneInfo { offset: -14400, saving: Multiple("Halifax"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(1918))) }, ZoneInfo { offset: -14400, saving: Multiple("Canada"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(1919))) }, ZoneInfo { offset: -14400, saving: Multiple("Halifax"), format: Placeholder("A%sT"), end_time: Some(UntilTime(Number(1942), February, Ordinal(9), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: -14400, saving: Multiple("Canada"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -14400, saving: Multiple("Halifax"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(1974))) }, ZoneInfo { offset: -14400, saving: Multiple("Canada"), format: Placeholder("A%sT"), end_time: None }]
Identifier: Asia/Aqtau
[ZoneInfo { offset: 12064, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1981), October, Ordinal(1))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1982), April, Ordinal(1))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1994), September, Ordinal(25), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2004), October, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Singapore
[ZoneInfo { offset: 24925, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1901), January, Ordinal(1))) }, ZoneInfo { offset: 24925, saving: NoSaving, format: Constant("SMT"), end_time: Some(UntilDay(Number(1905), June, Ordinal(1))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1933), January, Ordinal(1))) }, ZoneInfo { offset: 25200, saving: OneOff(1200), format: Constant("%z"), end_time: Some(UntilDay(Number(1936), January, Ordinal(1))) }, ZoneInfo { offset: 26400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1941), September, Ordinal(1))) }, ZoneInfo { offset: 27000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1942), February, Ordinal(16))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1945), September, Ordinal(12))) }, ZoneInfo { offset: 27000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1981), December, Ordinal(31), TimeSpecAndType(HoursMinutes(16, 0), UTC))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Oral
[ZoneInfo { offset: 12324, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1981), April, Ordinal(1))) }, ZoneInfo { offset: 18000, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(1981), October, Ordinal(1))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1982), April, Ordinal(1))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1989), March, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), March, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2004), October, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Amman
[ZoneInfo { offset: 8624, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1931))) }, ZoneInfo { offset: 7200, saving: Multiple("Jordan"), format: Placeholder("EE%sT"), end_time: Some(UntilTime(Number(2022), October, Ordinal(28), TimeSpecAndType(HoursMinutes(0, 0), Standard))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Seoul
[ZoneInfo { offset: 30472, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1908), April, Ordinal(1))) }, ZoneInfo { offset: 30600, saving: NoSaving, format: Constant("KST"), end_time: Some(UntilDay(Number(1912), January, Ordinal(1))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("JST"), end_time: Some(UntilDay(Number(1945), September, Ordinal(8))) }, ZoneInfo { offset: 32400, saving: Multiple("ROK"), format: Placeholder("K%sT"), end_time: Some(UntilDay(Number(1954), March, Ordinal(21))) }, ZoneInfo { offset: 30600, saving: Multiple("ROK"), format: Placeholder("K%sT"), end_time: Some(UntilDay(Number(1961), August, Ordinal(10))) }, ZoneInfo { offset: 32400, saving: Multiple("ROK"), format: Placeholder("K%sT"), end_time: None }]
Identifier: America/Montevideo
[ZoneInfo { offset: -13491, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1908), June, Ordinal(10))) }, ZoneInfo { offset: -13491, saving: NoSaving, format: Constant("MMT"), end_time: Some(UntilDay(Number(1920), May, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1923), October, Ordinal(1))) }, ZoneInfo { offset: -12600, saving: Multiple("Uruguay"), format: Constant("%z"), end_time: Some(UntilDay(Number(1942), December, Ordinal(14))) }, ZoneInfo { offset: -10800, saving: Multiple("Uruguay"), format: Constant("%z"), end_time: Some(UntilYear(Number(1960))) }, ZoneInfo { offset: -10800, saving: Multiple("Uruguay"), format: Constant("%z"), end_time: Some(UntilYear(Number(1968))) }, ZoneInfo { offset: -10800, saving: Multiple("Uruguay"), format: Constant("%z"), end_time: Some(UntilYear(Number(1970))) }, ZoneInfo { offset: -10800, saving: Multiple("Uruguay"), format: Constant("%z"), end_time: Some(UntilYear(Number(1974))) }, ZoneInfo { offset: -10800, saving: Multiple("Uruguay"), format: Constant("%z"), end_time: Some(UntilDay(Number(1974), March, Ordinal(10))) }, ZoneInfo { offset: -10800, saving: Multiple("Uruguay"), format: Constant("%z"), end_time: Some(UntilDay(Number(1974), December, Ordinal(22))) }, ZoneInfo { offset: -10800, saving: Multiple("Uruguay"), format: Constant("%z"), end_time: None }]
Identifier: America/Juneau
[ZoneInfo { offset: 54139, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1867), October, Ordinal(19), TimeSpecAndType(HoursMinutesSeconds(15, 33, 32), Wall))) }, ZoneInfo { offset: -32261, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1900), August, Ordinal(20), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilYear(Number(1942))) }, ZoneInfo { offset: -28800, saving: Multiple("US"), format: Placeholder("P%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilYear(Number(1969))) }, ZoneInfo { offset: -28800, saving: Multiple("US"), format: Placeholder("P%sT"), end_time: Some(UntilTime(Number(1980), April, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -32400, saving: Multiple("US"), format: Placeholder("Y%sT"), end_time: Some(UntilTime(Number(1980), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -28800, saving: Multiple("US"), format: Placeholder("P%sT"), end_time: Some(UntilTime(Number(1983), October, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -32400, saving: Multiple("US"), format: Placeholder("Y%sT"), end_time: Some(UntilDay(Number(1983), November, Ordinal(30))) }, ZoneInfo { offset: -32400, saving: Multiple("US"), format: Placeholder("AK%sT"), end_time: None }]
Identifier: Asia/Beirut
[ZoneInfo { offset: 8520, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 7200, saving: Multiple("Lebanon"), format: Placeholder("EE%sT"), end_time: None }]
Identifier: Africa/El_Aaiun
[ZoneInfo { offset: -3168, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1934), January)) }, ZoneInfo { offset: -3600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1976), April, Ordinal(14))) }, ZoneInfo { offset: 0, saving: Multiple("Morocco"), format: Constant("%z"), end_time: Some(UntilTime(Number(2018), October, Ordinal(28), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 3600, saving: Multiple("Morocco"), format: Constant("%z"), end_time: None }]
Identifier: Etc/GMT+12
[ZoneInfo { offset: -43200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Anchorage
[ZoneInfo { offset: 50424, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1867), October, Ordinal(19), TimeSpecAndType(HoursMinutesSeconds(14, 31, 37), Wall))) }, ZoneInfo { offset: -35976, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1900), August, Ordinal(20), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: -36000, saving: NoSaving, format: Constant("AST"), end_time: Some(UntilYear(Number(1942))) }, ZoneInfo { offset: -36000, saving: Multiple("US"), format: Placeholder("A%sT"), end_time: Some(UntilMonth(Number(1967), April)) }, ZoneInfo { offset: -36000, saving: NoSaving, format: Constant("AHST"), end_time: Some(UntilYear(Number(1969))) }, ZoneInfo { offset: -36000, saving: Multiple("US"), format: Placeholder("AH%sT"), end_time: Some(UntilTime(Number(1983), October, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -32400, saving: Multiple("US"), format: Placeholder("Y%sT"), end_time: Some(UntilDay(Number(1983), November, Ordinal(30))) }, ZoneInfo { offset: -32400, saving: Multiple("US"), format: Placeholder("AK%sT"), end_time: None }]
Identifier: America/Jamaica
[ZoneInfo { offset: -18430, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -18430, saving: NoSaving, format: Constant("KMT"), end_time: Some(UntilMonth(Number(1912), February)) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilYear(Number(1974))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1984))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: None }]
Identifier: Pacific/Galapagos
[ZoneInfo { offset: -21504, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1931))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1986))) }, ZoneInfo { offset: -21600, saving: Multiple("Ecuador"), format: Constant("%z"), end_time: None }]
Identifier: Atlantic/Azores
[ZoneInfo { offset: -6160, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1884))) }, ZoneInfo { offset: -6872, saving: NoSaving, format: Constant("HMT"), end_time: Some(UntilTime(Number(1912), January, Ordinal(1), TimeSpecAndType(HoursMinutes(2, 0), UTC))) }, ZoneInfo { offset: -7200, saving: Multiple("Port"), format: Constant("%z"), end_time: Some(UntilTime(Number(1966), October, Ordinal(2), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: -3600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1982), March, Ordinal(28), TimeSpecAndType(HoursMinutes(0, 0), Standard))) }, ZoneInfo { offset: -3600, saving: Multiple("Port"), format: Constant("%z"), end_time: Some(UntilYear(Number(1986))) }, ZoneInfo { offset: -3600, saving: Multiple("EU"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), December, Ordinal(27), TimeSpecAndType(HoursMinutes(1, 0), Standard))) }, ZoneInfo { offset: 0, saving: Multiple("EU"), format: Placeholder("WE%sT"), end_time: Some(UntilTime(Number(1993), June, Ordinal(17), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: -3600, saving: Multiple("EU"), format: Constant("%z"), end_time: None }]
Identifier: America/North_Dakota/Beulah
[ZoneInfo { offset: -24427, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(19, 0), UTC))) }, ZoneInfo { offset: -25200, saving: Multiple("US"), format: Placeholder("M%sT"), end_time: Some(UntilTime(Number(2010), November, Ordinal(7), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: None }]
Identifier: America/Fort_Nelson
[ZoneInfo { offset: -29447, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1884))) }, ZoneInfo { offset: -28800, saving: Multiple("Vanc"), format: Placeholder("P%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilYear(Number(1947))) }, ZoneInfo { offset: -28800, saving: Multiple("Vanc"), format: Placeholder("P%sT"), end_time: Some(UntilYear(Number(1987))) }, ZoneInfo { offset: -28800, saving: Multiple("Canada"), format: Placeholder("P%sT"), end_time: Some(UntilTime(Number(2015), March, Ordinal(8), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: None }]
Identifier: Asia/Atyrau
[ZoneInfo { offset: 12464, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1981), October, Ordinal(1))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1982), April, Ordinal(1))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1999), March, Ordinal(28), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2004), October, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Rio_Branco
[ZoneInfo { offset: -16272, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -18000, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(1988), September, Ordinal(12))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2008), June, Ordinal(24), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2013), November, Ordinal(10))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Menominee
[ZoneInfo { offset: -21027, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1885), September, Ordinal(18), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -21600, saving: Multiple("Menominee"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1969), April, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(1973), April, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: None }]
Identifier: Antarctica/Davis
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilDay(Number(1957), January, Ordinal(13))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1964), November)) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilMonth(Number(1969), February)) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2009), October, Ordinal(18), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2010), March, Ordinal(10), TimeSpecAndType(HoursMinutes(20, 0), UTC))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2011), October, Ordinal(28), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2012), February, Ordinal(21), TimeSpecAndType(HoursMinutes(20, 0), UTC))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Argentina/Buenos_Aires
[ZoneInfo { offset: -14028, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1894), October, Ordinal(31))) }, ZoneInfo { offset: -15408, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilMonth(Number(1920), May)) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1930), December)) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1969), October, Ordinal(5))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1999), October, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), March, Ordinal(3))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: None }]
Identifier: Pacific/Marquesas
[ZoneInfo { offset: -33480, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1912), October, Ordinal(1))) }, ZoneInfo { offset: -34200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Makassar
[ZoneInfo { offset: 28656, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1920))) }, ZoneInfo { offset: 28656, saving: NoSaving, format: Constant("MMT"), end_time: Some(UntilMonth(Number(1932), November)) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1942), February, Ordinal(9))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1945), September, Ordinal(23))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("WITA"), end_time: None }]
Identifier: Asia/Macau
[ZoneInfo { offset: 27250, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1904), October, Ordinal(30))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilTime(Number(1941), December, Ordinal(21), TimeSpecAndType(HoursMinutes(23, 0), Wall))) }, ZoneInfo { offset: 32400, saving: Multiple("Macau"), format: Constant("%z"), end_time: Some(UntilTime(Number(1945), September, Ordinal(30), TimeSpecAndType(HoursMinutes(24, 0), Wall))) }, ZoneInfo { offset: 28800, saving: Multiple("Macau"), format: Placeholder("C%sT"), end_time: None }]
Identifier: Australia/Melbourne
[ZoneInfo { offset: 34792, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1895), February)) }, ZoneInfo { offset: 36000, saving: Multiple("Aus"), format: Placeholder("AE%sT"), end_time: Some(UntilYear(Number(1971))) }, ZoneInfo { offset: 36000, saving: Multiple("AV"), format: Placeholder("AE%sT"), end_time: None }]
Identifier: Antarctica/Vostok
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilDay(Number(1957), December, Ordinal(16))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1994), February)) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilMonth(Number(1994), November)) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2023), December, Ordinal(18), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Yakutsk
[ZoneInfo { offset: 31138, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1919), December, Ordinal(15))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 32400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 28800, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 32400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Sakhalin
[ZoneInfo { offset: 34248, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1905), August, Ordinal(23))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1945), August, Ordinal(25))) }, ZoneInfo { offset: 39600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 36000, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 39600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1997), March, Last(Sunday), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 36000, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2016), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Pacific/Kwajalein
[ZoneInfo { offset: 40160, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1901))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1937))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1941), April, Ordinal(1))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1944), February, Ordinal(6))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1969), October)) }, ZoneInfo { offset: -43200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1993), August, Ordinal(20), TimeSpecAndType(HoursMinutes(24, 0), Wall))) }, ZoneInfo { offset: 43200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Ashgabat
[ZoneInfo { offset: 14012, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 14400, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Etc/GMT-2
[ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Australia/Hobart
[ZoneInfo { offset: 35356, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1895), September)) }, ZoneInfo { offset: 36000, saving: Multiple("AT"), format: Placeholder("AE%sT"), end_time: Some(UntilDay(Number(1919), October, Ordinal(24))) }, ZoneInfo { offset: 36000, saving: Multiple("Aus"), format: Placeholder("AE%sT"), end_time: Some(UntilYear(Number(1967))) }, ZoneInfo { offset: 36000, saving: Multiple("AT"), format: Placeholder("AE%sT"), end_time: None }]
Identifier: Pacific/Norfolk
[ZoneInfo { offset: 40312, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1901))) }, ZoneInfo { offset: 40320, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1951))) }, ZoneInfo { offset: 41400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1974), October, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 41400, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilTime(Number(1975), March, Ordinal(2), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 41400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2015), October, Ordinal(4), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(2019), July)) }, ZoneInfo { offset: 39600, saving: Multiple("AN"), format: Constant("%z"), end_time: None }]
Identifier: Etc/UTC
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("UTC"), end_time: None }]
Identifier: Asia/Hong_Kong
[ZoneInfo { offset: 27402, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1904), October, Ordinal(29), TimeSpecAndType(HoursMinutes(17, 0), UTC))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("HKT"), end_time: Some(UntilTime(Number(1941), June, Ordinal(15), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 28800, saving: OneOff(3600), format: Constant("HKST"), end_time: Some(UntilTime(Number(1941), October, Ordinal(1), TimeSpecAndType(HoursMinutes(4, 0), Wall))) }, ZoneInfo { offset: 28800, saving: OneOff(1800), format: Constant("HKWT"), end_time: Some(UntilDay(Number(1941), December, Ordinal(25))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("JST"), end_time: Some(UntilTime(Number(1945), November, Ordinal(18), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 28800, saving: Multiple("HK"), format: Placeholder("HK%sT"), end_time: None }]
Identifier: America/Santo_Domingo
[ZoneInfo { offset: -16776, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -16800, saving: NoSaving, format: Constant("SDMT"), end_time: Some(UntilTime(Number(1933), April, Ordinal(1), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("DR"), format: Placeholder("%s"), end_time: Some(UntilDay(Number(1974), October, Ordinal(27))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("AST"), end_time: Some(UntilTime(Number(2000), October, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilTime(Number(2000), December, Ordinal(3), TimeSpecAndType(HoursMinutes(1, 0), Wall))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("AST"), end_time: None }]
Identifier: America/North_Dakota/Center
[ZoneInfo { offset: -24312, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(19, 0), UTC))) }, ZoneInfo { offset: -25200, saving: Multiple("US"), format: Placeholder("M%sT"), end_time: Some(UntilTime(Number(1992), October, Ordinal(25), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: None }]
Identifier: Asia/Riyadh
[ZoneInfo { offset: 11212, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1947), March, Ordinal(14))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Atlantic/Canary
[ZoneInfo { offset: -3696, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1922), March)) }, ZoneInfo { offset: -3600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1946), September, Ordinal(30), TimeSpecAndType(HoursMinutes(1, 0), Wall))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("WET"), end_time: Some(UntilTime(Number(1980), April, Ordinal(6), TimeSpecAndType(HoursMinutes(0, 0), Standard))) }, ZoneInfo { offset: 0, saving: OneOff(3600), format: Constant("WEST"), end_time: Some(UntilTime(Number(1980), September, Ordinal(28), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: 0, saving: Multiple("EU"), format: Placeholder("WE%sT"), end_time: None }]
Identifier: America/Recife
[ZoneInfo { offset: -8376, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(1990), September, Ordinal(17))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1999), September, Ordinal(30))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), October, Ordinal(15))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2001), September, Ordinal(13))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(2002), October, Ordinal(1))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Hovd
[ZoneInfo { offset: 21996, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1905), August)) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1978))) }, ZoneInfo { offset: 25200, saving: Multiple("Mongol"), format: Constant("%z"), end_time: None }]
Identifier: Asia/Qostanay
[ZoneInfo { offset: 15268, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1981), April, Ordinal(1))) }, ZoneInfo { offset: 18000, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(1981), October, Ordinal(1))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1982), April, Ordinal(1))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2004), October, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2024), March, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Pacific/Guam
[ZoneInfo { offset: -51660, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1844), December, Ordinal(31))) }, ZoneInfo { offset: 34740, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1901))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("GST"), end_time: Some(UntilDay(Number(1941), December, Ordinal(10))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1944), July, Ordinal(31))) }, ZoneInfo { offset: 36000, saving: Multiple("Guam"), format: Placeholder("G%sT"), end_time: Some(UntilDay(Number(2000), December, Ordinal(23))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("ChST"), end_time: None }]
Identifier: Africa/Maputo
[ZoneInfo { offset: 7818, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1909))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("CAT"), end_time: None }]
Identifier: Europe/Brussels
[ZoneInfo { offset: 1050, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 1050, saving: NoSaving, format: Constant("BMT"), end_time: Some(UntilTime(Number(1892), May, Ordinal(1), TimeSpecAndType(HoursMinutesSeconds(0, 17, 30), Wall))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("WET"), end_time: Some(UntilDay(Number(1914), November, Ordinal(8))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("CET"), end_time: Some(UntilTime(Number(1916), May, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilTime(Number(1918), November, Ordinal(11), TimeSpecAndType(HoursMinutes(11, 0), UTC))) }, ZoneInfo { offset: 0, saving: Multiple("Belgium"), format: Placeholder("WE%sT"), end_time: Some(UntilTime(Number(1940), May, Ordinal(20), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1944), September, Ordinal(3))) }, ZoneInfo { offset: 3600, saving: Multiple("Belgium"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1977))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: Asia/Barnaul
[ZoneInfo { offset: 20100, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1919), December, Ordinal(10))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 25200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 25200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilDay(Number(1995), May, Ordinal(28))) }, ZoneInfo { offset: 21600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2016), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Lisbon
[ZoneInfo { offset: -2205, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1884))) }, ZoneInfo { offset: -2205, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1912), January, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), UTC))) }, ZoneInfo { offset: 0, saving: Multiple("Port"), format: Placeholder("WE%sT"), end_time: Some(UntilTime(Number(1966), October, Ordinal(2), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("CET"), end_time: Some(UntilTime(Number(1976), September, Ordinal(26), TimeSpecAndType(HoursMinutes(1, 0), Wall))) }, ZoneInfo { offset: 0, saving: Multiple("Port"), format: Placeholder("WE%sT"), end_time: Some(UntilYear(Number(1986))) }, ZoneInfo { offset: 0, saving: Multiple("EU"), format: Placeholder("WE%sT"), end_time: Some(UntilTime(Number(1992), September, Ordinal(27), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: Some(UntilTime(Number(1996), March, Ordinal(31), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: 0, saving: Multiple("EU"), format: Placeholder("WE%sT"), end_time: None }]
Identifier: Europe/Zurich
[ZoneInfo { offset: 2048, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1853), July, Ordinal(16))) }, ZoneInfo { offset: 1786, saving: NoSaving, format: Constant("BMT"), end_time: Some(UntilMonth(Number(1894), June)) }, ZoneInfo { offset: 3600, saving: Multiple("Swiss"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1981))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: Etc/GMT-12
[ZoneInfo { offset: 43200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Barbados
[ZoneInfo { offset: -14309, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1911), August, Ordinal(28))) }, ZoneInfo { offset: -14400, saving: Multiple("Barb"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(1944))) }, ZoneInfo { offset: -14400, saving: Multiple("Barb"), format: Alternate { standard: "AST", dst: "-0330" }, end_time: Some(UntilYear(Number(1945))) }, ZoneInfo { offset: -14400, saving: Multiple("Barb"), format: Placeholder("A%sT"), end_time: None }]
Identifier: Africa/Lagos
[ZoneInfo { offset: 815, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1905), July, Ordinal(1))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("GMT"), end_time: Some(UntilDay(Number(1908), July, Ordinal(1))) }, ZoneInfo { offset: 815, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1914), January, Ordinal(1))) }, ZoneInfo { offset: 1800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1919), September, Ordinal(1))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("WAT"), end_time: None }]
Identifier: Pacific/Auckland
[ZoneInfo { offset: 41944, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1868), November, Ordinal(2))) }, ZoneInfo { offset: 41400, saving: Multiple("NZ"), format: Placeholder("NZ%sT"), end_time: Some(UntilDay(Number(1946), January, Ordinal(1))) }, ZoneInfo { offset: 43200, saving: Multiple("NZ"), format: Placeholder("NZ%sT"), end_time: None }]
Identifier: Africa/Johannesburg
[ZoneInfo { offset: 6720, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1892), February, Ordinal(8))) }, ZoneInfo { offset: 5400, saving: NoSaving, format: Constant("SAST"), end_time: Some(UntilMonth(Number(1903), March)) }, ZoneInfo { offset: 7200, saving: Multiple("SA"), format: Constant("SAST"), end_time: None }]
Identifier: Asia/Dushanbe
[ZoneInfo { offset: 16512, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 21600, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), September, Ordinal(9), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Argentina/Rio_Gallegos
[ZoneInfo { offset: -16612, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1894), October, Ordinal(31))) }, ZoneInfo { offset: -15408, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilMonth(Number(1920), May)) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1930), December)) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1969), October, Ordinal(5))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1999), October, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), March, Ordinal(3))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), June, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), June, Ordinal(20))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2008), October, Ordinal(18))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Indian/Maldives
[ZoneInfo { offset: 17640, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 17640, saving: NoSaving, format: Constant("MMT"), end_time: Some(UntilYear(Number(1960))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Whitehorse
[ZoneInfo { offset: -32412, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1900), August, Ordinal(20))) }, ZoneInfo { offset: -32400, saving: Multiple("NT_YK"), format: Placeholder("Y%sT"), end_time: Some(UntilYear(Number(1965))) }, ZoneInfo { offset: -32400, saving: Multiple("Yukon"), format: Placeholder("Y%sT"), end_time: Some(UntilTime(Number(1966), February, Ordinal(27), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilYear(Number(1980))) }, ZoneInfo { offset: -28800, saving: Multiple("Canada"), format: Placeholder("P%sT"), end_time: Some(UntilDay(Number(2020), November, Ordinal(1))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: None }]
Identifier: Pacific/Pitcairn
[ZoneInfo { offset: -31220, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1901))) }, ZoneInfo { offset: -30600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1998), April, Ordinal(27), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Belize
[ZoneInfo { offset: -21168, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1912), April, Ordinal(1))) }, ZoneInfo { offset: -21600, saving: Multiple("Belize"), format: Placeholder("%s"), end_time: None }]
Identifier: Pacific/Port_Moresby
[ZoneInfo { offset: 35320, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 35312, saving: NoSaving, format: Constant("PMMT"), end_time: Some(UntilYear(Number(1895))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Taipei
[ZoneInfo { offset: 29160, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1896), January, Ordinal(1))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilDay(Number(1937), October, Ordinal(1))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("JST"), end_time: Some(UntilTime(Number(1945), September, Ordinal(21), TimeSpecAndType(HoursMinutes(1, 0), Wall))) }, ZoneInfo { offset: 28800, saving: Multiple("Taiwan"), format: Placeholder("C%sT"), end_time: None }]
Identifier: Asia/Tashkent
[ZoneInfo { offset: 16631, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 21600, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilYear(Number(1992))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Jerusalem
[ZoneInfo { offset: 8454, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 8440, saving: NoSaving, format: Constant("JMT"), end_time: Some(UntilYear(Number(1918))) }, ZoneInfo { offset: 7200, saving: Multiple("Zion"), format: Placeholder("I%sT"), end_time: None }]
Identifier: Australia/Darwin
[ZoneInfo { offset: 31400, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1895), February)) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("ACST"), end_time: Some(UntilMonth(Number(1899), May)) }, ZoneInfo { offset: 34200, saving: Multiple("Aus"), format: Placeholder("AC%sT"), end_time: None }]
Identifier: Australia/Sydney
[ZoneInfo { offset: 36292, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1895), February)) }, ZoneInfo { offset: 36000, saving: Multiple("Aus"), format: Placeholder("AE%sT"), end_time: Some(UntilYear(Number(1971))) }, ZoneInfo { offset: 36000, saving: Multiple("AN"), format: Placeholder("AE%sT"), end_time: None }]
Identifier: Pacific/Bougainville
[ZoneInfo { offset: 37336, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 35312, saving: NoSaving, format: Constant("PMMT"), end_time: Some(UntilYear(Number(1895))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1942), July)) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1945), August, Ordinal(21))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), December, Ordinal(28), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Hebron
[ZoneInfo { offset: 8423, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1900), October)) }, ZoneInfo { offset: 7200, saving: Multiple("Zion"), format: Alternate { standard: "EET", dst: "EEST" }, end_time: Some(UntilDay(Number(1948), May, Ordinal(15))) }, ZoneInfo { offset: 7200, saving: Multiple("EgyptAsia"), format: Placeholder("EE%sT"), end_time: Some(UntilDay(Number(1967), June, Ordinal(5))) }, ZoneInfo { offset: 7200, saving: Multiple("Zion"), format: Placeholder("I%sT"), end_time: Some(UntilYear(Number(1996))) }, ZoneInfo { offset: 7200, saving: Multiple("Jordan"), format: Placeholder("EE%sT"), end_time: Some(UntilYear(Number(1999))) }, ZoneInfo { offset: 7200, saving: Multiple("Palestine"), format: Placeholder("EE%sT"), end_time: None }]
Identifier: Etc/GMT+4
[ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Helsinki
[ZoneInfo { offset: 5989, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1878), May, Ordinal(31))) }, ZoneInfo { offset: 5989, saving: NoSaving, format: Constant("HMT"), end_time: Some(UntilMonth(Number(1921), May)) }, ZoneInfo { offset: 7200, saving: Multiple("Finland"), format: Placeholder("EE%sT"), end_time: Some(UntilYear(Number(1983))) }, ZoneInfo { offset: 7200, saving: Multiple("EU"), format: Placeholder("EE%sT"), end_time: None }]
Identifier: Europe/Bucharest
[ZoneInfo { offset: 6264, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1891), October)) }, ZoneInfo { offset: 6264, saving: NoSaving, format: Constant("BMT"), end_time: Some(UntilDay(Number(1931), July, Ordinal(24))) }, ZoneInfo { offset: 7200, saving: Multiple("Romania"), format: Placeholder("EE%sT"), end_time: Some(UntilTime(Number(1981), March, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 7200, saving: Multiple("C-Eur"), format: Placeholder("EE%sT"), end_time: Some(UntilYear(Number(1991))) }, ZoneInfo { offset: 7200, saving: Multiple("Romania"), format: Placeholder("EE%sT"), end_time: Some(UntilYear(Number(1994))) }, ZoneInfo { offset: 7200, saving: Multiple("E-Eur"), format: Placeholder("EE%sT"), end_time: Some(UntilYear(Number(1997))) }, ZoneInfo { offset: 7200, saving: Multiple("EU"), format: Placeholder("EE%sT"), end_time: None }]
Identifier: America/Los_Angeles
[ZoneInfo { offset: -28378, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(20, 0), UTC))) }, ZoneInfo { offset: -28800, saving: Multiple("US"), format: Placeholder("P%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -28800, saving: Multiple("CA"), format: Placeholder("P%sT"), end_time: Some(UntilYear(Number(1967))) }, ZoneInfo { offset: -28800, saving: Multiple("US"), format: Placeholder("P%sT"), end_time: None }]
Identifier: Pacific/Honolulu
[ZoneInfo { offset: -37886, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1896), January, Ordinal(13), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: -37800, saving: NoSaving, format: Constant("HST"), end_time: Some(UntilTime(Number(1933), April, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -37800, saving: OneOff(3600), format: Constant("HDT"), end_time: Some(UntilTime(Number(1933), May, Ordinal(21), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: -37800, saving: Multiple("US"), format: Placeholder("H%sT"), end_time: Some(UntilTime(Number(1947), June, Ordinal(8), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -36000, saving: NoSaving, format: Constant("HST"), end_time: None }]
Identifier: Africa/Casablanca
[ZoneInfo { offset: -1820, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1913), October, Ordinal(26))) }, ZoneInfo { offset: 0, saving: Multiple("Morocco"), format: Constant("%z"), end_time: Some(UntilDay(Number(1984), March, Ordinal(16))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1986))) }, ZoneInfo { offset: 0, saving: Multiple("Morocco"), format: Constant("%z"), end_time: Some(UntilTime(Number(2018), October, Ordinal(28), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 3600, saving: Multiple("Morocco"), format: Constant("%z"), end_time: None }]
Identifier: Etc/GMT-13
[ZoneInfo { offset: 46800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Khandyga
[ZoneInfo { offset: 32533, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1919), December, Ordinal(15))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 32400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 28800, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 32400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilYear(Number(2004))) }, ZoneInfo { offset: 36000, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2011), September, Ordinal(13), TimeSpecAndType(HoursMinutes(0, 0), Standard))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Kuching
[ZoneInfo { offset: 26480, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1926), March)) }, ZoneInfo { offset: 27000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1933))) }, ZoneInfo { offset: 28800, saving: Multiple("NBorneo"), format: Constant("%z"), end_time: Some(UntilDay(Number(1942), February, Ordinal(16))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1945), September, Ordinal(12))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Indiana/Winamac
[ZoneInfo { offset: -20785, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(18, 0), UTC))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -21600, saving: Multiple("Pulaski"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1961), April, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilYear(Number(1969))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1971))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(2006), April, Ordinal(2), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(2007), March, Ordinal(11), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: None }]
Identifier: Africa/Sao_Tome
[ZoneInfo { offset: 1616, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1884))) }, ZoneInfo { offset: -2205, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1912), January, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), UTC))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("GMT"), end_time: Some(UntilTime(Number(2018), January, Ordinal(1), TimeSpecAndType(HoursMinutes(1, 0), Wall))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("WAT"), end_time: Some(UntilTime(Number(2019), January, Ordinal(1), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("GMT"), end_time: None }]
Identifier: Pacific/Rarotonga
[ZoneInfo { offset: 48056, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1899), December, Ordinal(26))) }, ZoneInfo { offset: -38344, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1952), October, Ordinal(16))) }, ZoneInfo { offset: -37800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1978), November, Ordinal(12))) }, ZoneInfo { offset: -36000, saving: Multiple("Cook"), format: Constant("%z"), end_time: None }]
Identifier: Europe/Riga
[ZoneInfo { offset: 5794, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 5794, saving: NoSaving, format: Constant("RMT"), end_time: Some(UntilTime(Number(1918), April, Ordinal(15), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 5794, saving: OneOff(3600), format: Constant("LST"), end_time: Some(UntilTime(Number(1918), September, Ordinal(16), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 5794, saving: NoSaving, format: Constant("RMT"), end_time: Some(UntilTime(Number(1919), April, Ordinal(1), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 5794, saving: OneOff(3600), format: Constant("LST"), end_time: Some(UntilTime(Number(1919), May, Ordinal(22), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 5794, saving: NoSaving, format: Constant("RMT"), end_time: Some(UntilDay(Number(1926), May, Ordinal(11))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilDay(Number(1940), August, Ordinal(5))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("MSK"), end_time: Some(UntilMonth(Number(1941), July)) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1944), October, Ordinal(13))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilTime(Number(1989), March, Last(Sunday), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 7200, saving: OneOff(3600), format: Constant("EEST"), end_time: Some(UntilTime(Number(1989), September, Last(Sunday), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 7200, saving: Multiple("Latvia"), format: Placeholder("EE%sT"), end_time: Some(UntilDay(Number(1997), January, Ordinal(21))) }, ZoneInfo { offset: 7200, saving: Multiple("EU"), format: Placeholder("EE%sT"), end_time: Some(UntilDay(Number(2000), February, Ordinal(29))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilDay(Number(2001), January, Ordinal(2))) }, ZoneInfo { offset: 7200, saving: Multiple("EU"), format: Placeholder("EE%sT"), end_time: None }]
Identifier: America/Nuuk
[ZoneInfo { offset: -12416, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1916), July, Ordinal(28))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1980), April, Ordinal(6), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -10800, saving: Multiple("EU"), format: Constant("%z"), end_time: Some(UntilTime(Number(2023), March, Ordinal(26), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: -7200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2023), October, Ordinal(29), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: -7200, saving: Multiple("EU"), format: Constant("%z"), end_time: None }]
Identifier: Pacific/Niue
[ZoneInfo { offset: -40780, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1952), October, Ordinal(16))) }, ZoneInfo { offset: -40800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1964), July)) }, ZoneInfo { offset: -39600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Pacific/Palau
[ZoneInfo { offset: -54124, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1844), December, Ordinal(31))) }, ZoneInfo { offset: 32276, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1901))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Vilnius
[ZoneInfo { offset: 6076, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 5040, saving: NoSaving, format: Constant("WMT"), end_time: Some(UntilYear(Number(1917))) }, ZoneInfo { offset: 5736, saving: NoSaving, format: Constant("KMT"), end_time: Some(UntilDay(Number(1919), October, Ordinal(10))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("CET"), end_time: Some(UntilDay(Number(1920), July, Ordinal(12))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilDay(Number(1920), October, Ordinal(9))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("CET"), end_time: Some(UntilDay(Number(1940), August, Ordinal(3))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("MSK"), end_time: Some(UntilDay(Number(1941), June, Ordinal(24))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilMonth(Number(1944), August)) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilTime(Number(1989), March, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 7200, saving: Multiple("Russia"), format: Placeholder("EE%sT"), end_time: Some(UntilTime(Number(1991), September, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 7200, saving: Multiple("C-Eur"), format: Placeholder("EE%sT"), end_time: Some(UntilYear(Number(1998))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilTime(Number(1998), March, Ordinal(29), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: Some(UntilTime(Number(1999), October, Ordinal(31), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilDay(Number(2003), January, Ordinal(1))) }, ZoneInfo { offset: 7200, saving: Multiple("EU"), format: Placeholder("EE%sT"), end_time: None }]
Identifier: Asia/Novokuznetsk
[ZoneInfo { offset: 20928, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(1))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 25200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 25200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2010), March, Ordinal(28), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Tehran
[ZoneInfo { offset: 12344, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1916))) }, ZoneInfo { offset: 12344, saving: NoSaving, format: Constant("TMT"), end_time: Some(UntilDay(Number(1935), June, Ordinal(13))) }, ZoneInfo { offset: 12600, saving: Multiple("Iran"), format: Constant("%z"), end_time: Some(UntilTime(Number(1977), October, Ordinal(20), TimeSpecAndType(HoursMinutes(24, 0), Wall))) }, ZoneInfo { offset: 14400, saving: Multiple("Iran"), format: Constant("%z"), end_time: Some(UntilYear(Number(1979))) }, ZoneInfo { offset: 12600, saving: Multiple("Iran"), format: Constant("%z"), end_time: None }]
Identifier: Asia/Qatar
[ZoneInfo { offset: 12368, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1920))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1972), June)) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Metlakatla
[ZoneInfo { offset: 54822, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1867), October, Ordinal(19), TimeSpecAndType(HoursMinutesSeconds(15, 44, 55), Wall))) }, ZoneInfo { offset: -31578, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1900), August, Ordinal(20), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilYear(Number(1942))) }, ZoneInfo { offset: -28800, saving: Multiple("US"), format: Placeholder("P%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilYear(Number(1969))) }, ZoneInfo { offset: -28800, saving: Multiple("US"), format: Placeholder("P%sT"), end_time: Some(UntilTime(Number(1983), October, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilTime(Number(2015), November, Ordinal(1), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -32400, saving: Multiple("US"), format: Placeholder("AK%sT"), end_time: Some(UntilTime(Number(2018), November, Ordinal(4), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilTime(Number(2019), January, Ordinal(20), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -32400, saving: Multiple("US"), format: Placeholder("AK%sT"), end_time: None }]
Identifier: America/Indiana/Knox
[ZoneInfo { offset: -20790, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(18, 0), UTC))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1947))) }, ZoneInfo { offset: -21600, saving: Multiple("Starke"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1962), April, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(1963), October, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1991), October, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(2006), April, Ordinal(2), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: None }]
Identifier: America/Hermosillo
[ZoneInfo { offset: -26632, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1922), January, Ordinal(1), TimeSpecAndType(HoursMinutes(7, 0), UTC))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilDay(Number(1927), June, Ordinal(10))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilDay(Number(1930), November, Ordinal(15))) }, ZoneInfo { offset: -25200, saving: Multiple("Mexico"), format: Placeholder("M%sT"), end_time: Some(UntilDay(Number(1932), April, Ordinal(1))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilDay(Number(1942), April, Ordinal(24))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilYear(Number(1996))) }, ZoneInfo { offset: -25200, saving: Multiple("Mexico"), format: Placeholder("M%sT"), end_time: Some(UntilYear(Number(1999))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: None }]
Identifier: America/Costa_Rica
[ZoneInfo { offset: -20173, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -20173, saving: NoSaving, format: Constant("SJMT"), end_time: Some(UntilDay(Number(1921), January, Ordinal(15))) }, ZoneInfo { offset: -21600, saving: Multiple("CR"), format: Placeholder("C%sT"), end_time: None }]
Identifier: Asia/Dhaka
[ZoneInfo { offset: 21700, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: 21200, saving: NoSaving, format: Constant("HMT"), end_time: Some(UntilMonth(Number(1941), October)) }, ZoneInfo { offset: 23400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1942), May, Ordinal(15))) }, ZoneInfo { offset: 19800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1942), September)) }, ZoneInfo { offset: 23400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1951), September, Ordinal(30))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(2009))) }, ZoneInfo { offset: 21600, saving: Multiple("Dhaka"), format: Constant("%z"), end_time: None }]
Identifier: Europe/Sofia
[ZoneInfo { offset: 5596, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 7016, saving: NoSaving, format: Constant("IMT"), end_time: Some(UntilDay(Number(1894), November, Ordinal(30))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilTime(Number(1942), November, Ordinal(2), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1945))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("CET"), end_time: Some(UntilTime(Number(1945), April, Ordinal(2), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilTime(Number(1979), March, Ordinal(31), TimeSpecAndType(HoursMinutes(23, 0), Wall))) }, ZoneInfo { offset: 7200, saving: Multiple("Bulg"), format: Placeholder("EE%sT"), end_time: Some(UntilTime(Number(1982), September, Ordinal(26), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 7200, saving: Multiple("C-Eur"), format: Placeholder("EE%sT"), end_time: Some(UntilYear(Number(1991))) }, ZoneInfo { offset: 7200, saving: Multiple("E-Eur"), format: Placeholder("EE%sT"), end_time: Some(UntilYear(Number(1997))) }, ZoneInfo { offset: 7200, saving: Multiple("EU"), format: Placeholder("EE%sT"), end_time: None }]
Identifier: America/Argentina/San_Luis
[ZoneInfo { offset: -15924, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1894), October, Ordinal(31))) }, ZoneInfo { offset: -15408, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilMonth(Number(1920), May)) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1930), December)) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1969), October, Ordinal(5))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilYear(Number(1990))) }, ZoneInfo { offset: -10800, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(1990), March, Ordinal(14))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1990), October, Ordinal(15))) }, ZoneInfo { offset: -14400, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(1991), March, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1991), June, Ordinal(1))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1999), October, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), March, Ordinal(3))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), May, Ordinal(31))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), July, Ordinal(25))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2008), January, Ordinal(21))) }, ZoneInfo { offset: -14400, saving: Multiple("SanLuis"), format: Constant("%z"), end_time: Some(UntilDay(Number(2009), October, Ordinal(11))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Belem
[ZoneInfo { offset: -11636, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(1988), September, Ordinal(12))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Urumqi
[ZoneInfo { offset: 21020, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1928))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Chisinau
[ZoneInfo { offset: 6920, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 6900, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilDay(Number(1918), February, Ordinal(15))) }, ZoneInfo { offset: 6264, saving: NoSaving, format: Constant("BMT"), end_time: Some(UntilDay(Number(1931), July, Ordinal(24))) }, ZoneInfo { offset: 7200, saving: Multiple("Romania"), format: Placeholder("EE%sT"), end_time: Some(UntilDay(Number(1940), August, Ordinal(15))) }, ZoneInfo { offset: 7200, saving: OneOff(3600), format: Constant("EEST"), end_time: Some(UntilDay(Number(1941), July, Ordinal(17))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1944), August, Ordinal(24))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilTime(Number(1990), May, Ordinal(6), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 7200, saving: Multiple("Russia"), format: Placeholder("EE%sT"), end_time: Some(UntilYear(Number(1992))) }, ZoneInfo { offset: 7200, saving: Multiple("E-Eur"), format: Placeholder("EE%sT"), end_time: Some(UntilYear(Number(1997))) }, ZoneInfo { offset: 7200, saving: Multiple("Moldova"), format: Placeholder("EE%sT"), end_time: None }]
Identifier: America/Argentina/Mendoza
[ZoneInfo { offset: -16516, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1894), October, Ordinal(31))) }, ZoneInfo { offset: -15408, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilMonth(Number(1920), May)) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1930), December)) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1969), October, Ordinal(5))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1990), March, Ordinal(4))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1990), October, Ordinal(15))) }, ZoneInfo { offset: -14400, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(1991), March, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1991), October, Ordinal(15))) }, ZoneInfo { offset: -14400, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(1992), March, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1992), October, Ordinal(18))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1999), October, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), March, Ordinal(3))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), May, Ordinal(23))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), September, Ordinal(26))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2008), October, Ordinal(18))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Bahia
[ZoneInfo { offset: -9244, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(2003), September, Ordinal(24))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2011), October, Ordinal(16))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(2012), October, Ordinal(21))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Campo_Grande
[ZoneInfo { offset: -13108, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -14400, saving: Multiple("Brazil"), format: Constant("%z"), end_time: None }]
Identifier: Pacific/Apia
[ZoneInfo { offset: 45184, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1892), July, Ordinal(5))) }, ZoneInfo { offset: -41216, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1911))) }, ZoneInfo { offset: -41400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1950))) }, ZoneInfo { offset: -39600, saving: Multiple("WS"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), December, Ordinal(29), TimeSpecAndType(HoursMinutes(24, 0), Wall))) }, ZoneInfo { offset: 46800, saving: Multiple("WS"), format: Constant("%z"), end_time: None }]
Identifier: Asia/Ho_Chi_Minh
[ZoneInfo { offset: 25590, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1906), July, Ordinal(1))) }, ZoneInfo { offset: 25590, saving: NoSaving, format: Constant("PLMT"), end_time: Some(UntilDay(Number(1911), May, Ordinal(1))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1942), December, Ordinal(31), TimeSpecAndType(HoursMinutes(23, 0), Wall))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1945), March, Ordinal(14), TimeSpecAndType(HoursMinutes(23, 0), Wall))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1945), September, Ordinal(1), TimeSpecAndType(HoursMinutes(24, 0), Wall))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1947), April, Ordinal(1))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1955), July, Ordinal(1), TimeSpecAndType(HoursMinutes(1, 0), Wall))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1959), December, Ordinal(31), TimeSpecAndType(HoursMinutes(23, 0), Wall))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1975), June, Ordinal(13))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Indiana/Tell_City
[ZoneInfo { offset: -20823, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(18, 0), UTC))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -21600, saving: Multiple("Perry"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1964), April, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(1967), October, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1969), April, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1971))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(2006), April, Ordinal(2), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: None }]
Identifier: America/Santiago
[ZoneInfo { offset: -16965, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -16965, saving: NoSaving, format: Constant("SMT"), end_time: Some(UntilDay(Number(1910), January, Ordinal(10))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1916), July, Ordinal(1))) }, ZoneInfo { offset: -16965, saving: NoSaving, format: Constant("SMT"), end_time: Some(UntilDay(Number(1918), September, Ordinal(10))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1919), July, Ordinal(1))) }, ZoneInfo { offset: -16965, saving: NoSaving, format: Constant("SMT"), end_time: Some(UntilDay(Number(1927), September, Ordinal(1))) }, ZoneInfo { offset: -18000, saving: Multiple("Chile"), format: Constant("%z"), end_time: Some(UntilDay(Number(1932), September, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1942), June, Ordinal(1))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1942), August, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1946), July, Ordinal(14), TimeSpecAndType(HoursMinutes(24, 0), Wall))) }, ZoneInfo { offset: -14400, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilTime(Number(1946), August, Ordinal(28), TimeSpecAndType(HoursMinutes(24, 0), Wall))) }, ZoneInfo { offset: -18000, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilTime(Number(1947), March, Ordinal(31), TimeSpecAndType(HoursMinutes(24, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1947), May, Ordinal(21), TimeSpecAndType(HoursMinutes(23, 0), Wall))) }, ZoneInfo { offset: -14400, saving: Multiple("Chile"), format: Constant("%z"), end_time: None }]
Identifier: Asia/Bangkok
[ZoneInfo { offset: 24124, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 24124, saving: NoSaving, format: Constant("BMT"), end_time: Some(UntilMonth(Number(1920), April)) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Shanghai
[ZoneInfo { offset: 29143, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1901))) }, ZoneInfo { offset: 28800, saving: Multiple("Shang"), format: Placeholder("C%sT"), end_time: Some(UntilDay(Number(1949), May, Ordinal(28))) }, ZoneInfo { offset: 28800, saving: Multiple("PRC"), format: Placeholder("C%sT"), end_time: None }]
Identifier: America/Yakutat
[ZoneInfo { offset: 52865, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1867), October, Ordinal(19), TimeSpecAndType(HoursMinutesSeconds(15, 12, 18), Wall))) }, ZoneInfo { offset: -33535, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1900), August, Ordinal(20), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: -32400, saving: NoSaving, format: Constant("YST"), end_time: Some(UntilYear(Number(1942))) }, ZoneInfo { offset: -32400, saving: Multiple("US"), format: Placeholder("Y%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -32400, saving: NoSaving, format: Constant("YST"), end_time: Some(UntilYear(Number(1969))) }, ZoneInfo { offset: -32400, saving: Multiple("US"), format: Placeholder("Y%sT"), end_time: Some(UntilDay(Number(1983), November, Ordinal(30))) }, ZoneInfo { offset: -32400, saving: Multiple("US"), format: Placeholder("AK%sT"), end_time: None }]
Identifier: America/Winnipeg
[ZoneInfo { offset: -23316, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1887), July, Ordinal(16))) }, ZoneInfo { offset: -21600, saving: Multiple("Winn"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(2006))) }, ZoneInfo { offset: -21600, saving: Multiple("Canada"), format: Placeholder("C%sT"), end_time: None }]
Identifier: America/La_Paz
[ZoneInfo { offset: -16356, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -16356, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilDay(Number(1931), October, Ordinal(15))) }, ZoneInfo { offset: -16356, saving: OneOff(3600), format: Constant("BST"), end_time: Some(UntilDay(Number(1932), March, Ordinal(21))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Dili
[ZoneInfo { offset: 30140, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1911), December, Ordinal(31), TimeSpecAndType(HoursMinutes(16, 0), UTC))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1942), February, Ordinal(21), TimeSpecAndType(HoursMinutes(23, 0), Wall))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1976), May, Ordinal(3))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2000), September, Ordinal(17), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Indiana/Marengo
[ZoneInfo { offset: -20723, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(18, 0), UTC))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1951))) }, ZoneInfo { offset: -21600, saving: Multiple("Marengo"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1961), April, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilYear(Number(1969))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilTime(Number(1974), January, Ordinal(6), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: OneOff(3600), format: Constant("CDT"), end_time: Some(UntilTime(Number(1974), October, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1976))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilYear(Number(2006))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: None }]
Identifier: America/Dawson_Creek
[ZoneInfo { offset: -28856, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1884))) }, ZoneInfo { offset: -28800, saving: Multiple("Canada"), format: Placeholder("P%sT"), end_time: Some(UntilYear(Number(1947))) }, ZoneInfo { offset: -28800, saving: Multiple("Vanc"), format: Placeholder("P%sT"), end_time: Some(UntilTime(Number(1972), August, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: None }]
Identifier: Antarctica/Casey
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilYear(Number(1969))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2009), October, Ordinal(18), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2010), March, Ordinal(5), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2011), October, Ordinal(28), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2012), February, Ordinal(21), TimeSpecAndType(HoursMinutes(17, 0), UTC))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2016), October, Ordinal(22))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2018), March, Ordinal(11), TimeSpecAndType(HoursMinutes(4, 0), Wall))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2018), October, Ordinal(7), TimeSpecAndType(HoursMinutes(4, 0), Wall))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2019), March, Ordinal(17), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2019), October, Ordinal(4), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2020), March, Ordinal(8), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2020), October, Ordinal(4), TimeSpecAndType(HoursMinutes(0, 1), Wall))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2021), March, Ordinal(14), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2021), October, Ordinal(3), TimeSpecAndType(HoursMinutes(0, 1), Wall))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2022), March, Ordinal(13), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2022), October, Ordinal(2), TimeSpecAndType(HoursMinutes(0, 1), Wall))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2023), March, Ordinal(9), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Danmarkshavn
[ZoneInfo { offset: -4480, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1916), July, Ordinal(28))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1980), April, Ordinal(6), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -10800, saving: Multiple("EU"), format: Constant("%z"), end_time: Some(UntilYear(Number(1996))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("GMT"), end_time: None }]
Identifier: America/Manaus
[ZoneInfo { offset: -14404, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -14400, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(1988), September, Ordinal(12))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1993), September, Ordinal(28))) }, ZoneInfo { offset: -14400, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(1994), September, Ordinal(22))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Atlantic/South_Georgia
[ZoneInfo { offset: -8768, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -7200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Ulaanbaatar
[ZoneInfo { offset: 25652, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1905), August)) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1978))) }, ZoneInfo { offset: 28800, saving: Multiple("Mongol"), format: Constant("%z"), end_time: None }]
Identifier: America/Bogota
[ZoneInfo { offset: -17776, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1884), March, Ordinal(13))) }, ZoneInfo { offset: -17776, saving: NoSaving, format: Constant("BMT"), end_time: Some(UntilDay(Number(1914), November, Ordinal(23))) }, ZoneInfo { offset: -18000, saving: Multiple("CO"), format: Constant("%z"), end_time: None }]
Identifier: Asia/Dubai
[ZoneInfo { offset: 13272, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1920))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Guatemala
[ZoneInfo { offset: -21724, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1918), October, Ordinal(5))) }, ZoneInfo { offset: -21600, saving: Multiple("Guat"), format: Placeholder("C%sT"), end_time: None }]
Identifier: Europe/London
[ZoneInfo { offset: -75, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1847), December, Ordinal(1))) }, ZoneInfo { offset: 0, saving: Multiple("GB-Eire"), format: Placeholder("%s"), end_time: Some(UntilDay(Number(1968), October, Ordinal(27))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("BST"), end_time: Some(UntilTime(Number(1971), October, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), UTC))) }, ZoneInfo { offset: 0, saving: Multiple("GB-Eire"), format: Placeholder("%s"), end_time: Some(UntilYear(Number(1996))) }, ZoneInfo { offset: 0, saving: Multiple("EU"), format: Alternate { standard: "GMT", dst: "BST" }, end_time: None }]
Identifier: Etc/GMT+2
[ZoneInfo { offset: -7200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Argentina/Jujuy
[ZoneInfo { offset: -15672, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1894), October, Ordinal(31))) }, ZoneInfo { offset: -15408, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilMonth(Number(1920), May)) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1930), December)) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1969), October, Ordinal(5))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1990), March, Ordinal(4))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1990), October, Ordinal(28))) }, ZoneInfo { offset: -14400, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(1991), March, Ordinal(17))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1991), October, Ordinal(6))) }, ZoneInfo { offset: -10800, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilYear(Number(1992))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1999), October, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), March, Ordinal(3))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2008), October, Ordinal(18))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Thimphu
[ZoneInfo { offset: 21516, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1947), August, Ordinal(15))) }, ZoneInfo { offset: 19800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1987), October)) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Tirane
[ZoneInfo { offset: 4760, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("CET"), end_time: Some(UntilDay(Number(1940), June, Ordinal(16))) }, ZoneInfo { offset: 3600, saving: Multiple("Albania"), format: Placeholder("CE%sT"), end_time: Some(UntilMonth(Number(1984), July)) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: Australia/Eucla
[ZoneInfo { offset: 30928, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1895), December)) }, ZoneInfo { offset: 31500, saving: Multiple("Aus"), format: Constant("%z"), end_time: Some(UntilMonth(Number(1943), July)) }, ZoneInfo { offset: 31500, saving: Multiple("AW"), format: Constant("%z"), end_time: None }]
Identifier: America/Glace_Bay
[ZoneInfo { offset: -14388, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1902), June, Ordinal(15))) }, ZoneInfo { offset: -14400, saving: Multiple("Canada"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(1953))) }, ZoneInfo { offset: -14400, saving: Multiple("Halifax"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(1954))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("AST"), end_time: Some(UntilYear(Number(1972))) }, ZoneInfo { offset: -14400, saving: Multiple("Halifax"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(1974))) }, ZoneInfo { offset: -14400, saving: Multiple("Canada"), format: Placeholder("A%sT"), end_time: None }]
Identifier: Asia/Bishkek
[ZoneInfo { offset: 17904, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 21600, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), August, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 18000, saving: Multiple("Kyrgyz"), format: Constant("%z"), end_time: Some(UntilDay(Number(2005), August, Ordinal(12))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Pacific/Tahiti
[ZoneInfo { offset: -35896, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1912), October, Ordinal(1))) }, ZoneInfo { offset: -36000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Athens
[ZoneInfo { offset: 5692, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1895), September, Ordinal(14))) }, ZoneInfo { offset: 5692, saving: NoSaving, format: Constant("AMT"), end_time: Some(UntilTime(Number(1916), July, Ordinal(28), TimeSpecAndType(HoursMinutes(0, 1), Wall))) }, ZoneInfo { offset: 7200, saving: Multiple("Greece"), format: Placeholder("EE%sT"), end_time: Some(UntilDay(Number(1941), April, Ordinal(30))) }, ZoneInfo { offset: 3600, saving: Multiple("Greece"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1944), April, Ordinal(4))) }, ZoneInfo { offset: 7200, saving: Multiple("Greece"), format: Placeholder("EE%sT"), end_time: Some(UntilYear(Number(1981))) }, ZoneInfo { offset: 7200, saving: Multiple("EU"), format: Placeholder("EE%sT"), end_time: None }]
Identifier: America/Managua
[ZoneInfo { offset: -20708, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -20712, saving: NoSaving, format: Constant("MMT"), end_time: Some(UntilDay(Number(1934), June, Ordinal(23))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilMonth(Number(1973), May)) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilDay(Number(1975), February, Ordinal(16))) }, ZoneInfo { offset: -21600, saving: Multiple("Nic"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1992), January, Ordinal(1), TimeSpecAndType(HoursMinutes(4, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilDay(Number(1992), September, Ordinal(24))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilYear(Number(1993))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilYear(Number(1997))) }, ZoneInfo { offset: -21600, saving: Multiple("Nic"), format: Placeholder("C%sT"), end_time: None }]
Identifier: Europe/Volgograd
[ZoneInfo { offset: 10660, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1920), January, Ordinal(3))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1961), November, Ordinal(11))) }, ZoneInfo { offset: 14400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1988), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1992), March, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("MSK"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("MSK"), end_time: Some(UntilTime(Number(2018), October, Ordinal(28), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2020), December, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("MSK"), end_time: None }]
Identifier: America/Toronto
[ZoneInfo { offset: -19052, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1895))) }, ZoneInfo { offset: -18000, saving: Multiple("Canada"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1919))) }, ZoneInfo { offset: -18000, saving: Multiple("Toronto"), format: Placeholder("E%sT"), end_time: Some(UntilTime(Number(1942), February, Ordinal(9), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: -18000, saving: Multiple("Canada"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -18000, saving: Multiple("Toronto"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1974))) }, ZoneInfo { offset: -18000, saving: Multiple("Canada"), format: Placeholder("E%sT"), end_time: None }]
Identifier: Etc/GMT-14
[ZoneInfo { offset: 50400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Tokyo
[ZoneInfo { offset: 33539, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1887), December, Ordinal(31), TimeSpecAndType(HoursMinutes(15, 0), UTC))) }, ZoneInfo { offset: 32400, saving: Multiple("Japan"), format: Placeholder("J%sT"), end_time: None }]
Identifier: Asia/Aqtobe
[ZoneInfo { offset: 13720, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1981), April, Ordinal(1))) }, ZoneInfo { offset: 18000, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(1981), October, Ordinal(1))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1982), April, Ordinal(1))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2004), October, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Etc/GMT-9
[ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Etc/GMT-6
[ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Nome
[ZoneInfo { offset: 46702, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1867), October, Ordinal(19), TimeSpecAndType(HoursMinutesSeconds(13, 29, 35), Wall))) }, ZoneInfo { offset: -39698, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1900), August, Ordinal(20), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: -39600, saving: NoSaving, format: Constant("NST"), end_time: Some(UntilYear(Number(1942))) }, ZoneInfo { offset: -39600, saving: Multiple("US"), format: Placeholder("N%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -39600, saving: NoSaving, format: Constant("NST"), end_time: Some(UntilMonth(Number(1967), April)) }, ZoneInfo { offset: -39600, saving: NoSaving, format: Constant("BST"), end_time: Some(UntilYear(Number(1969))) }, ZoneInfo { offset: -39600, saving: Multiple("US"), format: Placeholder("B%sT"), end_time: Some(UntilTime(Number(1983), October, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -32400, saving: Multiple("US"), format: Placeholder("Y%sT"), end_time: Some(UntilDay(Number(1983), November, Ordinal(30))) }, ZoneInfo { offset: -32400, saving: Multiple("US"), format: Placeholder("AK%sT"), end_time: None }]
Identifier: Asia/Kolkata
[ZoneInfo { offset: 21208, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1854), June, Ordinal(28))) }, ZoneInfo { offset: 21200, saving: NoSaving, format: Constant("HMT"), end_time: Some(UntilYear(Number(1870))) }, ZoneInfo { offset: 19270, saving: NoSaving, format: Constant("MMT"), end_time: Some(UntilDay(Number(1906), January, Ordinal(1))) }, ZoneInfo { offset: 19800, saving: NoSaving, format: Constant("IST"), end_time: Some(UntilMonth(Number(1941), October)) }, ZoneInfo { offset: 19800, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(1942), May, Ordinal(15))) }, ZoneInfo { offset: 19800, saving: NoSaving, format: Constant("IST"), end_time: Some(UntilMonth(Number(1942), September)) }, ZoneInfo { offset: 19800, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(1945), October, Ordinal(15))) }, ZoneInfo { offset: 19800, saving: NoSaving, format: Constant("IST"), end_time: None }]
Identifier: America/Regina
[ZoneInfo { offset: -25116, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1905), September)) }, ZoneInfo { offset: -25200, saving: Multiple("Regina"), format: Placeholder("M%sT"), end_time: Some(UntilTime(Number(1960), April, Last(Sunday), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: None }]
Identifier: Asia/Damascus
[ZoneInfo { offset: 8712, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1920))) }, ZoneInfo { offset: 7200, saving: Multiple("Syria"), format: Placeholder("EE%sT"), end_time: Some(UntilTime(Number(2022), October, Ordinal(28), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Ulyanovsk
[ZoneInfo { offset: 11616, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1919), July, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), UTC))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 14400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1989), March, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 7200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2016), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Irkutsk
[ZoneInfo { offset: 25025, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 25025, saving: NoSaving, format: Constant("IMT"), end_time: Some(UntilDay(Number(1920), January, Ordinal(25))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 28800, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 25200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 28800, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Etc/GMT+3
[ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Chihuahua
[ZoneInfo { offset: -25460, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1922), January, Ordinal(1), TimeSpecAndType(HoursMinutes(7, 0), UTC))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilDay(Number(1927), June, Ordinal(10))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilDay(Number(1930), November, Ordinal(15))) }, ZoneInfo { offset: -25200, saving: Multiple("Mexico"), format: Placeholder("M%sT"), end_time: Some(UntilDay(Number(1932), April, Ordinal(1))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilYear(Number(1996))) }, ZoneInfo { offset: -21600, saving: Multiple("Mexico"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1998))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilTime(Number(1998), April, FirstOnOrAfter(Sunday, 1), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: -25200, saving: Multiple("Mexico"), format: Placeholder("M%sT"), end_time: Some(UntilTime(Number(2022), October, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: None }]
Identifier: Africa/Ceuta
[ZoneInfo { offset: -1276, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1901), January, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), UTC))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("WET"), end_time: Some(UntilTime(Number(1918), May, Ordinal(6), TimeSpecAndType(HoursMinutes(23, 0), Wall))) }, ZoneInfo { offset: 0, saving: OneOff(3600), format: Constant("WEST"), end_time: Some(UntilTime(Number(1918), October, Ordinal(7), TimeSpecAndType(HoursMinutes(23, 0), Wall))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("WET"), end_time: Some(UntilYear(Number(1924))) }, ZoneInfo { offset: 0, saving: Multiple("Spain"), format: Placeholder("WE%sT"), end_time: Some(UntilYear(Number(1929))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("WET"), end_time: Some(UntilYear(Number(1967))) }, ZoneInfo { offset: 0, saving: Multiple("SpainAfrica"), format: Placeholder("WE%sT"), end_time: Some(UntilDay(Number(1984), March, Ordinal(16))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("CET"), end_time: Some(UntilYear(Number(1986))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: Australia/Lindeman
[ZoneInfo { offset: 35756, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1895))) }, ZoneInfo { offset: 36000, saving: Multiple("Aus"), format: Placeholder("AE%sT"), end_time: Some(UntilYear(Number(1971))) }, ZoneInfo { offset: 36000, saving: Multiple("AQ"), format: Placeholder("AE%sT"), end_time: Some(UntilMonth(Number(1992), July)) }, ZoneInfo { offset: 36000, saving: Multiple("Holiday"), format: Placeholder("AE%sT"), end_time: None }]
Identifier: America/Argentina/Ushuaia
[ZoneInfo { offset: -16392, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1894), October, Ordinal(31))) }, ZoneInfo { offset: -15408, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilMonth(Number(1920), May)) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1930), December)) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1969), October, Ordinal(5))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1999), October, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), March, Ordinal(3))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), May, Ordinal(30))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), June, Ordinal(20))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2008), October, Ordinal(18))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Malta
[ZoneInfo { offset: 3484, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1893), November, Ordinal(2))) }, ZoneInfo { offset: 3600, saving: Multiple("Italy"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1973), March, Ordinal(31))) }, ZoneInfo { offset: 3600, saving: Multiple("Malta"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1981))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: America/Kentucky/Louisville
[ZoneInfo { offset: -20582, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(18, 0), UTC))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1921))) }, ZoneInfo { offset: -21600, saving: Multiple("Louisville"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1942))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -21600, saving: Multiple("Louisville"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1961), July, Ordinal(23), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilYear(Number(1968))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilTime(Number(1974), January, Ordinal(6), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: OneOff(3600), format: Constant("CDT"), end_time: Some(UntilTime(Number(1974), October, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: None }]
Identifier: Etc/GMT-3
[ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Panama
[ZoneInfo { offset: -19088, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -19176, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilDay(Number(1908), April, Ordinal(22))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: None }]
Identifier: Pacific/Easter
[ZoneInfo { offset: -26248, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -26248, saving: NoSaving, format: Constant("EMT"), end_time: Some(UntilMonth(Number(1932), September)) }, ZoneInfo { offset: -25200, saving: Multiple("Chile"), format: Constant("%z"), end_time: Some(UntilTime(Number(1982), March, Ordinal(14), TimeSpecAndType(HoursMinutes(3, 0), UTC))) }, ZoneInfo { offset: -21600, saving: Multiple("Chile"), format: Constant("%z"), end_time: None }]
Identifier: Europe/Belgrade
[ZoneInfo { offset: 4920, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1884))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("CET"), end_time: Some(UntilTime(Number(1941), April, Ordinal(18), TimeSpecAndType(HoursMinutes(23, 0), Wall))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1945))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("CET"), end_time: Some(UntilTime(Number(1945), May, Ordinal(8), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 3600, saving: OneOff(3600), format: Constant("CEST"), end_time: Some(UntilTime(Number(1945), September, Ordinal(16), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("CET"), end_time: Some(UntilDay(Number(1982), November, Ordinal(27))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: America/Ciudad_Juarez
[ZoneInfo { offset: -25556, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1922), January, Ordinal(1), TimeSpecAndType(HoursMinutes(7, 0), UTC))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilDay(Number(1927), June, Ordinal(10))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilDay(Number(1930), November, Ordinal(15))) }, ZoneInfo { offset: -25200, saving: Multiple("Mexico"), format: Placeholder("M%sT"), end_time: Some(UntilDay(Number(1932), April, Ordinal(1))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilYear(Number(1996))) }, ZoneInfo { offset: -21600, saving: Multiple("Mexico"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1998))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilTime(Number(1998), April, FirstOnOrAfter(Sunday, 1), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: -25200, saving: Multiple("Mexico"), format: Placeholder("M%sT"), end_time: Some(UntilYear(Number(2010))) }, ZoneInfo { offset: -25200, saving: Multiple("US"), format: Placeholder("M%sT"), end_time: Some(UntilTime(Number(2022), October, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilTime(Number(2022), November, Ordinal(30), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: -25200, saving: Multiple("US"), format: Placeholder("M%sT"), end_time: None }]
Identifier: America/Port-au-Prince
[ZoneInfo { offset: -17360, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -17340, saving: NoSaving, format: Constant("PPMT"), end_time: Some(UntilTime(Number(1917), January, Ordinal(24), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("Haiti"), format: Placeholder("E%sT"), end_time: None }]
Identifier: Africa/Nairobi
[ZoneInfo { offset: 8836, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1908), May)) }, ZoneInfo { offset: 9000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1928), June, Ordinal(30), TimeSpecAndType(HoursMinutes(24, 0), Wall))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("EAT"), end_time: Some(UntilTime(Number(1930), January, Ordinal(4), TimeSpecAndType(HoursMinutes(24, 0), Wall))) }, ZoneInfo { offset: 9000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1936), December, Ordinal(31), TimeSpecAndType(HoursMinutes(24, 0), Wall))) }, ZoneInfo { offset: 9900, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1942), July, Ordinal(31), TimeSpecAndType(HoursMinutes(24, 0), Wall))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("EAT"), end_time: None }]
Identifier: Asia/Kathmandu
[ZoneInfo { offset: 20476, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1920))) }, ZoneInfo { offset: 19800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1986))) }, ZoneInfo { offset: 20700, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Warsaw
[ZoneInfo { offset: 5040, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 5040, saving: NoSaving, format: Constant("WMT"), end_time: Some(UntilDay(Number(1915), August, Ordinal(5))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilTime(Number(1918), September, Ordinal(16), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 7200, saving: Multiple("Poland"), format: Placeholder("EE%sT"), end_time: Some(UntilMonth(Number(1922), June)) }, ZoneInfo { offset: 3600, saving: Multiple("Poland"), format: Placeholder("CE%sT"), end_time: Some(UntilTime(Number(1940), June, Ordinal(23), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilMonth(Number(1944), October)) }, ZoneInfo { offset: 3600, saving: Multiple("Poland"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1977))) }, ZoneInfo { offset: 3600, saving: Multiple("W-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1988))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: Asia/Krasnoyarsk
[ZoneInfo { offset: 22286, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1920), January, Ordinal(6))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 25200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 25200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Atlantic/Bermuda
[ZoneInfo { offset: -15558, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -15558, saving: Multiple("Bermuda"), format: Alternate { standard: "BMT", dst: "BST" }, end_time: Some(UntilTime(Number(1930), January, Ordinal(1), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -14400, saving: Multiple("Bermuda"), format: Placeholder("A%sT"), end_time: Some(UntilTime(Number(1974), April, Ordinal(28), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -14400, saving: Multiple("Canada"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(1976))) }, ZoneInfo { offset: -14400, saving: Multiple("US"), format: Placeholder("A%sT"), end_time: None }]
Identifier: Pacific/Nauru
[ZoneInfo { offset: 40060, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1921), January, Ordinal(15))) }, ZoneInfo { offset: 41400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1942), August, Ordinal(29))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1945), September, Ordinal(8))) }, ZoneInfo { offset: 41400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1979), February, Ordinal(10), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 43200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Scoresbysund
[ZoneInfo { offset: -5272, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1916), July, Ordinal(28))) }, ZoneInfo { offset: -7200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1980), April, Ordinal(6), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -7200, saving: Multiple("C-Eur"), format: Constant("%z"), end_time: Some(UntilDay(Number(1981), March, Ordinal(29))) }, ZoneInfo { offset: -3600, saving: Multiple("EU"), format: Constant("%z"), end_time: Some(UntilDay(Number(2024), March, Ordinal(31))) }, ZoneInfo { offset: -7200, saving: Multiple("EU"), format: Constant("%z"), end_time: None }]
Identifier: America/Denver
[ZoneInfo { offset: -25196, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(19, 0), UTC))) }, ZoneInfo { offset: -25200, saving: Multiple("US"), format: Placeholder("M%sT"), end_time: Some(UntilYear(Number(1920))) }, ZoneInfo { offset: -25200, saving: Multiple("Denver"), format: Placeholder("M%sT"), end_time: Some(UntilYear(Number(1942))) }, ZoneInfo { offset: -25200, saving: Multiple("US"), format: Placeholder("M%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -25200, saving: Multiple("Denver"), format: Placeholder("M%sT"), end_time: Some(UntilYear(Number(1967))) }, ZoneInfo { offset: -25200, saving: Multiple("US"), format: Placeholder("M%sT"), end_time: None }]
Identifier: America/Indiana/Vincennes
[ZoneInfo { offset: -21007, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(18, 0), UTC))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -21600, saving: Multiple("Vincennes"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1964), April, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilYear(Number(1969))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1971))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(2006), April, Ordinal(2), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(2007), November, Ordinal(4), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: None }]
Identifier: Asia/Pontianak
[ZoneInfo { offset: 26240, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1908), May)) }, ZoneInfo { offset: 26240, saving: NoSaving, format: Constant("PMT"), end_time: Some(UntilMonth(Number(1932), November)) }, ZoneInfo { offset: 27000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1942), January, Ordinal(29))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1945), September, Ordinal(23))) }, ZoneInfo { offset: 27000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1948), May)) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1950), May)) }, ZoneInfo { offset: 27000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1964))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("WITA"), end_time: Some(UntilDay(Number(1988), January, Ordinal(1))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("WIB"), end_time: None }]
Identifier: Africa/Juba
[ZoneInfo { offset: 7588, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1931))) }, ZoneInfo { offset: 7200, saving: Multiple("Sudan"), format: Placeholder("CA%sT"), end_time: Some(UntilTime(Number(2000), January, Ordinal(15), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("EAT"), end_time: Some(UntilTime(Number(2021), February, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("CAT"), end_time: None }]
Identifier: Africa/Monrovia
[ZoneInfo { offset: -2588, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1882))) }, ZoneInfo { offset: -2588, saving: NoSaving, format: Constant("MMT"), end_time: Some(UntilMonth(Number(1919), March)) }, ZoneInfo { offset: -2670, saving: NoSaving, format: Constant("MMT"), end_time: Some(UntilDay(Number(1972), January, Ordinal(7))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("GMT"), end_time: None }]
Identifier: America/Argentina/Cordoba
[ZoneInfo { offset: -15408, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1894), October, Ordinal(31))) }, ZoneInfo { offset: -15408, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilMonth(Number(1920), May)) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1930), December)) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1969), October, Ordinal(5))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1991), March, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1991), October, Ordinal(20))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1999), October, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), March, Ordinal(3))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: None }]
Identifier: Asia/Ust-Nera
[ZoneInfo { offset: 34374, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1919), December, Ordinal(15))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 32400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilDay(Number(1981), April, Ordinal(1))) }, ZoneInfo { offset: 39600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 36000, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 39600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 43200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2011), September, Ordinal(13), TimeSpecAndType(HoursMinutes(0, 0), Standard))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Thule
[ZoneInfo { offset: -16508, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1916), July, Ordinal(28))) }, ZoneInfo { offset: -14400, saving: Multiple("Thule"), format: Placeholder("A%sT"), end_time: None }]
Identifier: Europe/Simferopol
[ZoneInfo { offset: 8184, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 8160, saving: NoSaving, format: Constant("SMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("MSK"), end_time: Some(UntilMonth(Number(1941), November)) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1944), April, Ordinal(13))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilYear(Number(1990))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("MSK"), end_time: Some(UntilTime(Number(1990), July, Ordinal(1), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilDay(Number(1992), March, Ordinal(20))) }, ZoneInfo { offset: 7200, saving: Multiple("C-Eur"), format: Placeholder("EE%sT"), end_time: Some(UntilMonth(Number(1994), May)) }, ZoneInfo { offset: 10800, saving: Multiple("C-Eur"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilTime(Number(1996), March, Ordinal(31), TimeSpecAndType(HoursMinutes(0, 0), Standard))) }, ZoneInfo { offset: 10800, saving: OneOff(3600), format: Constant("MSD"), end_time: Some(UntilTime(Number(1996), October, Ordinal(27), TimeSpecAndType(HoursMinutes(3, 0), Standard))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("MSK"), end_time: Some(UntilTime(Number(1997), March, Last(Sunday), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: 7200, saving: Multiple("EU"), format: Placeholder("EE%sT"), end_time: Some(UntilTime(Number(2014), March, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("MSK"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("MSK"), end_time: None }]
Identifier: America/Maceio
[ZoneInfo { offset: -8572, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(1990), September, Ordinal(17))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1995), October, Ordinal(13))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(1996), September, Ordinal(4))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1999), September, Ordinal(30))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), October, Ordinal(22))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2001), September, Ordinal(13))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(2002), October, Ordinal(1))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Africa/Khartoum
[ZoneInfo { offset: 7808, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1931))) }, ZoneInfo { offset: 7200, saving: Multiple("Sudan"), format: Placeholder("CA%sT"), end_time: Some(UntilTime(Number(2000), January, Ordinal(15), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("EAT"), end_time: Some(UntilDay(Number(2017), November, Ordinal(1))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("CAT"), end_time: None }]
Identifier: Europe/Moscow
[ZoneInfo { offset: 9017, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 9017, saving: NoSaving, format: Constant("MMT"), end_time: Some(UntilDay(Number(1916), July, Ordinal(3))) }, ZoneInfo { offset: 9079, saving: Multiple("Russia"), format: Placeholder("%s"), end_time: Some(UntilTime(Number(1919), July, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), UTC))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Placeholder("%s"), end_time: Some(UntilMonth(Number(1921), October)) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilMonth(Number(1922), October)) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 7200, saving: Multiple("Russia"), format: Placeholder("EE%sT"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("MSK"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("MSK"), end_time: None }]
Identifier: America/North_Dakota/New_Salem
[ZoneInfo { offset: -24339, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(19, 0), UTC))) }, ZoneInfo { offset: -25200, saving: Multiple("US"), format: Placeholder("M%sT"), end_time: Some(UntilTime(Number(2003), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: None }]
Identifier: Asia/Baku
[ZoneInfo { offset: 11964, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1957), March)) }, ZoneInfo { offset: 14400, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), September, Last(Sunday), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1996))) }, ZoneInfo { offset: 14400, saving: Multiple("EUAsia"), format: Constant("%z"), end_time: Some(UntilYear(Number(1997))) }, ZoneInfo { offset: 14400, saving: Multiple("Azer"), format: Constant("%z"), end_time: None }]
Identifier: Asia/Famagusta
[ZoneInfo { offset: 8148, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1921), November, Ordinal(14))) }, ZoneInfo { offset: 7200, saving: Multiple("Cyprus"), format: Placeholder("EE%sT"), end_time: Some(UntilMonth(Number(1998), September)) }, ZoneInfo { offset: 7200, saving: Multiple("EUAsia"), format: Placeholder("EE%sT"), end_time: Some(UntilDay(Number(2016), September, Ordinal(8))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2017), October, Ordinal(29), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: 7200, saving: Multiple("EUAsia"), format: Placeholder("EE%sT"), end_time: None }]
Identifier: Etc/GMT-1
[ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Cayenne
[ZoneInfo { offset: -12560, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1911), July, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1967), October)) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Africa/Algiers
[ZoneInfo { offset: 732, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1891), March, Ordinal(16))) }, ZoneInfo { offset: 561, saving: NoSaving, format: Constant("PMT"), end_time: Some(UntilDay(Number(1911), March, Ordinal(11))) }, ZoneInfo { offset: 0, saving: Multiple("Algeria"), format: Placeholder("WE%sT"), end_time: Some(UntilTime(Number(1940), February, Ordinal(25), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 3600, saving: Multiple("Algeria"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1946), October, Ordinal(7))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("WET"), end_time: Some(UntilDay(Number(1956), January, Ordinal(29))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("CET"), end_time: Some(UntilDay(Number(1963), April, Ordinal(14))) }, ZoneInfo { offset: 0, saving: Multiple("Algeria"), format: Placeholder("WE%sT"), end_time: Some(UntilDay(Number(1977), October, Ordinal(21))) }, ZoneInfo { offset: 3600, saving: Multiple("Algeria"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1979), October, Ordinal(26))) }, ZoneInfo { offset: 0, saving: Multiple("Algeria"), format: Placeholder("WE%sT"), end_time: Some(UntilMonth(Number(1981), May)) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("CET"), end_time: None }]
Identifier: Asia/Vladivostok
[ZoneInfo { offset: 31651, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1922), November, Ordinal(15))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 36000, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 32400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 36000, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Kentucky/Monticello
[ZoneInfo { offset: -20364, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(18, 0), UTC))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilYear(Number(1968))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(2000), October, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: None }]
Identifier: Antarctica/Mawson
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilDay(Number(1954), February, Ordinal(13))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2009), October, Ordinal(18), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Etc/GMT+10
[ZoneInfo { offset: -36000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Pacific/Tarawa
[ZoneInfo { offset: 41524, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1901))) }, ZoneInfo { offset: 43200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Africa/Windhoek
[ZoneInfo { offset: 4104, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1892), February, Ordinal(8))) }, ZoneInfo { offset: 5400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1903), March)) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("SAST"), end_time: Some(UntilTime(Number(1942), September, Ordinal(20), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 7200, saving: OneOff(3600), format: Constant("SAST"), end_time: Some(UntilTime(Number(1943), March, Ordinal(21), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("SAST"), end_time: Some(UntilDay(Number(1990), March, Ordinal(21))) }, ZoneInfo { offset: 7200, saving: Multiple("Namibia"), format: Placeholder("%s"), end_time: None }]
Identifier: Atlantic/Faroe
[ZoneInfo { offset: -1624, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1908), January, Ordinal(11))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("WET"), end_time: Some(UntilYear(Number(1981))) }, ZoneInfo { offset: 0, saving: Multiple("EU"), format: Placeholder("WE%sT"), end_time: None }]
Identifier: Europe/Samara
[ZoneInfo { offset: 12020, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1919), July, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), UTC))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1935), January, Ordinal(27))) }, ZoneInfo { offset: 14400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1989), March, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 7200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), September, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1991), October, Ordinal(20), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 14400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2010), March, Ordinal(28), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Australia/Lord_Howe
[ZoneInfo { offset: 38180, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1895), February)) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("AEST"), end_time: Some(UntilMonth(Number(1981), March)) }, ZoneInfo { offset: 37800, saving: Multiple("LH"), format: Constant("%z"), end_time: Some(UntilMonth(Number(1985), July)) }, ZoneInfo { offset: 37800, saving: Multiple("LH"), format: Constant("%z"), end_time: None }]
Identifier: Europe/Budapest
[ZoneInfo { offset: 4580, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1890), November, Ordinal(1))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1918))) }, ZoneInfo { offset: 3600, saving: Multiple("Hungary"), format: Placeholder("CE%sT"), end_time: Some(UntilTime(Number(1941), April, Ordinal(7), TimeSpecAndType(HoursMinutes(23, 0), Wall))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1945))) }, ZoneInfo { offset: 3600, saving: Multiple("Hungary"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1984))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: America/Guyana
[ZoneInfo { offset: -13959, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1911), August, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1915), March, Ordinal(1))) }, ZoneInfo { offset: -13500, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1975), August, Ordinal(1))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1992), March, Ordinal(29), TimeSpecAndType(HoursMinutes(1, 0), Wall))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Pacific/Noumea
[ZoneInfo { offset: 39948, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1912), January, Ordinal(13))) }, ZoneInfo { offset: 39600, saving: Multiple("NC"), format: Constant("%z"), end_time: None }]
Identifier: America/Eirunepe
[ZoneInfo { offset: -16768, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -18000, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(1988), September, Ordinal(12))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1993), September, Ordinal(28))) }, ZoneInfo { offset: -18000, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(1994), September, Ordinal(22))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2008), June, Ordinal(24), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2013), November, Ordinal(10))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Etc/GMT-11
[ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Antarctica/Troll
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilDay(Number(2005), February, Ordinal(12))) }, ZoneInfo { offset: 0, saving: Multiple("Troll"), format: Placeholder("%s"), end_time: None }]
Identifier: Europe/Dublin
[ZoneInfo { offset: -1521, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1880), August, Ordinal(2))) }, ZoneInfo { offset: -1521, saving: NoSaving, format: Constant("DMT"), end_time: Some(UntilTime(Number(1916), May, Ordinal(21), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: -1521, saving: OneOff(3600), format: Constant("IST"), end_time: Some(UntilTime(Number(1916), October, Ordinal(1), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 0, saving: Multiple("GB-Eire"), format: Placeholder("%s"), end_time: Some(UntilDay(Number(1921), December, Ordinal(6))) }, ZoneInfo { offset: 0, saving: Multiple("GB-Eire"), format: Alternate { standard: "GMT", dst: "IST" }, end_time: Some(UntilTime(Number(1940), February, Ordinal(25), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 0, saving: OneOff(3600), format: Constant("IST"), end_time: Some(UntilTime(Number(1946), October, Ordinal(6), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("GMT"), end_time: Some(UntilTime(Number(1947), March, Ordinal(16), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 0, saving: OneOff(3600), format: Constant("IST"), end_time: Some(UntilTime(Number(1947), November, Ordinal(2), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("GMT"), end_time: Some(UntilTime(Number(1948), April, Ordinal(18), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 0, saving: Multiple("GB-Eire"), format: Alternate { standard: "GMT", dst: "IST" }, end_time: Some(UntilDay(Number(1968), October, Ordinal(27))) }, ZoneInfo { offset: 3600, saving: Multiple("Eire"), format: Alternate { standard: "IST", dst: "GMT" }, end_time: None }]
Identifier: America/Tijuana
[ZoneInfo { offset: -28084, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1922), January, Ordinal(1), TimeSpecAndType(HoursMinutes(7, 0), UTC))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilYear(Number(1924))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilDay(Number(1927), June, Ordinal(10))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilDay(Number(1930), November, Ordinal(15))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilDay(Number(1931), April, Ordinal(1))) }, ZoneInfo { offset: -28800, saving: OneOff(3600), format: Constant("PDT"), end_time: Some(UntilDay(Number(1931), September, Ordinal(30))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilDay(Number(1942), April, Ordinal(24))) }, ZoneInfo { offset: -28800, saving: OneOff(3600), format: Constant("PWT"), end_time: Some(UntilTime(Number(1945), August, Ordinal(14), TimeSpecAndType(HoursMinutes(23, 0), UTC))) }, ZoneInfo { offset: -28800, saving: OneOff(3600), format: Constant("PPT"), end_time: Some(UntilDay(Number(1945), November, Ordinal(15))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilDay(Number(1948), April, Ordinal(5))) }, ZoneInfo { offset: -28800, saving: OneOff(3600), format: Constant("PDT"), end_time: Some(UntilDay(Number(1949), January, Ordinal(14))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilDay(Number(1950), May, Ordinal(1))) }, ZoneInfo { offset: -28800, saving: OneOff(3600), format: Constant("PDT"), end_time: Some(UntilDay(Number(1950), September, Ordinal(24))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilTime(Number(1951), April, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -28800, saving: OneOff(3600), format: Constant("PDT"), end_time: Some(UntilTime(Number(1951), September, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilTime(Number(1952), April, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -28800, saving: OneOff(3600), format: Constant("PDT"), end_time: Some(UntilTime(Number(1952), September, Ordinal(28), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilYear(Number(1954))) }, ZoneInfo { offset: -28800, saving: Multiple("CA"), format: Placeholder("P%sT"), end_time: Some(UntilYear(Number(1961))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilYear(Number(1976))) }, ZoneInfo { offset: -28800, saving: Multiple("US"), format: Placeholder("P%sT"), end_time: Some(UntilYear(Number(1996))) }, ZoneInfo { offset: -28800, saving: Multiple("Mexico"), format: Placeholder("P%sT"), end_time: Some(UntilYear(Number(2001))) }, ZoneInfo { offset: -28800, saving: Multiple("US"), format: Placeholder("P%sT"), end_time: Some(UntilDay(Number(2002), February, Ordinal(20))) }, ZoneInfo { offset: -28800, saving: Multiple("Mexico"), format: Placeholder("P%sT"), end_time: Some(UntilYear(Number(2010))) }, ZoneInfo { offset: -28800, saving: Multiple("US"), format: Placeholder("P%sT"), end_time: None }]
Identifier: Australia/Perth
[ZoneInfo { offset: 27804, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1895), December)) }, ZoneInfo { offset: 28800, saving: Multiple("Aus"), format: Placeholder("AW%sT"), end_time: Some(UntilMonth(Number(1943), July)) }, ZoneInfo { offset: 28800, saving: Multiple("AW"), format: Placeholder("AW%sT"), end_time: None }]
Identifier: Etc/GMT-5
[ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Resolute
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilDay(Number(1947), August, Ordinal(31))) }, ZoneInfo { offset: -21600, saving: Multiple("NT_YK"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(2000), October, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(2001), April, Ordinal(1), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("Canada"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(2006), October, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(2007), March, Ordinal(11), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("Canada"), format: Placeholder("C%sT"), end_time: None }]
Identifier: America/Tegucigalpa
[ZoneInfo { offset: -20932, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1921), April)) }, ZoneInfo { offset: -21600, saving: Multiple("Hond"), format: Placeholder("C%sT"), end_time: None }]
Identifier: Antarctica/Palmer
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilYear(Number(1965))) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1969), October, Ordinal(5))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilMonth(Number(1982), May)) }, ZoneInfo { offset: -14400, saving: Multiple("Chile"), format: Constant("%z"), end_time: Some(UntilDay(Number(2016), December, Ordinal(4))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/New_York
[ZoneInfo { offset: -17762, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(17, 0), UTC))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1920))) }, ZoneInfo { offset: -18000, saving: Multiple("NYC"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1942))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -18000, saving: Multiple("NYC"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1967))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: None }]
Identifier: Atlantic/Madeira
[ZoneInfo { offset: -4056, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1884))) }, ZoneInfo { offset: -4056, saving: NoSaving, format: Constant("FMT"), end_time: Some(UntilTime(Number(1912), January, Ordinal(1), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: -3600, saving: Multiple("Port"), format: Constant("%z"), end_time: Some(UntilTime(Number(1966), October, Ordinal(2), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("WET"), end_time: Some(UntilDay(Number(1982), April, Ordinal(4))) }, ZoneInfo { offset: 0, saving: Multiple("Port"), format: Placeholder("WE%sT"), end_time: Some(UntilDay(Number(1986), July, Ordinal(31))) }, ZoneInfo { offset: 0, saving: Multiple("EU"), format: Placeholder("WE%sT"), end_time: None }]
Identifier: Antarctica/Rothera
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilDay(Number(1976), December, Ordinal(1))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Jayapura
[ZoneInfo { offset: 33768, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1932), November)) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1944), September, Ordinal(1))) }, ZoneInfo { offset: 34200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1964))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("WIT"), end_time: None }]
Identifier: America/Sao_Paulo
[ZoneInfo { offset: -11188, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilTime(Number(1963), October, Ordinal(23), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: -10800, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilYear(Number(1964))) }, ZoneInfo { offset: -10800, saving: Multiple("Brazil"), format: Constant("%z"), end_time: None }]
Identifier: America/Cancun
[ZoneInfo { offset: -20824, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1922), January, Ordinal(1), TimeSpecAndType(HoursMinutes(6, 0), UTC))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilTime(Number(1981), December, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(1983), January, Ordinal(4), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("Mexico"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1997), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("Mexico"), format: Placeholder("E%sT"), end_time: Some(UntilTime(Number(1998), August, Ordinal(2), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("Mexico"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(2015), February, Ordinal(1), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: None }]
Identifier: Indian/Chagos
[ZoneInfo { offset: 17380, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1907))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilYear(Number(1996))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Etc/GMT+6
[ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Ojinaga
[ZoneInfo { offset: -25060, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1922), January, Ordinal(1), TimeSpecAndType(HoursMinutes(7, 0), UTC))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilDay(Number(1927), June, Ordinal(10))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilDay(Number(1930), November, Ordinal(15))) }, ZoneInfo { offset: -25200, saving: Multiple("Mexico"), format: Placeholder("M%sT"), end_time: Some(UntilDay(Number(1932), April, Ordinal(1))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilYear(Number(1996))) }, ZoneInfo { offset: -21600, saving: Multiple("Mexico"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1998))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilTime(Number(1998), April, FirstOnOrAfter(Sunday, 1), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: -25200, saving: Multiple("Mexico"), format: Placeholder("M%sT"), end_time: Some(UntilYear(Number(2010))) }, ZoneInfo { offset: -25200, saving: Multiple("US"), format: Placeholder("M%sT"), end_time: Some(UntilTime(Number(2022), October, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilTime(Number(2022), November, Ordinal(30), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: None }]
Identifier: Pacific/Efate
[ZoneInfo { offset: 40396, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1912), January, Ordinal(13))) }, ZoneInfo { offset: 39600, saving: Multiple("Vanuatu"), format: Constant("%z"), end_time: None }]
Identifier: Europe/Gibraltar
[ZoneInfo { offset: -1284, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1880), August, Ordinal(2))) }, ZoneInfo { offset: 0, saving: Multiple("GB-Eire"), format: Placeholder("%s"), end_time: Some(UntilTime(Number(1957), April, Ordinal(14), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 3600, saving: NoSaving, format: Constant("CET"), end_time: Some(UntilYear(Number(1982))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: America/St_Johns
[ZoneInfo { offset: -12652, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1884))) }, ZoneInfo { offset: -12652, saving: Multiple("StJohns"), format: Placeholder("N%sT"), end_time: Some(UntilYear(Number(1918))) }, ZoneInfo { offset: -12652, saving: Multiple("Canada"), format: Placeholder("N%sT"), end_time: Some(UntilYear(Number(1919))) }, ZoneInfo { offset: -12652, saving: Multiple("StJohns"), format: Placeholder("N%sT"), end_time: Some(UntilDay(Number(1935), March, Ordinal(30))) }, ZoneInfo { offset: -12600, saving: Multiple("StJohns"), format: Placeholder("N%sT"), end_time: Some(UntilDay(Number(1942), May, Ordinal(11))) }, ZoneInfo { offset: -12600, saving: Multiple("Canada"), format: Placeholder("N%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -12600, saving: Multiple("StJohns"), format: Placeholder("N%sT"), end_time: Some(UntilMonth(Number(2011), November)) }, ZoneInfo { offset: -12600, saving: Multiple("Canada"), format: Placeholder("N%sT"), end_time: None }]
Identifier: Asia/Yekaterinburg
[ZoneInfo { offset: 14553, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1916), July, Ordinal(3))) }, ZoneInfo { offset: 13505, saving: NoSaving, format: Constant("PMT"), end_time: Some(UntilTime(Number(1919), July, Ordinal(15), TimeSpecAndType(HoursMinutes(4, 0), Wall))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 18000, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Argentina/San_Juan
[ZoneInfo { offset: -16444, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1894), October, Ordinal(31))) }, ZoneInfo { offset: -15408, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilMonth(Number(1920), May)) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1930), December)) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1969), October, Ordinal(5))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1991), March, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1991), May, Ordinal(7))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1999), October, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), March, Ordinal(3))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), May, Ordinal(31))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), July, Ordinal(25))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2008), October, Ordinal(18))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Punta_Arenas
[ZoneInfo { offset: -17020, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -16965, saving: NoSaving, format: Constant("SMT"), end_time: Some(UntilDay(Number(1910), January, Ordinal(10))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1916), July, Ordinal(1))) }, ZoneInfo { offset: -16965, saving: NoSaving, format: Constant("SMT"), end_time: Some(UntilDay(Number(1918), September, Ordinal(10))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1919), July, Ordinal(1))) }, ZoneInfo { offset: -16965, saving: NoSaving, format: Constant("SMT"), end_time: Some(UntilDay(Number(1927), September, Ordinal(1))) }, ZoneInfo { offset: -18000, saving: Multiple("Chile"), format: Constant("%z"), end_time: Some(UntilDay(Number(1932), September, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1942), June, Ordinal(1))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1942), August, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1946), August, Ordinal(28), TimeSpecAndType(HoursMinutes(24, 0), Wall))) }, ZoneInfo { offset: -18000, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilTime(Number(1947), March, Ordinal(31), TimeSpecAndType(HoursMinutes(24, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1947), May, Ordinal(21), TimeSpecAndType(HoursMinutes(23, 0), Wall))) }, ZoneInfo { offset: -14400, saving: Multiple("Chile"), format: Constant("%z"), end_time: Some(UntilDay(Number(2016), December, Ordinal(4))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Havana
[ZoneInfo { offset: -19768, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: -19776, saving: NoSaving, format: Constant("HMT"), end_time: Some(UntilTime(Number(1925), July, Ordinal(19), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("Cuba"), format: Placeholder("C%sT"), end_time: None }]
Identifier: America/Noronha
[ZoneInfo { offset: -7780, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -7200, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(1990), September, Ordinal(17))) }, ZoneInfo { offset: -7200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1999), September, Ordinal(30))) }, ZoneInfo { offset: -7200, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), October, Ordinal(15))) }, ZoneInfo { offset: -7200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2001), September, Ordinal(13))) }, ZoneInfo { offset: -7200, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(2002), October, Ordinal(1))) }, ZoneInfo { offset: -7200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Africa/Cairo
[ZoneInfo { offset: 7509, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1900), October)) }, ZoneInfo { offset: 7200, saving: Multiple("Egypt"), format: Placeholder("EE%sT"), end_time: None }]
Identifier: America/Moncton
[ZoneInfo { offset: -15548, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1883), December, Ordinal(9))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilDay(Number(1902), June, Ordinal(15))) }, ZoneInfo { offset: -14400, saving: Multiple("Canada"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(1933))) }, ZoneInfo { offset: -14400, saving: Multiple("Moncton"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(1942))) }, ZoneInfo { offset: -14400, saving: Multiple("Canada"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -14400, saving: Multiple("Moncton"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(1973))) }, ZoneInfo { offset: -14400, saving: Multiple("Canada"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(1993))) }, ZoneInfo { offset: -14400, saving: Multiple("Moncton"), format: Placeholder("A%sT"), end_time: Some(UntilYear(Number(2007))) }, ZoneInfo { offset: -14400, saving: Multiple("Canada"), format: Placeholder("A%sT"), end_time: None }]
Identifier: Asia/Magadan
[ZoneInfo { offset: 36192, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 39600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 36000, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 39600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 43200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2016), April, Ordinal(24), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Istanbul
[ZoneInfo { offset: 6952, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 7016, saving: NoSaving, format: Constant("IMT"), end_time: Some(UntilMonth(Number(1910), October)) }, ZoneInfo { offset: 7200, saving: Multiple("Turkey"), format: Placeholder("EE%sT"), end_time: Some(UntilDay(Number(1978), June, Ordinal(29))) }, ZoneInfo { offset: 10800, saving: Multiple("Turkey"), format: Constant("%z"), end_time: Some(UntilTime(Number(1984), November, Ordinal(1), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 7200, saving: Multiple("Turkey"), format: Placeholder("EE%sT"), end_time: Some(UntilYear(Number(2007))) }, ZoneInfo { offset: 7200, saving: Multiple("EU"), format: Placeholder("EE%sT"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilTime(Number(2011), March, Ordinal(28), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: 7200, saving: Multiple("EU"), format: Placeholder("EE%sT"), end_time: Some(UntilTime(Number(2014), March, Ordinal(30), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilTime(Number(2014), March, Ordinal(31), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: 7200, saving: Multiple("EU"), format: Placeholder("EE%sT"), end_time: Some(UntilTime(Number(2015), October, Ordinal(25), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: 7200, saving: OneOff(3600), format: Constant("EEST"), end_time: Some(UntilTime(Number(2015), November, Ordinal(8), TimeSpecAndType(HoursMinutes(1, 0), UTC))) }, ZoneInfo { offset: 7200, saving: Multiple("EU"), format: Placeholder("EE%sT"), end_time: Some(UntilDay(Number(2016), September, Ordinal(7))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Kamchatka
[ZoneInfo { offset: 38076, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1922), November, Ordinal(10))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 43200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 39600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 43200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2010), March, Ordinal(28), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 39600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 43200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Berlin
[ZoneInfo { offset: 3208, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1893), April)) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilTime(Number(1945), May, Ordinal(24), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 3600, saving: Multiple("SovietZone"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: 3600, saving: Multiple("Germany"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1980))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: Asia/Baghdad
[ZoneInfo { offset: 10660, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1890))) }, ZoneInfo { offset: 10656, saving: NoSaving, format: Constant("BMT"), end_time: Some(UntilYear(Number(1918))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1982), May)) }, ZoneInfo { offset: 10800, saving: Multiple("Iraq"), format: Constant("%z"), end_time: None }]
Identifier: America/Sitka
[ZoneInfo { offset: 53927, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1867), October, Ordinal(19), TimeSpecAndType(HoursMinutes(15, 30), Wall))) }, ZoneInfo { offset: -32473, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1900), August, Ordinal(20), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilYear(Number(1942))) }, ZoneInfo { offset: -28800, saving: Multiple("US"), format: Placeholder("P%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("PST"), end_time: Some(UntilYear(Number(1969))) }, ZoneInfo { offset: -28800, saving: Multiple("US"), format: Placeholder("P%sT"), end_time: Some(UntilTime(Number(1983), October, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -32400, saving: Multiple("US"), format: Placeholder("Y%sT"), end_time: Some(UntilDay(Number(1983), November, Ordinal(30))) }, ZoneInfo { offset: -32400, saving: Multiple("US"), format: Placeholder("AK%sT"), end_time: None }]
Identifier: America/Cuiaba
[ZoneInfo { offset: -13460, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -14400, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(2003), September, Ordinal(24))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), October, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: Multiple("Brazil"), format: Constant("%z"), end_time: None }]
Identifier: Pacific/Fiji
[ZoneInfo { offset: 42944, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1915), October, Ordinal(26))) }, ZoneInfo { offset: 43200, saving: Multiple("Fiji"), format: Constant("%z"), end_time: None }]
Identifier: America/Detroit
[ZoneInfo { offset: -19931, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1905))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilTime(Number(1915), May, Ordinal(15), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilYear(Number(1942))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -18000, saving: Multiple("Detroit"), format: Placeholder("E%sT"), end_time: Some(UntilTime(Number(1967), June, Ordinal(14), TimeSpecAndType(HoursMinutes(0, 1), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1969))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilYear(Number(1973))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: Some(UntilYear(Number(1975))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(1975), April, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("US"), format: Placeholder("E%sT"), end_time: None }]
Identifier: America/Santarem
[ZoneInfo { offset: -13128, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -14400, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(1988), September, Ordinal(12))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2008), June, Ordinal(24), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Tallinn
[ZoneInfo { offset: 5940, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 5940, saving: NoSaving, format: Constant("TMT"), end_time: Some(UntilMonth(Number(1918), February)) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilMonth(Number(1919), July)) }, ZoneInfo { offset: 5940, saving: NoSaving, format: Constant("TMT"), end_time: Some(UntilMonth(Number(1921), May)) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilDay(Number(1940), August, Ordinal(6))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("MSK"), end_time: Some(UntilDay(Number(1941), September, Ordinal(15))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1944), September, Ordinal(22))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilTime(Number(1989), March, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 7200, saving: OneOff(3600), format: Constant("EEST"), end_time: Some(UntilTime(Number(1989), September, Ordinal(24), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 7200, saving: Multiple("C-Eur"), format: Placeholder("EE%sT"), end_time: Some(UntilDay(Number(1998), September, Ordinal(22))) }, ZoneInfo { offset: 7200, saving: Multiple("EU"), format: Placeholder("EE%sT"), end_time: Some(UntilTime(Number(1999), October, Ordinal(31), TimeSpecAndType(HoursMinutes(4, 0), Wall))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilDay(Number(2002), February, Ordinal(21))) }, ZoneInfo { offset: 7200, saving: Multiple("EU"), format: Placeholder("EE%sT"), end_time: None }]
Identifier: Etc/GMT-7
[ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Boise
[ZoneInfo { offset: -27889, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(20, 0), UTC))) }, ZoneInfo { offset: -28800, saving: Multiple("US"), format: Placeholder("P%sT"), end_time: Some(UntilTime(Number(1923), May, Ordinal(13), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -25200, saving: Multiple("US"), format: Placeholder("M%sT"), end_time: Some(UntilYear(Number(1974))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilTime(Number(1974), February, Ordinal(3), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -25200, saving: Multiple("US"), format: Placeholder("M%sT"), end_time: None }]
Identifier: America/El_Salvador
[ZoneInfo { offset: -21408, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1921))) }, ZoneInfo { offset: -21600, saving: Multiple("Salv"), format: Placeholder("C%sT"), end_time: None }]
Identifier: America/Swift_Current
[ZoneInfo { offset: -25880, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilMonth(Number(1905), September)) }, ZoneInfo { offset: -25200, saving: Multiple("Canada"), format: Placeholder("M%sT"), end_time: Some(UntilTime(Number(1946), April, Last(Sunday), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -25200, saving: Multiple("Regina"), format: Placeholder("M%sT"), end_time: Some(UntilYear(Number(1950))) }, ZoneInfo { offset: -25200, saving: Multiple("Swift"), format: Placeholder("M%sT"), end_time: Some(UntilTime(Number(1972), April, Last(Sunday), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: None }]
Identifier: America/Matamoros
[ZoneInfo { offset: -23400, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1922), January, Ordinal(1), TimeSpecAndType(HoursMinutes(6, 0), UTC))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilYear(Number(1988))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1989))) }, ZoneInfo { offset: -21600, saving: Multiple("Mexico"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(2010))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: None }]
Identifier: Asia/Yangon
[ZoneInfo { offset: 23087, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 23087, saving: NoSaving, format: Constant("RMT"), end_time: Some(UntilYear(Number(1920))) }, ZoneInfo { offset: 23400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1942), May)) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1945), May, Ordinal(3))) }, ZoneInfo { offset: 23400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Porto_Velho
[ZoneInfo { offset: -15336, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -14400, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(1988), September, Ordinal(12))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Chicago
[ZoneInfo { offset: -21036, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(18, 0), UTC))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1920))) }, ZoneInfo { offset: -21600, saving: Multiple("Chicago"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(1936), March, Ordinal(1), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: NoSaving, format: Constant("EST"), end_time: Some(UntilTime(Number(1936), November, Ordinal(15), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("Chicago"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1942))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -21600, saving: Multiple("Chicago"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1967))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: None }]
Identifier: America/Adak
[ZoneInfo { offset: 44002, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1867), October, Ordinal(19), TimeSpecAndType(HoursMinutesSeconds(12, 44, 35), Wall))) }, ZoneInfo { offset: -42398, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1900), August, Ordinal(20), TimeSpecAndType(HoursMinutes(12, 0), Wall))) }, ZoneInfo { offset: -39600, saving: NoSaving, format: Constant("NST"), end_time: Some(UntilYear(Number(1942))) }, ZoneInfo { offset: -39600, saving: Multiple("US"), format: Placeholder("N%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -39600, saving: NoSaving, format: Constant("NST"), end_time: Some(UntilMonth(Number(1967), April)) }, ZoneInfo { offset: -39600, saving: NoSaving, format: Constant("BST"), end_time: Some(UntilYear(Number(1969))) }, ZoneInfo { offset: -39600, saving: Multiple("US"), format: Placeholder("B%sT"), end_time: Some(UntilTime(Number(1983), October, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -36000, saving: Multiple("US"), format: Placeholder("AH%sT"), end_time: Some(UntilDay(Number(1983), November, Ordinal(30))) }, ZoneInfo { offset: -36000, saving: Multiple("US"), format: Placeholder("H%sT"), end_time: None }]
Identifier: America/Goose_Bay
[ZoneInfo { offset: -14500, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1884))) }, ZoneInfo { offset: -12652, saving: NoSaving, format: Constant("NST"), end_time: Some(UntilYear(Number(1918))) }, ZoneInfo { offset: -12652, saving: Multiple("Canada"), format: Placeholder("N%sT"), end_time: Some(UntilYear(Number(1919))) }, ZoneInfo { offset: -12652, saving: NoSaving, format: Constant("NST"), end_time: Some(UntilDay(Number(1935), March, Ordinal(30))) }, ZoneInfo { offset: -12600, saving: NoSaving, format: Constant("NST"), end_time: Some(UntilYear(Number(1936))) }, ZoneInfo { offset: -12600, saving: Multiple("StJohns"), format: Placeholder("N%sT"), end_time: Some(UntilDay(Number(1942), May, Ordinal(11))) }, ZoneInfo { offset: -12600, saving: Multiple("Canada"), format: Placeholder("N%sT"), end_time: Some(UntilYear(Number(1946))) }, ZoneInfo { offset: -12600, saving: Multiple("StJohns"), format: Placeholder("N%sT"), end_time: Some(UntilTime(Number(1966), March, Ordinal(15), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -14400, saving: Multiple("StJohns"), format: Placeholder("A%sT"), end_time: Some(UntilMonth(Number(2011), November)) }, ZoneInfo { offset: -14400, saving: Multiple("Canada"), format: Placeholder("A%sT"), end_time: None }]
Identifier: Pacific/Fakaofo
[ZoneInfo { offset: -41096, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1901))) }, ZoneInfo { offset: -39600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2011), December, Ordinal(30))) }, ZoneInfo { offset: 46800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Europe/Kyiv
[ZoneInfo { offset: 7324, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 7324, saving: NoSaving, format: Constant("KMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 7200, saving: NoSaving, format: Constant("EET"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 10800, saving: NoSaving, format: Constant("MSK"), end_time: Some(UntilDay(Number(1941), September, Ordinal(20))) }, ZoneInfo { offset: 3600, saving: Multiple("C-Eur"), format: Placeholder("CE%sT"), end_time: Some(UntilDay(Number(1943), November, Ordinal(6))) }, ZoneInfo { offset: 10800, saving: Multiple("Russia"), format: Alternate { standard: "MSK", dst: "MSD" }, end_time: Some(UntilTime(Number(1990), July, Ordinal(1), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 7200, saving: OneOff(3600), format: Constant("EEST"), end_time: Some(UntilTime(Number(1991), September, Ordinal(29), TimeSpecAndType(HoursMinutes(3, 0), Wall))) }, ZoneInfo { offset: 7200, saving: Multiple("C-Eur"), format: Placeholder("EE%sT"), end_time: Some(UntilDay(Number(1996), May, Ordinal(13))) }, ZoneInfo { offset: 7200, saving: Multiple("EU"), format: Placeholder("EE%sT"), end_time: None }]
Identifier: America/Argentina/Salta
[ZoneInfo { offset: -15700, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1894), October, Ordinal(31))) }, ZoneInfo { offset: -15408, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilMonth(Number(1920), May)) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1930), December)) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1969), October, Ordinal(5))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1991), March, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1991), October, Ordinal(20))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1999), October, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), March, Ordinal(3))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2008), October, Ordinal(18))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Qyzylorda
[ZoneInfo { offset: 15712, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1924), May, Ordinal(2))) }, ZoneInfo { offset: 14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1981), April, Ordinal(1))) }, ZoneInfo { offset: 18000, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilDay(Number(1981), October, Ordinal(1))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1982), April, Ordinal(1))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 14400, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), September, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), March, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 18000, saving: Multiple("RussiaAsia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2004), October, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2018), December, Ordinal(21), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: 18000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Mexico_City
[ZoneInfo { offset: -23796, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1922), January, Ordinal(1), TimeSpecAndType(HoursMinutes(7, 0), UTC))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilDay(Number(1927), June, Ordinal(10))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilDay(Number(1930), November, Ordinal(15))) }, ZoneInfo { offset: -25200, saving: Multiple("Mexico"), format: Placeholder("M%sT"), end_time: Some(UntilDay(Number(1932), April, Ordinal(1))) }, ZoneInfo { offset: -21600, saving: Multiple("Mexico"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(2001), September, Ordinal(30), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilDay(Number(2002), February, Ordinal(20))) }, ZoneInfo { offset: -21600, saving: Multiple("Mexico"), format: Placeholder("C%sT"), end_time: None }]
Identifier: Europe/Madrid
[ZoneInfo { offset: -884, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1901), January, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), UTC))) }, ZoneInfo { offset: 0, saving: Multiple("Spain"), format: Placeholder("WE%sT"), end_time: Some(UntilTime(Number(1940), March, Ordinal(16), TimeSpecAndType(HoursMinutes(23, 0), Wall))) }, ZoneInfo { offset: 3600, saving: Multiple("Spain"), format: Placeholder("CE%sT"), end_time: Some(UntilYear(Number(1979))) }, ZoneInfo { offset: 3600, saving: Multiple("EU"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: Pacific/Guadalcanal
[ZoneInfo { offset: 38388, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1912), October, Ordinal(1))) }, ZoneInfo { offset: 39600, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Africa/Tunis
[ZoneInfo { offset: 2444, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1881), May, Ordinal(12))) }, ZoneInfo { offset: 561, saving: NoSaving, format: Constant("PMT"), end_time: Some(UntilDay(Number(1911), March, Ordinal(11))) }, ZoneInfo { offset: 3600, saving: Multiple("Tunisia"), format: Placeholder("CE%sT"), end_time: None }]
Identifier: Etc/GMT+8
[ZoneInfo { offset: -28800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Pacific/Chatham
[ZoneInfo { offset: 44028, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1868), November, Ordinal(2))) }, ZoneInfo { offset: 44100, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1946), January, Ordinal(1))) }, ZoneInfo { offset: 45900, saving: Multiple("Chatham"), format: Constant("%z"), end_time: None }]
Identifier: Pacific/Pago_Pago
[ZoneInfo { offset: 45432, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1892), July, Ordinal(5))) }, ZoneInfo { offset: -40968, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1911))) }, ZoneInfo { offset: -39600, saving: NoSaving, format: Constant("SST"), end_time: None }]
Identifier: Asia/Chita
[ZoneInfo { offset: 27232, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1919), December, Ordinal(15))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 32400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 28800, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 32400, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2016), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Monterrey
[ZoneInfo { offset: -24076, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1922), January, Ordinal(1), TimeSpecAndType(HoursMinutes(6, 0), UTC))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilDay(Number(1927), June, Ordinal(10))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilDay(Number(1930), November, Ordinal(15))) }, ZoneInfo { offset: -25200, saving: Multiple("Mexico"), format: Placeholder("M%sT"), end_time: Some(UntilDay(Number(1932), April, Ordinal(1))) }, ZoneInfo { offset: -21600, saving: NoSaving, format: Constant("CST"), end_time: Some(UntilYear(Number(1988))) }, ZoneInfo { offset: -21600, saving: Multiple("US"), format: Placeholder("C%sT"), end_time: Some(UntilYear(Number(1989))) }, ZoneInfo { offset: -21600, saving: Multiple("Mexico"), format: Placeholder("C%sT"), end_time: None }]
Identifier: America/Phoenix
[ZoneInfo { offset: -26898, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1883), November, Ordinal(18), TimeSpecAndType(HoursMinutes(19, 0), UTC))) }, ZoneInfo { offset: -25200, saving: Multiple("US"), format: Placeholder("M%sT"), end_time: Some(UntilTime(Number(1944), January, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 1), Wall))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilTime(Number(1944), April, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 1), Wall))) }, ZoneInfo { offset: -25200, saving: Multiple("US"), format: Placeholder("M%sT"), end_time: Some(UntilTime(Number(1944), October, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 1), Wall))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: Some(UntilYear(Number(1967))) }, ZoneInfo { offset: -25200, saving: Multiple("US"), format: Placeholder("M%sT"), end_time: Some(UntilDay(Number(1968), March, Ordinal(21))) }, ZoneInfo { offset: -25200, saving: NoSaving, format: Constant("MST"), end_time: None }]
Identifier: Etc/GMT-10
[ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Colombo
[ZoneInfo { offset: 19164, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1880))) }, ZoneInfo { offset: 19172, saving: NoSaving, format: Constant("MMT"), end_time: Some(UntilYear(Number(1906))) }, ZoneInfo { offset: 19800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1942), January, Ordinal(5))) }, ZoneInfo { offset: 19800, saving: OneOff(1800), format: Constant("%z"), end_time: Some(UntilMonth(Number(1942), September)) }, ZoneInfo { offset: 19800, saving: OneOff(3600), format: Constant("%z"), end_time: Some(UntilTime(Number(1945), October, Ordinal(16), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 19800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1996), May, Ordinal(25), TimeSpecAndType(HoursMinutes(0, 0), Wall))) }, ZoneInfo { offset: 23400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(1996), October, Ordinal(26), TimeSpecAndType(HoursMinutes(0, 30), Wall))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2006), April, Ordinal(15), TimeSpecAndType(HoursMinutes(0, 30), Wall))) }, ZoneInfo { offset: 19800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Novosibirsk
[ZoneInfo { offset: 19900, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1919), December, Ordinal(14), TimeSpecAndType(HoursMinutes(6, 0), Wall))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1930), June, Ordinal(21))) }, ZoneInfo { offset: 25200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1991), March, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(1992), January, Ordinal(19), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 25200, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilDay(Number(1993), May, Ordinal(23))) }, ZoneInfo { offset: 21600, saving: Multiple("Russia"), format: Constant("%z"), end_time: Some(UntilTime(Number(2011), March, Ordinal(27), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2014), October, Ordinal(26), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 21600, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilTime(Number(2016), July, Ordinal(24), TimeSpecAndType(HoursMinutes(2, 0), Standard))) }, ZoneInfo { offset: 25200, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Etc/GMT
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("GMT"), end_time: None }]
Identifier: America/Vancouver
[ZoneInfo { offset: -29548, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1884))) }, ZoneInfo { offset: -28800, saving: Multiple("Vanc"), format: Placeholder("P%sT"), end_time: Some(UntilYear(Number(1987))) }, ZoneInfo { offset: -28800, saving: Multiple("Canada"), format: Placeholder("P%sT"), end_time: None }]
Identifier: America/Iqaluit
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilMonth(Number(1942), August)) }, ZoneInfo { offset: -18000, saving: Multiple("NT_YK"), format: Placeholder("E%sT"), end_time: Some(UntilTime(Number(1999), October, Ordinal(31), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -21600, saving: Multiple("Canada"), format: Placeholder("C%sT"), end_time: Some(UntilTime(Number(2000), October, Ordinal(29), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: -18000, saving: Multiple("Canada"), format: Placeholder("E%sT"), end_time: None }]
Identifier: Etc/GMT-8
[ZoneInfo { offset: 28800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Argentina/Catamarca
[ZoneInfo { offset: -15788, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1894), October, Ordinal(31))) }, ZoneInfo { offset: -15408, saving: NoSaving, format: Constant("CMT"), end_time: Some(UntilMonth(Number(1920), May)) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilMonth(Number(1930), December)) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1969), October, Ordinal(5))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1991), March, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1991), October, Ordinal(20))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(1999), October, Ordinal(3))) }, ZoneInfo { offset: -14400, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), March, Ordinal(3))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), June, Ordinal(1))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(2004), June, Ordinal(20))) }, ZoneInfo { offset: -10800, saving: Multiple("Arg"), format: Constant("%z"), end_time: Some(UntilDay(Number(2008), October, Ordinal(18))) }, ZoneInfo { offset: -10800, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: America/Boa_Vista
[ZoneInfo { offset: -14560, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilYear(Number(1914))) }, ZoneInfo { offset: -14400, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(1988), September, Ordinal(12))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: Some(UntilDay(Number(1999), September, Ordinal(30))) }, ZoneInfo { offset: -14400, saving: Multiple("Brazil"), format: Constant("%z"), end_time: Some(UntilDay(Number(2000), October, Ordinal(15))) }, ZoneInfo { offset: -14400, saving: NoSaving, format: Constant("%z"), end_time: None }]
Identifier: Asia/Manila
[ZoneInfo { offset: -57368, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilDay(Number(1844), December, Ordinal(31))) }, ZoneInfo { offset: 29032, saving: NoSaving, format: Constant("LMT"), end_time: Some(UntilTime(Number(1899), September, Ordinal(6), TimeSpecAndType(HoursMinutes(4, 0), UTC))) }, ZoneInfo { offset: 28800, saving: Multiple("Phil"), format: Placeholder("P%sT"), end_time: Some(UntilTime(Number(1942), February, Ordinal(11), TimeSpecAndType(HoursMinutes(24, 0), Wall))) }, ZoneInfo { offset: 32400, saving: NoSaving, format: Constant("JST"), end_time: Some(UntilDay(Number(1945), March, Ordinal(4))) }, ZoneInfo { offset: 28800, saving: Multiple("Phil"), format: Placeholder("P%sT"), end_time: None }]
Identifier: Antarctica/Macquarie
[ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilMonth(Number(1899), November)) }, ZoneInfo { offset: 36000, saving: NoSaving, format: Constant("AEST"), end_time: Some(UntilTime(Number(1916), October, Ordinal(1), TimeSpecAndType(HoursMinutes(2, 0), Wall))) }, ZoneInfo { offset: 36000, saving: OneOff(3600), format: Constant("AEDT"), end_time: Some(UntilMonth(Number(1917), February)) }, ZoneInfo { offset: 36000, saving: Multiple("Aus"), format: Placeholder("AE%sT"), end_time: Some(UntilTime(Number(1919), April, Ordinal(1), TimeSpecAndType(HoursMinutes(0, 0), Standard))) }, ZoneInfo { offset: 0, saving: NoSaving, format: Constant("-00"), end_time: Some(UntilDay(Number(1948), March, Ordinal(25))) }, ZoneInfo { offset: 36000, saving: Multiple("Aus"), format: Placeholder("AE%sT"), end_time: Some(UntilYear(Number(1967))) }, ZoneInfo { offset: 36000, saving: Multiple("AT"), format: Placeholder("AE%sT"), end_time: Some(UntilYear(Number(2010))) }, ZoneInfo { offset: 36000, saving: OneOff(3600), format: Constant("AEDT"), end_time: Some(UntilYear(Number(2011))) }, ZoneInfo { offset: 36000, saving: Multiple("AT"), format: Placeholder("AE%sT"), end_time: None }]
rulesets
"LH"
[RuleInfo { from_year: Number(1981), to_year: Some(Number(1984)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1982), to_year: Some(Number(1985)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1985), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(1986), to_year: Some(Number(1989)), month: March, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1986), to_year: None, month: October, day: Ordinal(19), time: 7200, time_type: Wall, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(1987), to_year: Some(Number(1999)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(1990), to_year: Some(Number(1995)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1996), to_year: Some(Number(2005)), month: March, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2000), to_year: None, month: August, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(2001), to_year: Some(Number(2007)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(2006), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2007), to_year: None, month: March, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2008), to_year: Some(Maximum), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2008), to_year: Some(Maximum), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 1800, letters: None }]
"Cook"
[RuleInfo { from_year: Number(1978), to_year: None, month: November, day: Ordinal(12), time: 0, time_type: Wall, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(1979), to_year: Some(Number(1991)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1979), to_year: Some(Number(1990)), month: October, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 1800, letters: None }]
"NC"
[RuleInfo { from_year: Number(1977), to_year: Some(Number(1978)), month: December, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1978), to_year: Some(Number(1979)), month: February, day: Ordinal(27), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1996), to_year: None, month: December, day: Ordinal(1), time: 7200, time_type: Standard, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1997), to_year: None, month: March, day: Ordinal(2), time: 7200, time_type: Standard, time_to_add: 0, letters: None }]
"SpainAfrica"
[RuleInfo { from_year: Number(1967), to_year: None, month: June, day: Ordinal(3), time: 43200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1967), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1974), to_year: None, month: June, day: Ordinal(24), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1974), to_year: None, month: September, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1976), to_year: Some(Number(1977)), month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1976), to_year: None, month: August, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1977), to_year: None, month: September, day: Ordinal(28), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: June, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1978), to_year: None, month: August, day: Ordinal(4), time: 0, time_type: Wall, time_to_add: 0, letters: None }]
"CR"
[RuleInfo { from_year: Number(1979), to_year: Some(Number(1980)), month: February, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1979), to_year: Some(Number(1980)), month: June, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1991), to_year: Some(Number(1992)), month: January, day: FirstOnOrAfter(Saturday, 15), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1991), to_year: None, month: July, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1992), to_year: None, month: March, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Greece"
[RuleInfo { from_year: Number(1932), to_year: None, month: July, day: Ordinal(7), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1932), to_year: None, month: September, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1941), to_year: None, month: April, day: Ordinal(7), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: November, day: Ordinal(2), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1943), to_year: None, month: March, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1943), to_year: None, month: October, day: Ordinal(4), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1952), to_year: None, month: July, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1952), to_year: None, month: November, day: Ordinal(2), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1975), to_year: None, month: April, day: Ordinal(12), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1975), to_year: None, month: November, day: Ordinal(26), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1976), to_year: None, month: April, day: Ordinal(11), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1976), to_year: None, month: October, day: Ordinal(10), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1977), to_year: Some(Number(1978)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: None, month: September, day: Ordinal(26), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: September, day: Ordinal(24), time: 14400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1979), to_year: None, month: April, day: Ordinal(1), time: 32400, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1979), to_year: None, month: September, day: Ordinal(29), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1980), to_year: None, month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1980), to_year: None, month: September, day: Ordinal(28), time: 0, time_type: Wall, time_to_add: 0, letters: None }]
"Guam"
[RuleInfo { from_year: Number(1959), to_year: None, month: June, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1961), to_year: None, month: January, day: Ordinal(29), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1967), to_year: None, month: September, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1969), to_year: None, month: January, day: Ordinal(26), time: 60, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1969), to_year: None, month: June, day: Ordinal(22), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1969), to_year: None, month: August, day: Ordinal(31), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1970), to_year: Some(Number(1971)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1970), to_year: Some(Number(1971)), month: September, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1973), to_year: None, month: December, day: Ordinal(16), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1974), to_year: None, month: February, day: Ordinal(24), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1976), to_year: None, month: May, day: Ordinal(26), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1976), to_year: None, month: August, day: Ordinal(22), time: 7260, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: None, month: April, day: Ordinal(24), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1977), to_year: None, month: August, day: Ordinal(28), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Perry"
[RuleInfo { from_year: Number(1955), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1955), to_year: Some(Number(1960)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1956), to_year: Some(Number(1963)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1961), to_year: Some(Number(1963)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Canada"
[RuleInfo { from_year: Number(1918), to_year: None, month: April, day: Ordinal(14), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1918), to_year: None, month: October, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: February, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("W") }, RuleInfo { from_year: Number(1945), to_year: None, month: August, day: Ordinal(14), time: 82800, time_type: UTC, time_to_add: 3600, letters: Some("P") }, RuleInfo { from_year: Number(1945), to_year: None, month: September, day: Ordinal(30), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1974), to_year: Some(Number(1986)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1974), to_year: Some(Number(2006)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1987), to_year: Some(Number(2006)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2007), to_year: Some(Maximum), month: March, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2007), to_year: Some(Maximum), month: November, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Mexico"
[RuleInfo { from_year: Number(1931), to_year: None, month: April, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1931), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1939), to_year: None, month: February, day: Ordinal(5), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1939), to_year: None, month: June, day: Ordinal(25), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1940), to_year: None, month: December, day: Ordinal(9), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1941), to_year: None, month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1943), to_year: None, month: December, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("W") }, RuleInfo { from_year: Number(1944), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1950), to_year: None, month: February, day: Ordinal(12), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1950), to_year: None, month: July, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1996), to_year: Some(Number(2000)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1996), to_year: Some(Number(2000)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2001), to_year: None, month: May, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2001), to_year: None, month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2002), to_year: Some(Number(2022)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2002), to_year: Some(Number(2022)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Belgium"
[RuleInfo { from_year: Number(1918), to_year: None, month: March, day: Ordinal(9), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1918), to_year: Some(Number(1919)), month: October, day: FirstOnOrAfter(Saturday, 1), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1919), to_year: None, month: March, day: Ordinal(1), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1920), to_year: None, month: February, day: Ordinal(14), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1920), to_year: None, month: October, day: Ordinal(23), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1921), to_year: None, month: March, day: Ordinal(14), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1921), to_year: None, month: October, day: Ordinal(25), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1922), to_year: None, month: March, day: Ordinal(25), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1922), to_year: Some(Number(1927)), month: October, day: FirstOnOrAfter(Saturday, 1), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1923), to_year: None, month: April, day: Ordinal(21), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1924), to_year: None, month: March, day: Ordinal(29), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1925), to_year: None, month: April, day: Ordinal(4), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1926), to_year: None, month: April, day: Ordinal(17), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1927), to_year: None, month: April, day: Ordinal(9), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1928), to_year: None, month: April, day: Ordinal(14), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1928), to_year: Some(Number(1938)), month: October, day: FirstOnOrAfter(Sunday, 2), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1929), to_year: None, month: April, day: Ordinal(21), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1930), to_year: None, month: April, day: Ordinal(13), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1931), to_year: None, month: April, day: Ordinal(19), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1932), to_year: None, month: April, day: Ordinal(3), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1933), to_year: None, month: March, day: Ordinal(26), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1934), to_year: None, month: April, day: Ordinal(8), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1935), to_year: None, month: March, day: Ordinal(31), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1936), to_year: None, month: April, day: Ordinal(19), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1937), to_year: None, month: April, day: Ordinal(4), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1938), to_year: None, month: March, day: Ordinal(27), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1939), to_year: None, month: April, day: Ordinal(16), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1939), to_year: None, month: November, day: Ordinal(19), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1940), to_year: None, month: February, day: Ordinal(25), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1944), to_year: None, month: September, day: Ordinal(17), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1945), to_year: None, month: April, day: Ordinal(2), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1945), to_year: None, month: September, day: Ordinal(16), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1946), to_year: None, month: May, day: Ordinal(19), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: None, month: October, day: Ordinal(7), time: 7200, time_type: Standard, time_to_add: 0, letters: None }]
"Toronto"
[RuleInfo { from_year: Number(1919), to_year: None, month: March, day: Ordinal(30), time: 84600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1919), to_year: None, month: October, day: Ordinal(26), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1920), to_year: None, month: May, day: Ordinal(2), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1920), to_year: None, month: September, day: Ordinal(26), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1921), to_year: None, month: May, day: Ordinal(15), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1921), to_year: None, month: September, day: Ordinal(15), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1922), to_year: Some(Number(1923)), month: May, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1922), to_year: Some(Number(1926)), month: September, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1924), to_year: Some(Number(1927)), month: May, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1927), to_year: Some(Number(1937)), month: September, day: FirstOnOrAfter(Sunday, 25), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1928), to_year: Some(Number(1937)), month: April, day: FirstOnOrAfter(Sunday, 25), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1938), to_year: Some(Number(1940)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1938), to_year: Some(Number(1939)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1945), to_year: Some(Number(1948)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: Some(Number(1973)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1949), to_year: Some(Number(1950)), month: November, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1951), to_year: Some(Number(1956)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1957), to_year: Some(Number(1973)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Malta"
[RuleInfo { from_year: Number(1973), to_year: None, month: March, day: Ordinal(31), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1973), to_year: None, month: September, day: Ordinal(29), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1974), to_year: None, month: April, day: Ordinal(21), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1974), to_year: None, month: September, day: Ordinal(16), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1975), to_year: Some(Number(1979)), month: April, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1975), to_year: Some(Number(1980)), month: September, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1980), to_year: None, month: March, day: Ordinal(31), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }]
"Latvia"
[RuleInfo { from_year: Number(1989), to_year: Some(Number(1996)), month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1989), to_year: Some(Number(1996)), month: September, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: None }]
"Russia"
[RuleInfo { from_year: Number(1917), to_year: None, month: July, day: Ordinal(1), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("MST") }, RuleInfo { from_year: Number(1917), to_year: None, month: December, day: Ordinal(28), time: 0, time_type: Wall, time_to_add: 0, letters: Some("MMT") }, RuleInfo { from_year: Number(1918), to_year: None, month: May, day: Ordinal(31), time: 79200, time_type: Wall, time_to_add: 7200, letters: Some("MDST") }, RuleInfo { from_year: Number(1918), to_year: None, month: September, day: Ordinal(16), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("MST") }, RuleInfo { from_year: Number(1919), to_year: None, month: May, day: Ordinal(31), time: 82800, time_type: Wall, time_to_add: 7200, letters: Some("MDST") }, RuleInfo { from_year: Number(1919), to_year: None, month: July, day: Ordinal(1), time: 0, time_type: UTC, time_to_add: 3600, letters: Some("MSD") }, RuleInfo { from_year: Number(1919), to_year: None, month: August, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 0, letters: Some("MSK") }, RuleInfo { from_year: Number(1921), to_year: None, month: February, day: Ordinal(14), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("MSD") }, RuleInfo { from_year: Number(1921), to_year: None, month: March, day: Ordinal(20), time: 82800, time_type: Wall, time_to_add: 7200, letters: Some("+05") }, RuleInfo { from_year: Number(1921), to_year: None, month: September, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("MSD") }, RuleInfo { from_year: Number(1921), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1981), to_year: Some(Number(1984)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1981), to_year: Some(Number(1983)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1984), to_year: Some(Number(1995)), month: September, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1985), to_year: Some(Number(2010)), month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1996), to_year: Some(Number(2010)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: None }]
"Vincennes"
[RuleInfo { from_year: Number(1946), to_year: None, month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1946), to_year: None, month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1953), to_year: Some(Number(1954)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1953), to_year: Some(Number(1959)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1955), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1956), to_year: Some(Number(1963)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1960), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1961), to_year: None, month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1962), to_year: Some(Number(1963)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Louisville"
[RuleInfo { from_year: Number(1921), to_year: None, month: May, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1921), to_year: None, month: September, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1941), to_year: None, month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1941), to_year: None, month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: None, month: April, day: Last(Sunday), time: 60, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1946), to_year: None, month: June, day: Ordinal(2), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1950), to_year: Some(Number(1961)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1950), to_year: Some(Number(1955)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1956), to_year: Some(Number(1961)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Para"
[RuleInfo { from_year: Number(1975), to_year: Some(Number(1988)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1975), to_year: Some(Number(1978)), month: March, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1979), to_year: Some(Number(1991)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1989), to_year: None, month: October, day: Ordinal(22), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1990), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1991), to_year: None, month: October, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1992), to_year: None, month: March, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1992), to_year: None, month: October, day: Ordinal(5), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1993), to_year: None, month: March, day: Ordinal(31), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1993), to_year: Some(Number(1995)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1994), to_year: Some(Number(1995)), month: February, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1996), to_year: None, month: March, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1996), to_year: Some(Number(2001)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1997), to_year: None, month: February, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1998), to_year: Some(Number(2001)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2002), to_year: Some(Number(2004)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2002), to_year: Some(Number(2003)), month: September, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2004), to_year: Some(Number(2009)), month: October, day: FirstOnOrAfter(Sunday, 15), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2005), to_year: Some(Number(2009)), month: March, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2010), to_year: Some(Number(2024)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2010), to_year: Some(Number(2012)), month: April, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2013), to_year: Some(Number(2024)), month: March, day: FirstOnOrAfter(Sunday, 22), time: 0, time_type: Wall, time_to_add: 0, letters: None }]
"Moldova"
[RuleInfo { from_year: Number(1997), to_year: Some(Maximum), month: March, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1997), to_year: Some(Maximum), month: October, day: Last(Sunday), time: 10800, time_type: Wall, time_to_add: 0, letters: None }]
"Austria"
[RuleInfo { from_year: Number(1920), to_year: None, month: April, day: Ordinal(5), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1920), to_year: None, month: September, day: Ordinal(13), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1946), to_year: None, month: April, day: Ordinal(14), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: None, month: October, day: Ordinal(7), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1948)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1947), to_year: None, month: April, day: Ordinal(6), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1948), to_year: None, month: April, day: Ordinal(18), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1980), to_year: None, month: April, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1980), to_year: None, month: September, day: Ordinal(28), time: 0, time_type: Wall, time_to_add: 0, letters: None }]
"Port"
[RuleInfo { from_year: Number(1916), to_year: None, month: June, day: Ordinal(17), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1916), to_year: None, month: November, day: Ordinal(1), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1917), to_year: Some(Number(1921)), month: March, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1917), to_year: Some(Number(1921)), month: October, day: Ordinal(14), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1924), to_year: None, month: April, day: Ordinal(16), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1924), to_year: None, month: October, day: Ordinal(4), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1926), to_year: None, month: April, day: Ordinal(17), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1926), to_year: Some(Number(1929)), month: October, day: FirstOnOrAfter(Saturday, 1), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1927), to_year: None, month: April, day: Ordinal(9), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1928), to_year: None, month: April, day: Ordinal(14), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1929), to_year: None, month: April, day: Ordinal(20), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1931), to_year: None, month: April, day: Ordinal(18), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1931), to_year: Some(Number(1932)), month: October, day: FirstOnOrAfter(Saturday, 1), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1932), to_year: None, month: April, day: Ordinal(2), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1934), to_year: None, month: April, day: Ordinal(7), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1934), to_year: Some(Number(1938)), month: October, day: FirstOnOrAfter(Saturday, 1), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1935), to_year: None, month: March, day: Ordinal(30), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1936), to_year: None, month: April, day: Ordinal(18), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1937), to_year: None, month: April, day: Ordinal(3), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1938), to_year: None, month: March, day: Ordinal(26), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1939), to_year: None, month: April, day: Ordinal(15), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1939), to_year: None, month: November, day: Ordinal(18), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1940), to_year: None, month: February, day: Ordinal(24), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1940), to_year: None, month: October, day: Ordinal(7), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1941), to_year: None, month: April, day: Ordinal(5), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1941), to_year: None, month: October, day: Ordinal(5), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1942), to_year: Some(Number(1945)), month: March, day: FirstOnOrAfter(Saturday, 8), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: April, day: Ordinal(25), time: 79200, time_type: Standard, time_to_add: 7200, letters: Some("M") }, RuleInfo { from_year: Number(1942), to_year: None, month: August, day: Ordinal(15), time: 79200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: Some(Number(1945)), month: October, day: FirstOnOrAfter(Saturday, 24), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1943), to_year: None, month: April, day: Ordinal(17), time: 79200, time_type: Standard, time_to_add: 7200, letters: Some("M") }, RuleInfo { from_year: Number(1943), to_year: Some(Number(1945)), month: August, day: FirstOnOrAfter(Saturday, 25), time: 79200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1944), to_year: Some(Number(1945)), month: April, day: FirstOnOrAfter(Saturday, 21), time: 79200, time_type: Standard, time_to_add: 7200, letters: Some("M") }, RuleInfo { from_year: Number(1946), to_year: None, month: April, day: FirstOnOrAfter(Saturday, 1), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: None, month: October, day: FirstOnOrAfter(Saturday, 1), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1966)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1965)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1976), to_year: None, month: September, day: Last(Sunday), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1977), to_year: None, month: March, day: Last(Sunday), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: None, month: September, day: Last(Sunday), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: Some(Number(1980)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1978), to_year: None, month: October, day: Ordinal(1), time: 3600, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1979), to_year: Some(Number(1980)), month: September, day: Last(Sunday), time: 3600, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1981), to_year: Some(Number(1986)), month: March, day: Last(Sunday), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1981), to_year: Some(Number(1985)), month: September, day: Last(Sunday), time: 0, time_type: Standard, time_to_add: 0, letters: None }]
"Algeria"
[RuleInfo { from_year: Number(1916), to_year: None, month: June, day: Ordinal(14), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1916), to_year: Some(Number(1919)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1917), to_year: None, month: March, day: Ordinal(24), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1918), to_year: None, month: March, day: Ordinal(9), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1919), to_year: None, month: March, day: Ordinal(1), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1920), to_year: None, month: February, day: Ordinal(14), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1920), to_year: None, month: October, day: Ordinal(23), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1921), to_year: None, month: March, day: Ordinal(14), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1921), to_year: None, month: June, day: Ordinal(21), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1939), to_year: None, month: September, day: Ordinal(11), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1939), to_year: None, month: November, day: Ordinal(19), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1944), to_year: Some(Number(1945)), month: April, day: FirstOnOrAfter(Monday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1944), to_year: None, month: October, day: Ordinal(8), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1945), to_year: None, month: September, day: Ordinal(16), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1971), to_year: None, month: April, day: Ordinal(25), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1971), to_year: None, month: September, day: Ordinal(26), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1977), to_year: None, month: May, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: None, month: October, day: Ordinal(21), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: March, day: Ordinal(24), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1978), to_year: None, month: September, day: Ordinal(22), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1980), to_year: None, month: April, day: Ordinal(25), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1980), to_year: None, month: October, day: Ordinal(31), time: 7200, time_type: Wall, time_to_add: 0, letters: None }]
"Eire"
[RuleInfo { from_year: Number(1971), to_year: None, month: October, day: Ordinal(31), time: 7200, time_type: UTC, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(1972), to_year: Some(Number(1980)), month: March, day: FirstOnOrAfter(Sunday, 16), time: 7200, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1972), to_year: Some(Number(1980)), month: October, day: FirstOnOrAfter(Sunday, 23), time: 7200, time_type: UTC, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(1981), to_year: Some(Maximum), month: March, day: Last(Sunday), time: 3600, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1981), to_year: Some(Number(1989)), month: October, day: FirstOnOrAfter(Sunday, 23), time: 3600, time_type: UTC, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(1990), to_year: Some(Number(1995)), month: October, day: FirstOnOrAfter(Sunday, 22), time: 3600, time_type: UTC, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(1996), to_year: Some(Maximum), month: October, day: Last(Sunday), time: 3600, time_type: UTC, time_to_add: -3600, letters: None }]
"Kyrgyz"
[RuleInfo { from_year: Number(1992), to_year: Some(Number(1996)), month: April, day: FirstOnOrAfter(Sunday, 7), time: 0, time_type: Standard, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1992), to_year: Some(Number(1996)), month: September, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1997), to_year: Some(Number(2005)), month: March, day: Last(Sunday), time: 9000, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1997), to_year: Some(Number(2004)), month: October, day: Last(Sunday), time: 9000, time_type: Wall, time_to_add: 0, letters: None }]
"France"
[RuleInfo { from_year: Number(1916), to_year: None, month: June, day: Ordinal(14), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1916), to_year: Some(Number(1919)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1917), to_year: None, month: March, day: Ordinal(24), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1918), to_year: None, month: March, day: Ordinal(9), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1919), to_year: None, month: March, day: Ordinal(1), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1920), to_year: None, month: February, day: Ordinal(14), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1920), to_year: None, month: October, day: Ordinal(23), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1921), to_year: None, month: March, day: Ordinal(14), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1921), to_year: None, month: October, day: Ordinal(25), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1922), to_year: None, month: March, day: Ordinal(25), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1922), to_year: Some(Number(1938)), month: October, day: FirstOnOrAfter(Saturday, 1), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1923), to_year: None, month: May, day: Ordinal(26), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1924), to_year: None, month: March, day: Ordinal(29), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1925), to_year: None, month: April, day: Ordinal(4), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1926), to_year: None, month: April, day: Ordinal(17), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1927), to_year: None, month: April, day: Ordinal(9), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1928), to_year: None, month: April, day: Ordinal(14), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1929), to_year: None, month: April, day: Ordinal(20), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1930), to_year: None, month: April, day: Ordinal(12), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1931), to_year: None, month: April, day: Ordinal(18), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1932), to_year: None, month: April, day: Ordinal(2), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1933), to_year: None, month: March, day: Ordinal(25), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1934), to_year: None, month: April, day: Ordinal(7), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1935), to_year: None, month: March, day: Ordinal(30), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1936), to_year: None, month: April, day: Ordinal(18), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1937), to_year: None, month: April, day: Ordinal(3), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1938), to_year: None, month: March, day: Ordinal(26), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1939), to_year: None, month: April, day: Ordinal(15), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1939), to_year: None, month: November, day: Ordinal(18), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1940), to_year: None, month: February, day: Ordinal(25), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1941), to_year: None, month: May, day: Ordinal(5), time: 0, time_type: Wall, time_to_add: 7200, letters: Some("M") }, RuleInfo { from_year: Number(1941), to_year: None, month: October, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: March, day: Ordinal(9), time: 0, time_type: Wall, time_to_add: 7200, letters: Some("M") }, RuleInfo { from_year: Number(1942), to_year: None, month: November, day: Ordinal(2), time: 10800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1943), to_year: None, month: March, day: Ordinal(29), time: 7200, time_type: Wall, time_to_add: 7200, letters: Some("M") }, RuleInfo { from_year: Number(1943), to_year: None, month: October, day: Ordinal(4), time: 10800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1944), to_year: None, month: April, day: Ordinal(3), time: 7200, time_type: Wall, time_to_add: 7200, letters: Some("M") }, RuleInfo { from_year: Number(1944), to_year: None, month: October, day: Ordinal(8), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1945), to_year: None, month: April, day: Ordinal(2), time: 7200, time_type: Wall, time_to_add: 7200, letters: Some("M") }, RuleInfo { from_year: Number(1945), to_year: None, month: September, day: Ordinal(16), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1976), to_year: None, month: March, day: Ordinal(28), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1976), to_year: None, month: September, day: Ordinal(26), time: 3600, time_type: Wall, time_to_add: 0, letters: None }]
"CO"
[RuleInfo { from_year: Number(1992), to_year: None, month: May, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1993), to_year: None, month: February, day: Ordinal(6), time: 86400, time_type: Wall, time_to_add: 0, letters: None }]
"US"
[RuleInfo { from_year: Number(1918), to_year: Some(Number(1919)), month: March, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1918), to_year: Some(Number(1919)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: February, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("W") }, RuleInfo { from_year: Number(1945), to_year: None, month: August, day: Ordinal(14), time: 82800, time_type: UTC, time_to_add: 3600, letters: Some("P") }, RuleInfo { from_year: Number(1945), to_year: None, month: September, day: Ordinal(30), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1967), to_year: Some(Number(2006)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1967), to_year: Some(Number(1973)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1974), to_year: None, month: January, day: Ordinal(6), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1975), to_year: None, month: February, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1976), to_year: Some(Number(1986)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1987), to_year: Some(Number(2006)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2007), to_year: Some(Maximum), month: March, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2007), to_year: Some(Maximum), month: November, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Falk"
[RuleInfo { from_year: Number(1937), to_year: Some(Number(1938)), month: September, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1938), to_year: Some(Number(1942)), month: March, day: FirstOnOrAfter(Sunday, 19), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1939), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1940), to_year: Some(Number(1942)), month: September, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1943), to_year: None, month: January, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1983), to_year: None, month: September, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1984), to_year: Some(Number(1985)), month: April, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1984), to_year: None, month: September, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1985), to_year: Some(Number(2000)), month: September, day: FirstOnOrAfter(Sunday, 9), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1986), to_year: Some(Number(2000)), month: April, day: FirstOnOrAfter(Sunday, 16), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2001), to_year: Some(Number(2010)), month: April, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2001), to_year: Some(Number(2010)), month: September, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }]
"Swiss"
[RuleInfo { from_year: Number(1941), to_year: Some(Number(1942)), month: May, day: FirstOnOrAfter(Monday, 1), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1941), to_year: Some(Number(1942)), month: October, day: FirstOnOrAfter(Monday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: None }]
"Mongol"
[RuleInfo { from_year: Number(1983), to_year: Some(Number(1984)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1983), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1985), to_year: Some(Number(1998)), month: March, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1984), to_year: Some(Number(1998)), month: September, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2001), to_year: None, month: April, day: Last(Saturday), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2001), to_year: Some(Number(2006)), month: September, day: Last(Saturday), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2002), to_year: Some(Number(2006)), month: March, day: Last(Saturday), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2015), to_year: Some(Number(2016)), month: March, day: Last(Saturday), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2015), to_year: Some(Number(2016)), month: September, day: Last(Saturday), time: 0, time_type: Wall, time_to_add: 0, letters: None }]
"Jordan"
[RuleInfo { from_year: Number(1973), to_year: None, month: June, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1973), to_year: Some(Number(1975)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1974), to_year: Some(Number(1977)), month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1976), to_year: None, month: November, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1977), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: April, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1978), to_year: None, month: September, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1985), to_year: None, month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1985), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1986), to_year: Some(Number(1988)), month: April, day: FirstOnOrAfter(Friday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1986), to_year: Some(Number(1990)), month: October, day: FirstOnOrAfter(Friday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1989), to_year: None, month: May, day: Ordinal(8), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1990), to_year: None, month: April, day: Ordinal(27), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1991), to_year: None, month: April, day: Ordinal(17), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1991), to_year: None, month: September, day: Ordinal(27), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1992), to_year: None, month: April, day: Ordinal(10), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1992), to_year: Some(Number(1993)), month: October, day: FirstOnOrAfter(Friday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1993), to_year: Some(Number(1998)), month: April, day: FirstOnOrAfter(Friday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1994), to_year: None, month: September, day: FirstOnOrAfter(Friday, 15), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1995), to_year: Some(Number(1998)), month: September, day: FirstOnOrAfter(Friday, 15), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1999), to_year: None, month: July, day: Ordinal(1), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1999), to_year: Some(Number(2002)), month: September, day: Last(Friday), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2000), to_year: Some(Number(2001)), month: March, day: Last(Thursday), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2002), to_year: Some(Number(2012)), month: March, day: Last(Thursday), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2003), to_year: None, month: October, day: Ordinal(24), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2004), to_year: None, month: October, day: Ordinal(15), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2005), to_year: None, month: September, day: Last(Friday), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2006), to_year: Some(Number(2011)), month: October, day: Last(Friday), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2013), to_year: None, month: December, day: Ordinal(20), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2014), to_year: Some(Number(2021)), month: March, day: Last(Thursday), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2014), to_year: Some(Number(2022)), month: October, day: Last(Friday), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2022), to_year: None, month: February, day: Last(Thursday), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("S") }]
"Iran"
[RuleInfo { from_year: Number(1910), to_year: None, month: January, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1977), to_year: None, month: March, day: Ordinal(21), time: 82800, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1977), to_year: None, month: October, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: March, day: Ordinal(24), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: August, day: Ordinal(5), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1979), to_year: None, month: May, day: Ordinal(26), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1979), to_year: None, month: September, day: Ordinal(18), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1980), to_year: None, month: March, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1980), to_year: None, month: September, day: Ordinal(22), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1991), to_year: None, month: May, day: Ordinal(2), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1992), to_year: Some(Number(1995)), month: March, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1991), to_year: Some(Number(1995)), month: September, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1996), to_year: None, month: March, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1996), to_year: None, month: September, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1997), to_year: Some(Number(1999)), month: March, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1997), to_year: Some(Number(1999)), month: September, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2000), to_year: None, month: March, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2000), to_year: None, month: September, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2001), to_year: Some(Number(2003)), month: March, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2001), to_year: Some(Number(2003)), month: September, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2004), to_year: None, month: March, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2004), to_year: None, month: September, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2005), to_year: None, month: March, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2005), to_year: None, month: September, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2008), to_year: None, month: March, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2008), to_year: None, month: September, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2009), to_year: Some(Number(2011)), month: March, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2009), to_year: Some(Number(2011)), month: September, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2012), to_year: None, month: March, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2012), to_year: None, month: September, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2013), to_year: Some(Number(2015)), month: March, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2013), to_year: Some(Number(2015)), month: September, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2016), to_year: None, month: March, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2016), to_year: None, month: September, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2017), to_year: Some(Number(2019)), month: March, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2017), to_year: Some(Number(2019)), month: September, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2020), to_year: None, month: March, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2020), to_year: None, month: September, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2021), to_year: Some(Number(2022)), month: March, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2021), to_year: Some(Number(2022)), month: September, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 0, letters: None }]
"Shang"
[RuleInfo { from_year: Number(1919), to_year: None, month: April, day: Ordinal(12), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1919), to_year: None, month: September, day: Ordinal(30), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1940), to_year: None, month: June, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1940), to_year: None, month: October, day: Ordinal(12), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1941), to_year: None, month: March, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1941), to_year: None, month: November, day: Ordinal(1), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: January, day: Ordinal(31), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1945), to_year: None, month: September, day: Ordinal(1), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: None, month: May, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1946), to_year: None, month: September, day: Ordinal(30), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1947), to_year: None, month: April, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1947), to_year: None, month: October, day: Ordinal(31), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1948), to_year: Some(Number(1949)), month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1948), to_year: Some(Number(1949)), month: September, day: Ordinal(30), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Egypt"
[RuleInfo { from_year: Number(1940), to_year: None, month: July, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1940), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1941), to_year: None, month: April, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1941), to_year: None, month: September, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1942), to_year: Some(Number(1944)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: October, day: Ordinal(27), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1943), to_year: Some(Number(1945)), month: November, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1945), to_year: None, month: April, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1957), to_year: None, month: May, day: Ordinal(10), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1957), to_year: Some(Number(1958)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1958), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1959), to_year: Some(Number(1981)), month: May, day: Ordinal(1), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1959), to_year: Some(Number(1965)), month: September, day: Ordinal(30), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1966), to_year: Some(Number(1994)), month: October, day: Ordinal(1), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1982), to_year: None, month: July, day: Ordinal(25), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1983), to_year: None, month: July, day: Ordinal(12), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1984), to_year: Some(Number(1988)), month: May, day: Ordinal(1), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1989), to_year: None, month: May, day: Ordinal(6), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1990), to_year: Some(Number(1994)), month: May, day: Ordinal(1), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1995), to_year: Some(Number(2010)), month: April, day: Last(Friday), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1995), to_year: Some(Number(2005)), month: September, day: Last(Thursday), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2006), to_year: None, month: September, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2007), to_year: None, month: September, day: FirstOnOrAfter(Thursday, 1), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2008), to_year: None, month: August, day: Last(Thursday), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2009), to_year: None, month: August, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2010), to_year: None, month: August, day: Ordinal(10), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2010), to_year: None, month: September, day: Ordinal(9), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2010), to_year: None, month: September, day: Last(Thursday), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2014), to_year: None, month: May, day: Ordinal(15), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2014), to_year: None, month: June, day: Ordinal(26), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2014), to_year: None, month: July, day: Ordinal(31), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2014), to_year: None, month: September, day: Last(Thursday), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2023), to_year: Some(Maximum), month: April, day: Last(Friday), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2023), to_year: Some(Maximum), month: October, day: Last(Thursday), time: 86400, time_type: Wall, time_to_add: 0, letters: None }]
"StJohns"
[RuleInfo { from_year: Number(1917), to_year: None, month: April, day: Ordinal(8), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1917), to_year: None, month: September, day: Ordinal(17), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1919), to_year: None, month: May, day: Ordinal(5), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1919), to_year: None, month: August, day: Ordinal(12), time: 82800, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1920), to_year: Some(Number(1935)), month: May, day: FirstOnOrAfter(Sunday, 1), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1920), to_year: Some(Number(1935)), month: October, day: Last(Sunday), time: 82800, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1936), to_year: Some(Number(1941)), month: May, day: FirstOnOrAfter(Monday, 9), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1936), to_year: Some(Number(1941)), month: October, day: FirstOnOrAfter(Monday, 2), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: Some(Number(1950)), month: May, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1946), to_year: Some(Number(1950)), month: October, day: FirstOnOrAfter(Sunday, 2), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1951), to_year: Some(Number(1986)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1951), to_year: Some(Number(1959)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1960), to_year: Some(Number(1986)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1987), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 1), time: 60, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1987), to_year: Some(Number(2006)), month: October, day: Last(Sunday), time: 60, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1988), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 1), time: 60, time_type: Wall, time_to_add: 7200, letters: Some("DD") }, RuleInfo { from_year: Number(1989), to_year: Some(Number(2006)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 60, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2007), to_year: Some(Number(2011)), month: March, day: FirstOnOrAfter(Sunday, 8), time: 60, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2007), to_year: Some(Number(2010)), month: November, day: FirstOnOrAfter(Sunday, 1), time: 60, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Guat"
[RuleInfo { from_year: Number(1973), to_year: None, month: November, day: Ordinal(25), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1974), to_year: None, month: February, day: Ordinal(24), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1983), to_year: None, month: May, day: Ordinal(21), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1983), to_year: None, month: September, day: Ordinal(22), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1991), to_year: None, month: March, day: Ordinal(23), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1991), to_year: None, month: September, day: Ordinal(7), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2006), to_year: None, month: April, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2006), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Vanc"
[RuleInfo { from_year: Number(1918), to_year: None, month: April, day: Ordinal(14), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1918), to_year: None, month: October, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: February, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("W") }, RuleInfo { from_year: Number(1945), to_year: None, month: August, day: Ordinal(14), time: 82800, time_type: UTC, time_to_add: 3600, letters: Some("P") }, RuleInfo { from_year: Number(1945), to_year: None, month: September, day: Ordinal(30), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: Some(Number(1986)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1946), to_year: None, month: September, day: Ordinal(29), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1961)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1962), to_year: Some(Number(2006)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Syria"
[RuleInfo { from_year: Number(1920), to_year: Some(Number(1923)), month: April, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1920), to_year: Some(Number(1923)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1962), to_year: None, month: April, day: Ordinal(29), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1962), to_year: None, month: October, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1963), to_year: Some(Number(1965)), month: May, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1963), to_year: None, month: September, day: Ordinal(30), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1964), to_year: None, month: October, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1965), to_year: None, month: September, day: Ordinal(30), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1966), to_year: None, month: April, day: Ordinal(24), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1966), to_year: Some(Number(1976)), month: October, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1967), to_year: Some(Number(1978)), month: May, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: Some(Number(1978)), month: September, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1983), to_year: Some(Number(1984)), month: April, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1983), to_year: Some(Number(1984)), month: October, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1986), to_year: None, month: February, day: Ordinal(16), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1986), to_year: None, month: October, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1987), to_year: None, month: March, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1987), to_year: Some(Number(1988)), month: October, day: Ordinal(31), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1988), to_year: None, month: March, day: Ordinal(15), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1989), to_year: None, month: March, day: Ordinal(31), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1989), to_year: None, month: October, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1990), to_year: None, month: April, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1990), to_year: None, month: September, day: Ordinal(30), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1991), to_year: None, month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1991), to_year: Some(Number(1992)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1992), to_year: None, month: April, day: Ordinal(8), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1993), to_year: None, month: March, day: Ordinal(26), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1993), to_year: None, month: September, day: Ordinal(25), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1994), to_year: Some(Number(1996)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1994), to_year: Some(Number(2005)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1997), to_year: Some(Number(1998)), month: March, day: Last(Monday), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1999), to_year: Some(Number(2006)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2006), to_year: None, month: September, day: Ordinal(22), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2007), to_year: None, month: March, day: Last(Friday), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2007), to_year: None, month: November, day: FirstOnOrAfter(Friday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2008), to_year: None, month: April, day: FirstOnOrAfter(Friday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2008), to_year: None, month: November, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2009), to_year: None, month: March, day: Last(Friday), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2010), to_year: Some(Number(2011)), month: April, day: FirstOnOrAfter(Friday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2012), to_year: Some(Number(2022)), month: March, day: Last(Friday), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2009), to_year: Some(Number(2022)), month: October, day: Last(Friday), time: 0, time_type: Wall, time_to_add: 0, letters: None }]
"PRC"
[RuleInfo { from_year: Number(1986), to_year: None, month: May, day: Ordinal(4), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1986), to_year: Some(Number(1991)), month: September, day: FirstOnOrAfter(Sunday, 11), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1987), to_year: Some(Number(1991)), month: April, day: FirstOnOrAfter(Sunday, 11), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }]
"Hungary"
[RuleInfo { from_year: Number(1918), to_year: Some(Number(1919)), month: April, day: Ordinal(15), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1918), to_year: Some(Number(1920)), month: September, day: FirstOnOrAfter(Monday, 15), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1920), to_year: None, month: April, day: Ordinal(5), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1945), to_year: None, month: May, day: Ordinal(1), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1945), to_year: None, month: November, day: Ordinal(1), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1946), to_year: None, month: March, day: Ordinal(31), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: None, month: October, day: Ordinal(7), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1949)), month: April, day: FirstOnOrAfter(Sunday, 4), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1949)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1954), to_year: None, month: May, day: Ordinal(23), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1954), to_year: None, month: October, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1955), to_year: None, month: May, day: Ordinal(22), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1955), to_year: None, month: October, day: Ordinal(2), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1956), to_year: Some(Number(1957)), month: June, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1956), to_year: Some(Number(1957)), month: September, day: Last(Sunday), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1980), to_year: None, month: April, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1980), to_year: None, month: September, day: Ordinal(28), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1981), to_year: Some(Number(1983)), month: March, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1981), to_year: Some(Number(1983)), month: September, day: Last(Sunday), time: 3600, time_type: Wall, time_to_add: 0, letters: None }]
"Poland"
[RuleInfo { from_year: Number(1918), to_year: Some(Number(1919)), month: September, day: Ordinal(16), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1919), to_year: None, month: April, day: Ordinal(15), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1944), to_year: None, month: April, day: Ordinal(3), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1944), to_year: None, month: October, day: Ordinal(4), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1945), to_year: None, month: April, day: Ordinal(29), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1945), to_year: None, month: November, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1946), to_year: None, month: April, day: Ordinal(14), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: None, month: October, day: Ordinal(7), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1947), to_year: None, month: May, day: Ordinal(4), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1949)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1948), to_year: None, month: April, day: Ordinal(18), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1949), to_year: None, month: April, day: Ordinal(10), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1957), to_year: None, month: June, day: Ordinal(2), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1957), to_year: Some(Number(1958)), month: September, day: Last(Sunday), time: 3600, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1958), to_year: None, month: March, day: Ordinal(30), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1959), to_year: None, month: May, day: Ordinal(31), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1959), to_year: Some(Number(1961)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 3600, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1960), to_year: None, month: April, day: Ordinal(3), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1961), to_year: Some(Number(1964)), month: May, day: Last(Sunday), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1962), to_year: Some(Number(1964)), month: September, day: Last(Sunday), time: 3600, time_type: Standard, time_to_add: 0, letters: None }]
"Bulg"
[RuleInfo { from_year: Number(1979), to_year: None, month: March, day: Ordinal(31), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1979), to_year: None, month: October, day: Ordinal(1), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1980), to_year: Some(Number(1982)), month: April, day: FirstOnOrAfter(Saturday, 1), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1980), to_year: None, month: September, day: Ordinal(29), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1981), to_year: None, month: September, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 0, letters: None }]
"NZ"
[RuleInfo { from_year: Number(1927), to_year: None, month: November, day: Ordinal(6), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1928), to_year: None, month: March, day: Ordinal(4), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("M") }, RuleInfo { from_year: Number(1928), to_year: Some(Number(1933)), month: October, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 1800, letters: Some("S") }, RuleInfo { from_year: Number(1929), to_year: Some(Number(1933)), month: March, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("M") }, RuleInfo { from_year: Number(1934), to_year: Some(Number(1940)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("M") }, RuleInfo { from_year: Number(1934), to_year: Some(Number(1940)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 1800, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: None, month: January, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1974), to_year: None, month: November, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1975), to_year: None, month: February, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1975), to_year: Some(Number(1988)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1976), to_year: Some(Number(1989)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1989), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1990), to_year: Some(Number(2006)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1990), to_year: Some(Number(2007)), month: March, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2007), to_year: Some(Maximum), month: September, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2008), to_year: Some(Maximum), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }]
"Thule"
[RuleInfo { from_year: Number(1991), to_year: Some(Number(1992)), month: March, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1991), to_year: Some(Number(1992)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1993), to_year: Some(Number(2006)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1993), to_year: Some(Number(2006)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2007), to_year: Some(Maximum), month: March, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2007), to_year: Some(Maximum), month: November, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Mauritius"
[RuleInfo { from_year: Number(1982), to_year: None, month: October, day: Ordinal(10), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1983), to_year: None, month: March, day: Ordinal(21), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2008), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2009), to_year: None, month: March, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: None }]
"Edm"
[RuleInfo { from_year: Number(1918), to_year: Some(Number(1919)), month: April, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1918), to_year: None, month: October, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1919), to_year: None, month: May, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1920), to_year: Some(Number(1923)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1920), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1921), to_year: Some(Number(1923)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: February, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("W") }, RuleInfo { from_year: Number(1945), to_year: None, month: August, day: Ordinal(14), time: 82800, time_type: UTC, time_to_add: 3600, letters: Some("P") }, RuleInfo { from_year: Number(1945), to_year: None, month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1947), to_year: None, month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1947), to_year: None, month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1972), to_year: Some(Number(1986)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1972), to_year: Some(Number(2006)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"GB-Eire"
[RuleInfo { from_year: Number(1916), to_year: None, month: May, day: Ordinal(21), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1916), to_year: None, month: October, day: Ordinal(1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1917), to_year: None, month: April, day: Ordinal(8), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1917), to_year: None, month: September, day: Ordinal(17), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1918), to_year: None, month: March, day: Ordinal(24), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1918), to_year: None, month: September, day: Ordinal(30), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1919), to_year: None, month: March, day: Ordinal(30), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1919), to_year: None, month: September, day: Ordinal(29), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1920), to_year: None, month: March, day: Ordinal(28), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1920), to_year: None, month: October, day: Ordinal(25), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1921), to_year: None, month: April, day: Ordinal(3), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1921), to_year: None, month: October, day: Ordinal(3), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1922), to_year: None, month: March, day: Ordinal(26), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1922), to_year: None, month: October, day: Ordinal(8), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1923), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 16), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1923), to_year: Some(Number(1924)), month: September, day: FirstOnOrAfter(Sunday, 16), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1924), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 9), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1925), to_year: Some(Number(1926)), month: April, day: FirstOnOrAfter(Sunday, 16), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1925), to_year: Some(Number(1938)), month: October, day: FirstOnOrAfter(Sunday, 2), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1927), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 9), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1928), to_year: Some(Number(1929)), month: April, day: FirstOnOrAfter(Sunday, 16), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1930), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 9), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1931), to_year: Some(Number(1932)), month: April, day: FirstOnOrAfter(Sunday, 16), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1933), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 9), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1934), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 16), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1935), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 9), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1936), to_year: Some(Number(1937)), month: April, day: FirstOnOrAfter(Sunday, 16), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1938), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 9), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1939), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 16), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1939), to_year: None, month: November, day: FirstOnOrAfter(Sunday, 16), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1940), to_year: None, month: February, day: FirstOnOrAfter(Sunday, 23), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1941), to_year: None, month: May, day: FirstOnOrAfter(Sunday, 2), time: 3600, time_type: Standard, time_to_add: 7200, letters: Some("BDST") }, RuleInfo { from_year: Number(1941), to_year: Some(Number(1943)), month: August, day: FirstOnOrAfter(Sunday, 9), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1942), to_year: Some(Number(1944)), month: April, day: FirstOnOrAfter(Sunday, 2), time: 3600, time_type: Standard, time_to_add: 7200, letters: Some("BDST") }, RuleInfo { from_year: Number(1944), to_year: None, month: September, day: FirstOnOrAfter(Sunday, 16), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1945), to_year: None, month: April, day: FirstOnOrAfter(Monday, 2), time: 3600, time_type: Standard, time_to_add: 7200, letters: Some("BDST") }, RuleInfo { from_year: Number(1945), to_year: None, month: July, day: FirstOnOrAfter(Sunday, 9), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1945), to_year: Some(Number(1946)), month: October, day: FirstOnOrAfter(Sunday, 2), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1946), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 9), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1947), to_year: None, month: March, day: Ordinal(16), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1947), to_year: None, month: April, day: Ordinal(13), time: 3600, time_type: Standard, time_to_add: 7200, letters: Some("BDST") }, RuleInfo { from_year: Number(1947), to_year: None, month: August, day: Ordinal(10), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1947), to_year: None, month: November, day: Ordinal(2), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1948), to_year: None, month: March, day: Ordinal(14), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1948), to_year: None, month: October, day: Ordinal(31), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1949), to_year: None, month: April, day: Ordinal(3), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1949), to_year: None, month: October, day: Ordinal(30), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1950), to_year: Some(Number(1952)), month: April, day: FirstOnOrAfter(Sunday, 14), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1950), to_year: Some(Number(1952)), month: October, day: FirstOnOrAfter(Sunday, 21), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1953), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 16), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1953), to_year: Some(Number(1960)), month: October, day: FirstOnOrAfter(Sunday, 2), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1954), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 9), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1955), to_year: Some(Number(1956)), month: April, day: FirstOnOrAfter(Sunday, 16), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1957), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 9), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1958), to_year: Some(Number(1959)), month: April, day: FirstOnOrAfter(Sunday, 16), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1960), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 9), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1961), to_year: Some(Number(1963)), month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1961), to_year: Some(Number(1968)), month: October, day: FirstOnOrAfter(Sunday, 23), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1964), to_year: Some(Number(1967)), month: March, day: FirstOnOrAfter(Sunday, 19), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1968), to_year: None, month: February, day: Ordinal(18), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1972), to_year: Some(Number(1980)), month: March, day: FirstOnOrAfter(Sunday, 16), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1972), to_year: Some(Number(1980)), month: October, day: FirstOnOrAfter(Sunday, 23), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1981), to_year: Some(Number(1995)), month: March, day: Last(Sunday), time: 3600, time_type: UTC, time_to_add: 3600, letters: Some("BST") }, RuleInfo { from_year: Number(1981), to_year: Some(Number(1989)), month: October, day: FirstOnOrAfter(Sunday, 23), time: 3600, time_type: UTC, time_to_add: 0, letters: Some("GMT") }, RuleInfo { from_year: Number(1990), to_year: Some(Number(1995)), month: October, day: FirstOnOrAfter(Sunday, 22), time: 3600, time_type: UTC, time_to_add: 0, letters: Some("GMT") }]
"Spain"
[RuleInfo { from_year: Number(1918), to_year: None, month: April, day: Ordinal(15), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1918), to_year: Some(Number(1919)), month: October, day: Ordinal(6), time: 86400, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1919), to_year: None, month: April, day: Ordinal(6), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1924), to_year: None, month: April, day: Ordinal(16), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1924), to_year: None, month: October, day: Ordinal(4), time: 86400, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1926), to_year: None, month: April, day: Ordinal(17), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1926), to_year: Some(Number(1929)), month: October, day: FirstOnOrAfter(Saturday, 1), time: 86400, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1927), to_year: None, month: April, day: Ordinal(9), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1928), to_year: None, month: April, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1929), to_year: None, month: April, day: Ordinal(20), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1937), to_year: None, month: June, day: Ordinal(16), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1937), to_year: None, month: October, day: Ordinal(2), time: 86400, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1938), to_year: None, month: April, day: Ordinal(2), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1938), to_year: None, month: April, day: Ordinal(30), time: 82800, time_type: Wall, time_to_add: 7200, letters: Some("M") }, RuleInfo { from_year: Number(1938), to_year: None, month: October, day: Ordinal(2), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1939), to_year: None, month: October, day: Ordinal(7), time: 86400, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1942), to_year: None, month: May, day: Ordinal(2), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: September, day: Ordinal(1), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1943), to_year: Some(Number(1946)), month: April, day: FirstOnOrAfter(Saturday, 13), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1943), to_year: Some(Number(1944)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1945), to_year: Some(Number(1946)), month: September, day: Last(Sunday), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1949), to_year: None, month: April, day: Ordinal(30), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1949), to_year: None, month: October, day: Ordinal(2), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1974), to_year: Some(Number(1975)), month: April, day: FirstOnOrAfter(Saturday, 12), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1974), to_year: Some(Number(1975)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1976), to_year: None, month: March, day: Ordinal(27), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1976), to_year: Some(Number(1977)), month: September, day: Last(Sunday), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1977), to_year: None, month: April, day: Ordinal(2), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1978), to_year: None, month: April, day: Ordinal(2), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1978), to_year: None, month: October, day: Ordinal(1), time: 7200, time_type: Standard, time_to_add: 0, letters: None }]
"Regina"
[RuleInfo { from_year: Number(1918), to_year: None, month: April, day: Ordinal(14), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1918), to_year: None, month: October, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1930), to_year: Some(Number(1934)), month: May, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1930), to_year: Some(Number(1934)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1937), to_year: Some(Number(1941)), month: April, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1937), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1938), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1939), to_year: Some(Number(1941)), month: October, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: February, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("W") }, RuleInfo { from_year: Number(1945), to_year: None, month: August, day: Ordinal(14), time: 82800, time_type: UTC, time_to_add: 3600, letters: Some("P") }, RuleInfo { from_year: Number(1945), to_year: None, month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1946), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1957)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1957)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1959), to_year: None, month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1959), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"HK"
[RuleInfo { from_year: Number(1946), to_year: None, month: April, day: Ordinal(21), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: None, month: December, day: Ordinal(1), time: 12600, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1947), to_year: None, month: April, day: Ordinal(13), time: 12600, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1947), to_year: None, month: November, day: Ordinal(30), time: 12600, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1948), to_year: None, month: May, day: Ordinal(2), time: 12600, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1948), to_year: Some(Number(1952)), month: October, day: FirstOnOrAfter(Sunday, 28), time: 12600, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1949), to_year: Some(Number(1953)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 12600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1953), to_year: Some(Number(1964)), month: October, day: FirstOnOrAfter(Sunday, 31), time: 12600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1954), to_year: Some(Number(1964)), month: March, day: FirstOnOrAfter(Sunday, 18), time: 12600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1965), to_year: Some(Number(1976)), month: April, day: FirstOnOrAfter(Sunday, 16), time: 12600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1965), to_year: Some(Number(1976)), month: October, day: FirstOnOrAfter(Sunday, 16), time: 12600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1973), to_year: None, month: December, day: Ordinal(30), time: 12600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1979), to_year: None, month: May, day: Ordinal(13), time: 12600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1979), to_year: None, month: October, day: Ordinal(21), time: 12600, time_type: Wall, time_to_add: 0, letters: None }]
"Dhaka"
[RuleInfo { from_year: Number(2009), to_year: None, month: June, day: Ordinal(19), time: 82800, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2009), to_year: None, month: December, day: Ordinal(31), time: 86400, time_type: Wall, time_to_add: 0, letters: None }]
"Namibia"
[RuleInfo { from_year: Number(1994), to_year: None, month: March, day: Ordinal(21), time: 0, time_type: Wall, time_to_add: -3600, letters: Some("WAT") }, RuleInfo { from_year: Number(1994), to_year: Some(Number(2017)), month: September, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("CAT") }, RuleInfo { from_year: Number(1995), to_year: Some(Number(2017)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: -3600, letters: Some("WAT") }]
"Uruguay"
[RuleInfo { from_year: Number(1923), to_year: Some(Number(1925)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(1924), to_year: Some(Number(1926)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1933), to_year: Some(Number(1938)), month: October, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(1934), to_year: Some(Number(1941)), month: March, day: Last(Saturday), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1939), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(1940), to_year: None, month: October, day: Ordinal(27), time: 0, time_type: Wall, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(1941), to_year: None, month: August, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(1942), to_year: None, month: December, day: Ordinal(14), time: 0, time_type: Wall, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(1943), to_year: None, month: March, day: Ordinal(14), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1959), to_year: None, month: May, day: Ordinal(24), time: 0, time_type: Wall, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(1959), to_year: None, month: November, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1960), to_year: None, month: January, day: Ordinal(17), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1960), to_year: None, month: March, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1965), to_year: None, month: April, day: Ordinal(4), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1965), to_year: None, month: September, day: Ordinal(26), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1968), to_year: None, month: May, day: Ordinal(27), time: 0, time_type: Wall, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(1968), to_year: None, month: December, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1970), to_year: None, month: April, day: Ordinal(25), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1970), to_year: None, month: June, day: Ordinal(14), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1972), to_year: None, month: April, day: Ordinal(23), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1972), to_year: None, month: July, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1974), to_year: None, month: January, day: Ordinal(13), time: 0, time_type: Wall, time_to_add: 5400, letters: None }, RuleInfo { from_year: Number(1974), to_year: None, month: March, day: Ordinal(10), time: 0, time_type: Wall, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(1974), to_year: None, month: September, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1974), to_year: None, month: December, day: Ordinal(22), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1975), to_year: None, month: March, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1976), to_year: None, month: December, day: Ordinal(19), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1977), to_year: None, month: March, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1977), to_year: None, month: December, day: Ordinal(4), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1978), to_year: Some(Number(1979)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: December, day: Ordinal(17), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1979), to_year: None, month: April, day: Ordinal(29), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1980), to_year: None, month: March, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1987), to_year: None, month: December, day: Ordinal(14), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1988), to_year: None, month: February, day: Ordinal(28), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1988), to_year: None, month: December, day: Ordinal(11), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1989), to_year: None, month: March, day: Ordinal(5), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1989), to_year: None, month: October, day: Ordinal(29), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1990), to_year: None, month: February, day: Ordinal(25), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1990), to_year: Some(Number(1991)), month: October, day: FirstOnOrAfter(Sunday, 21), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1991), to_year: Some(Number(1992)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1992), to_year: None, month: October, day: Ordinal(18), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1993), to_year: None, month: February, day: Ordinal(28), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2004), to_year: None, month: September, day: Ordinal(19), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2005), to_year: None, month: March, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2005), to_year: None, month: October, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2006), to_year: Some(Number(2015)), month: March, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2006), to_year: Some(Number(2014)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }]
"Germany"
[RuleInfo { from_year: Number(1946), to_year: None, month: April, day: Ordinal(14), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: None, month: October, day: Ordinal(7), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1949)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1947), to_year: None, month: April, day: Ordinal(6), time: 10800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1947), to_year: None, month: May, day: Ordinal(11), time: 7200, time_type: Standard, time_to_add: 7200, letters: Some("M") }, RuleInfo { from_year: Number(1947), to_year: None, month: June, day: Ordinal(29), time: 10800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1948), to_year: None, month: April, day: Ordinal(18), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1949), to_year: None, month: April, day: Ordinal(10), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }]
"CA"
[RuleInfo { from_year: Number(1948), to_year: None, month: March, day: Ordinal(14), time: 7260, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1949), to_year: None, month: January, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1950), to_year: Some(Number(1966)), month: April, day: Last(Sunday), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1950), to_year: Some(Number(1961)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1962), to_year: Some(Number(1966)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"SA"
[RuleInfo { from_year: Number(1942), to_year: Some(Number(1943)), month: September, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1943), to_year: Some(Number(1944)), month: March, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Wall, time_to_add: 0, letters: None }]
"Macau"
[RuleInfo { from_year: Number(1942), to_year: Some(Number(1943)), month: April, day: Ordinal(30), time: 82800, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1942), to_year: None, month: November, day: Ordinal(17), time: 82800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1943), to_year: None, month: September, day: Ordinal(30), time: 82800, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: None, month: April, day: Ordinal(30), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1946), to_year: None, month: September, day: Ordinal(30), time: 82800, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1947), to_year: None, month: April, day: Ordinal(19), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1947), to_year: None, month: November, day: Ordinal(30), time: 82800, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1948), to_year: None, month: May, day: Ordinal(2), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1948), to_year: None, month: October, day: Ordinal(31), time: 82800, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1949), to_year: Some(Number(1950)), month: April, day: FirstOnOrAfter(Saturday, 1), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1949), to_year: Some(Number(1950)), month: October, day: Last(Saturday), time: 82800, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1951), to_year: None, month: March, day: Ordinal(31), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1951), to_year: None, month: October, day: Ordinal(28), time: 82800, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1952), to_year: Some(Number(1953)), month: April, day: FirstOnOrAfter(Saturday, 1), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1952), to_year: None, month: November, day: Ordinal(1), time: 82800, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1953), to_year: Some(Number(1954)), month: October, day: Last(Saturday), time: 82800, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1954), to_year: Some(Number(1956)), month: March, day: FirstOnOrAfter(Saturday, 17), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1955), to_year: None, month: November, day: Ordinal(5), time: 82800, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1956), to_year: Some(Number(1964)), month: November, day: FirstOnOrAfter(Sunday, 1), time: 12600, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1957), to_year: Some(Number(1964)), month: March, day: FirstOnOrAfter(Sunday, 18), time: 12600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1965), to_year: Some(Number(1973)), month: April, day: FirstOnOrAfter(Sunday, 16), time: 12600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1965), to_year: Some(Number(1966)), month: October, day: FirstOnOrAfter(Sunday, 16), time: 9000, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1967), to_year: Some(Number(1976)), month: October, day: FirstOnOrAfter(Sunday, 16), time: 12600, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1973), to_year: None, month: December, day: Ordinal(30), time: 12600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1975), to_year: Some(Number(1976)), month: April, day: FirstOnOrAfter(Sunday, 16), time: 12600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1979), to_year: None, month: May, day: Ordinal(13), time: 12600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1979), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 16), time: 12600, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"AW"
[RuleInfo { from_year: Number(1974), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1975), to_year: None, month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1983), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1984), to_year: None, month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1991), to_year: None, month: November, day: Ordinal(17), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1992), to_year: None, month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2006), to_year: None, month: December, day: Ordinal(3), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2007), to_year: Some(Number(2009)), month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2007), to_year: Some(Number(2008)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }]
"Swift"
[RuleInfo { from_year: Number(1957), to_year: None, month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1957), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1959), to_year: Some(Number(1961)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1959), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1960), to_year: Some(Number(1961)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"EUAsia"
[RuleInfo { from_year: Number(1981), to_year: Some(Maximum), month: March, day: Last(Sunday), time: 3600, time_type: UTC, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1979), to_year: Some(Number(1995)), month: September, day: Last(Sunday), time: 3600, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1996), to_year: Some(Maximum), month: October, day: Last(Sunday), time: 3600, time_type: UTC, time_to_add: 0, letters: None }]
"ROK"
[RuleInfo { from_year: Number(1948), to_year: None, month: June, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1948), to_year: None, month: September, day: Ordinal(12), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1949), to_year: None, month: April, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1949), to_year: Some(Number(1951)), month: September, day: FirstOnOrAfter(Saturday, 7), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1950), to_year: None, month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1951), to_year: None, month: May, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1955), to_year: None, month: May, day: Ordinal(5), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1955), to_year: None, month: September, day: Ordinal(8), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1956), to_year: None, month: May, day: Ordinal(20), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1956), to_year: None, month: September, day: Ordinal(29), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1957), to_year: Some(Number(1960)), month: May, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1957), to_year: Some(Number(1960)), month: September, day: FirstOnOrAfter(Saturday, 17), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1987), to_year: Some(Number(1988)), month: May, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1987), to_year: Some(Number(1988)), month: October, day: FirstOnOrAfter(Sunday, 8), time: 10800, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Chile"
[RuleInfo { from_year: Number(1927), to_year: Some(Number(1931)), month: September, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1928), to_year: Some(Number(1932)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1968), to_year: None, month: November, day: Ordinal(3), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1969), to_year: None, month: March, day: Ordinal(30), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1969), to_year: None, month: November, day: Ordinal(23), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1970), to_year: None, month: March, day: Ordinal(29), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1971), to_year: None, month: March, day: Ordinal(14), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1970), to_year: Some(Number(1972)), month: October, day: FirstOnOrAfter(Sunday, 9), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1972), to_year: Some(Number(1986)), month: March, day: FirstOnOrAfter(Sunday, 9), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1973), to_year: None, month: September, day: Ordinal(30), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1974), to_year: Some(Number(1987)), month: October, day: FirstOnOrAfter(Sunday, 9), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1987), to_year: None, month: April, day: Ordinal(12), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1988), to_year: Some(Number(1990)), month: March, day: FirstOnOrAfter(Sunday, 9), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1988), to_year: Some(Number(1989)), month: October, day: FirstOnOrAfter(Sunday, 9), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1990), to_year: None, month: September, day: Ordinal(16), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1991), to_year: Some(Number(1996)), month: March, day: FirstOnOrAfter(Sunday, 9), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1991), to_year: Some(Number(1997)), month: October, day: FirstOnOrAfter(Sunday, 9), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1997), to_year: None, month: March, day: Ordinal(30), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1998), to_year: None, month: March, day: FirstOnOrAfter(Sunday, 9), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1998), to_year: None, month: September, day: Ordinal(27), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1999), to_year: None, month: April, day: Ordinal(4), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1999), to_year: Some(Number(2010)), month: October, day: FirstOnOrAfter(Sunday, 9), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2000), to_year: Some(Number(2007)), month: March, day: FirstOnOrAfter(Sunday, 9), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2008), to_year: None, month: March, day: Ordinal(30), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2009), to_year: None, month: March, day: FirstOnOrAfter(Sunday, 9), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2010), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 1), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2011), to_year: None, month: May, day: FirstOnOrAfter(Sunday, 2), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2011), to_year: None, month: August, day: FirstOnOrAfter(Sunday, 16), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2012), to_year: Some(Number(2014)), month: April, day: FirstOnOrAfter(Sunday, 23), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2012), to_year: Some(Number(2014)), month: September, day: FirstOnOrAfter(Sunday, 2), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2016), to_year: Some(Number(2018)), month: May, day: FirstOnOrAfter(Sunday, 9), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2016), to_year: Some(Number(2018)), month: August, day: FirstOnOrAfter(Sunday, 9), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2019), to_year: Some(Maximum), month: April, day: FirstOnOrAfter(Sunday, 2), time: 10800, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2019), to_year: Some(Number(2021)), month: September, day: FirstOnOrAfter(Sunday, 2), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2022), to_year: None, month: September, day: FirstOnOrAfter(Sunday, 9), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2023), to_year: Some(Maximum), month: September, day: FirstOnOrAfter(Sunday, 2), time: 14400, time_type: UTC, time_to_add: 3600, letters: None }]
"Phil"
[RuleInfo { from_year: Number(1936), to_year: None, month: October, day: Ordinal(31), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1937), to_year: None, month: January, day: Ordinal(15), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1941), to_year: None, month: December, day: Ordinal(15), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1945), to_year: None, month: November, day: Ordinal(30), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1954), to_year: None, month: April, day: Ordinal(11), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1954), to_year: None, month: June, day: Ordinal(4), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: None, month: March, day: Ordinal(27), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1977), to_year: None, month: September, day: Ordinal(21), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1990), to_year: None, month: May, day: Ordinal(21), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1990), to_year: None, month: July, day: Ordinal(28), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Armenia"
[RuleInfo { from_year: Number(2011), to_year: None, month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2011), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: None }]
"Finland"
[RuleInfo { from_year: Number(1942), to_year: None, month: April, day: Ordinal(2), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: October, day: Ordinal(4), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1981), to_year: Some(Number(1982)), month: March, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1981), to_year: Some(Number(1982)), month: September, day: Last(Sunday), time: 10800, time_type: Wall, time_to_add: 0, letters: None }]
"Turkey"
[RuleInfo { from_year: Number(1916), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1916), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1920), to_year: None, month: March, day: Ordinal(28), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1920), to_year: None, month: October, day: Ordinal(25), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1921), to_year: None, month: April, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1921), to_year: None, month: October, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1922), to_year: None, month: March, day: Ordinal(26), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1922), to_year: None, month: October, day: Ordinal(8), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1924), to_year: None, month: May, day: Ordinal(13), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1924), to_year: Some(Number(1925)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1925), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1940), to_year: None, month: July, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1940), to_year: None, month: October, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1940), to_year: None, month: December, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1941), to_year: None, month: September, day: Ordinal(21), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1942), to_year: None, month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1945), to_year: None, month: October, day: Ordinal(8), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1946), to_year: None, month: June, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1948)), month: April, day: FirstOnOrAfter(Sunday, 16), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1951)), month: October, day: FirstOnOrAfter(Sunday, 2), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1949), to_year: None, month: April, day: Ordinal(10), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1950), to_year: None, month: April, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1951), to_year: None, month: April, day: Ordinal(22), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1962), to_year: None, month: July, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1963), to_year: None, month: October, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1964), to_year: None, month: May, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1964), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1973), to_year: None, month: June, day: Ordinal(3), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1973), to_year: Some(Number(1976)), month: October, day: FirstOnOrAfter(Sunday, 31), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1974), to_year: None, month: March, day: Ordinal(31), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1975), to_year: None, month: March, day: Ordinal(22), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1976), to_year: None, month: March, day: Ordinal(21), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: Some(Number(1978)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: Some(Number(1978)), month: October, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: June, day: Ordinal(29), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1983), to_year: None, month: July, day: Ordinal(31), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1983), to_year: None, month: October, day: Ordinal(2), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1985), to_year: None, month: April, day: Ordinal(20), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1985), to_year: None, month: September, day: Ordinal(28), time: 3600, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1986), to_year: Some(Number(1993)), month: March, day: Last(Sunday), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1986), to_year: Some(Number(1995)), month: September, day: Last(Sunday), time: 3600, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1994), to_year: None, month: March, day: Ordinal(20), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1995), to_year: Some(Number(2006)), month: March, day: Last(Sunday), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1996), to_year: Some(Number(2006)), month: October, day: Last(Sunday), time: 3600, time_type: Standard, time_to_add: 0, letters: None }]
"Albania"
[RuleInfo { from_year: Number(1940), to_year: None, month: June, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: November, day: Ordinal(2), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1943), to_year: None, month: March, day: Ordinal(29), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1943), to_year: None, month: April, day: Ordinal(10), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1974), to_year: None, month: May, day: Ordinal(4), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1974), to_year: None, month: October, day: Ordinal(2), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1975), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1975), to_year: None, month: October, day: Ordinal(2), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1976), to_year: None, month: May, day: Ordinal(2), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1976), to_year: None, month: October, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1977), to_year: None, month: May, day: Ordinal(8), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: None, month: October, day: Ordinal(2), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: May, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1978), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1979), to_year: None, month: May, day: Ordinal(5), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1979), to_year: None, month: September, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1980), to_year: None, month: May, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1980), to_year: None, month: October, day: Ordinal(4), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1981), to_year: None, month: April, day: Ordinal(26), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1981), to_year: None, month: September, day: Ordinal(27), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1982), to_year: None, month: May, day: Ordinal(2), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1982), to_year: None, month: October, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1983), to_year: None, month: April, day: Ordinal(18), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1983), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1984), to_year: None, month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }]
"NT_YK"
[RuleInfo { from_year: Number(1918), to_year: None, month: April, day: Ordinal(14), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1918), to_year: None, month: October, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1919), to_year: None, month: May, day: Ordinal(25), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1919), to_year: None, month: November, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: February, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("W") }, RuleInfo { from_year: Number(1945), to_year: None, month: August, day: Ordinal(14), time: 82800, time_type: UTC, time_to_add: 3600, letters: Some("P") }, RuleInfo { from_year: Number(1945), to_year: None, month: September, day: Ordinal(30), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1972), to_year: Some(Number(1986)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1972), to_year: Some(Number(2006)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1987), to_year: Some(Number(2006)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }]
"Troll"
[RuleInfo { from_year: Number(2005), to_year: Some(Maximum), month: March, day: Last(Sunday), time: 3600, time_type: UTC, time_to_add: 7200, letters: Some("+02") }, RuleInfo { from_year: Number(2004), to_year: Some(Maximum), month: October, day: Last(Sunday), time: 3600, time_type: UTC, time_to_add: 0, letters: Some("+00") }]
"Italy"
[RuleInfo { from_year: Number(1916), to_year: None, month: June, day: Ordinal(3), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1916), to_year: Some(Number(1917)), month: September, day: Ordinal(30), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1917), to_year: None, month: March, day: Ordinal(31), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1918), to_year: None, month: March, day: Ordinal(9), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1918), to_year: None, month: October, day: Ordinal(6), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1919), to_year: None, month: March, day: Ordinal(1), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1919), to_year: None, month: October, day: Ordinal(4), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1920), to_year: None, month: March, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1920), to_year: None, month: September, day: Ordinal(18), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1940), to_year: None, month: June, day: Ordinal(14), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: November, day: Ordinal(2), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1943), to_year: None, month: March, day: Ordinal(29), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1943), to_year: None, month: October, day: Ordinal(4), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1944), to_year: None, month: April, day: Ordinal(2), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1944), to_year: None, month: September, day: Ordinal(17), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1945), to_year: None, month: April, day: Ordinal(2), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1945), to_year: None, month: September, day: Ordinal(15), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1946), to_year: None, month: March, day: Ordinal(17), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: None, month: October, day: Ordinal(6), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1947), to_year: None, month: March, day: Ordinal(16), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1947), to_year: None, month: October, day: Ordinal(5), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1948), to_year: None, month: February, day: Ordinal(29), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1948), to_year: None, month: October, day: Ordinal(3), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1966), to_year: Some(Number(1968)), month: May, day: FirstOnOrAfter(Sunday, 22), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1966), to_year: None, month: September, day: Ordinal(24), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1967), to_year: Some(Number(1969)), month: September, day: FirstOnOrAfter(Sunday, 22), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1969), to_year: None, month: June, day: Ordinal(1), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1970), to_year: None, month: May, day: Ordinal(31), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1970), to_year: None, month: September, day: Last(Sunday), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1971), to_year: Some(Number(1972)), month: May, day: FirstOnOrAfter(Sunday, 22), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1971), to_year: None, month: September, day: Last(Sunday), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1972), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1973), to_year: None, month: June, day: Ordinal(3), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1973), to_year: Some(Number(1974)), month: September, day: Last(Sunday), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1974), to_year: None, month: May, day: Ordinal(26), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1975), to_year: None, month: June, day: Ordinal(1), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1975), to_year: Some(Number(1977)), month: September, day: Last(Sunday), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1976), to_year: None, month: May, day: Ordinal(30), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: Some(Number(1979)), month: May, day: FirstOnOrAfter(Sunday, 22), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1978), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1979), to_year: None, month: September, day: Ordinal(30), time: 0, time_type: Standard, time_to_add: 0, letters: None }]
"Belize"
[RuleInfo { from_year: Number(1918), to_year: Some(Number(1941)), month: October, day: FirstOnOrAfter(Saturday, 1), time: 86400, time_type: Wall, time_to_add: 1800, letters: Some("-0530") }, RuleInfo { from_year: Number(1919), to_year: Some(Number(1942)), month: February, day: FirstOnOrAfter(Saturday, 8), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("CST") }, RuleInfo { from_year: Number(1942), to_year: None, month: June, day: Ordinal(27), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("CWT") }, RuleInfo { from_year: Number(1945), to_year: None, month: August, day: Ordinal(14), time: 82800, time_type: UTC, time_to_add: 3600, letters: Some("CPT") }, RuleInfo { from_year: Number(1945), to_year: None, month: December, day: Ordinal(15), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("CST") }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1967)), month: October, day: FirstOnOrAfter(Saturday, 1), time: 86400, time_type: Wall, time_to_add: 1800, letters: Some("-0530") }, RuleInfo { from_year: Number(1948), to_year: Some(Number(1968)), month: February, day: FirstOnOrAfter(Saturday, 8), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("CST") }, RuleInfo { from_year: Number(1973), to_year: None, month: December, day: Ordinal(5), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("CDT") }, RuleInfo { from_year: Number(1974), to_year: None, month: February, day: Ordinal(9), time: 0, time_type: Wall, time_to_add: 0, letters: Some("CST") }, RuleInfo { from_year: Number(1982), to_year: None, month: December, day: Ordinal(18), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("CDT") }, RuleInfo { from_year: Number(1983), to_year: None, month: February, day: Ordinal(12), time: 0, time_type: Wall, time_to_add: 0, letters: Some("CST") }]
"AT"
[RuleInfo { from_year: Number(1916), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1917), to_year: None, month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1917), to_year: Some(Number(1918)), month: October, day: FirstOnOrAfter(Sunday, 22), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1918), to_year: Some(Number(1919)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1967), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1968), to_year: None, month: March, day: FirstOnOrAfter(Sunday, 29), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1968), to_year: Some(Number(1985)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1969), to_year: Some(Number(1971)), month: March, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1972), to_year: None, month: February, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1973), to_year: Some(Number(1981)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1982), to_year: Some(Number(1983)), month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1984), to_year: Some(Number(1986)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1986), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1987), to_year: Some(Number(1990)), month: March, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1987), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 22), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1988), to_year: Some(Number(1990)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1991), to_year: Some(Number(1999)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1991), to_year: Some(Number(2005)), month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2000), to_year: None, month: August, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2001), to_year: Some(Maximum), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2006), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2007), to_year: None, month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2008), to_year: Some(Maximum), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }]
"Salv"
[RuleInfo { from_year: Number(1987), to_year: Some(Number(1988)), month: May, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1987), to_year: Some(Number(1988)), month: September, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Lebanon"
[RuleInfo { from_year: Number(1920), to_year: None, month: March, day: Ordinal(28), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1920), to_year: None, month: October, day: Ordinal(25), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1921), to_year: None, month: April, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1921), to_year: None, month: October, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1922), to_year: None, month: March, day: Ordinal(26), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1922), to_year: None, month: October, day: Ordinal(8), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1923), to_year: None, month: April, day: Ordinal(22), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1923), to_year: None, month: September, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1957), to_year: Some(Number(1961)), month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1957), to_year: Some(Number(1961)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1972), to_year: None, month: June, day: Ordinal(22), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1972), to_year: Some(Number(1977)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1973), to_year: Some(Number(1977)), month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1978), to_year: None, month: April, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1978), to_year: None, month: September, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1984), to_year: Some(Number(1987)), month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1984), to_year: Some(Number(1991)), month: October, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1988), to_year: None, month: June, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1989), to_year: None, month: May, day: Ordinal(10), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1990), to_year: Some(Number(1992)), month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1992), to_year: None, month: October, day: Ordinal(4), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1993), to_year: Some(Maximum), month: March, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1993), to_year: Some(Number(1998)), month: September, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1999), to_year: Some(Maximum), month: October, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: None }]
"SanLuis"
[RuleInfo { from_year: Number(2008), to_year: Some(Number(2009)), month: March, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2007), to_year: Some(Number(2008)), month: October, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Wall, time_to_add: 3600, letters: None }]
"Menominee"
[RuleInfo { from_year: Number(1946), to_year: None, month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1946), to_year: None, month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1966), to_year: None, month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1966), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Haiti"
[RuleInfo { from_year: Number(1983), to_year: None, month: May, day: Ordinal(8), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1984), to_year: Some(Number(1987)), month: April, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1983), to_year: Some(Number(1987)), month: October, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1988), to_year: Some(Number(1997)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1988), to_year: Some(Number(1997)), month: October, day: Last(Sunday), time: 3600, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2005), to_year: Some(Number(2006)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2005), to_year: Some(Number(2006)), month: October, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2012), to_year: Some(Number(2015)), month: March, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2012), to_year: Some(Number(2015)), month: November, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2017), to_year: Some(Maximum), month: March, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2017), to_year: Some(Maximum), month: November, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Palestine"
[RuleInfo { from_year: Number(1999), to_year: Some(Number(2005)), month: April, day: FirstOnOrAfter(Friday, 15), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1999), to_year: Some(Number(2003)), month: October, day: FirstOnOrAfter(Friday, 15), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2004), to_year: None, month: October, day: Ordinal(1), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2005), to_year: None, month: October, day: Ordinal(4), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2006), to_year: Some(Number(2007)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2006), to_year: None, month: September, day: Ordinal(22), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2007), to_year: None, month: September, day: Ordinal(13), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2008), to_year: Some(Number(2009)), month: March, day: Last(Friday), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2008), to_year: None, month: September, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2009), to_year: None, month: September, day: Ordinal(4), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2010), to_year: None, month: March, day: Ordinal(26), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2010), to_year: None, month: August, day: Ordinal(11), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2011), to_year: None, month: April, day: Ordinal(1), time: 60, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2011), to_year: None, month: August, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2011), to_year: None, month: August, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2011), to_year: None, month: September, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2012), to_year: Some(Number(2014)), month: March, day: Last(Thursday), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2012), to_year: None, month: September, day: Ordinal(21), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2013), to_year: None, month: September, day: Ordinal(27), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2014), to_year: None, month: October, day: Ordinal(24), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2015), to_year: None, month: March, day: Ordinal(28), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2015), to_year: None, month: October, day: Ordinal(23), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2016), to_year: Some(Number(2018)), month: March, day: LastOnOrBefore(Saturday, 30), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2016), to_year: Some(Number(2018)), month: October, day: LastOnOrBefore(Saturday, 30), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2019), to_year: None, month: March, day: Ordinal(29), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2019), to_year: None, month: October, day: LastOnOrBefore(Saturday, 30), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2020), to_year: Some(Number(2021)), month: March, day: LastOnOrBefore(Saturday, 30), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2020), to_year: None, month: October, day: Ordinal(24), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2021), to_year: None, month: October, day: Ordinal(29), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2022), to_year: None, month: March, day: Ordinal(27), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2022), to_year: Some(Number(2035)), month: October, day: LastOnOrBefore(Saturday, 30), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2023), to_year: None, month: April, day: Ordinal(29), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2024), to_year: None, month: April, day: Ordinal(20), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2025), to_year: None, month: April, day: Ordinal(12), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2026), to_year: Some(Number(2054)), month: March, day: LastOnOrBefore(Saturday, 30), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2036), to_year: None, month: October, day: Ordinal(18), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2037), to_year: None, month: October, day: Ordinal(10), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2038), to_year: None, month: September, day: Ordinal(25), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2039), to_year: None, month: September, day: Ordinal(17), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2040), to_year: None, month: September, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2040), to_year: None, month: October, day: Ordinal(20), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2040), to_year: Some(Number(2067)), month: October, day: LastOnOrBefore(Saturday, 30), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2041), to_year: None, month: August, day: Ordinal(24), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2041), to_year: None, month: October, day: Ordinal(5), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2042), to_year: None, month: August, day: Ordinal(16), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2042), to_year: None, month: September, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2043), to_year: None, month: August, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2043), to_year: None, month: September, day: Ordinal(19), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2044), to_year: None, month: July, day: Ordinal(23), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2044), to_year: None, month: September, day: Ordinal(3), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2045), to_year: None, month: July, day: Ordinal(15), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2045), to_year: None, month: August, day: Ordinal(26), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2046), to_year: None, month: June, day: Ordinal(30), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2046), to_year: None, month: August, day: Ordinal(18), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2047), to_year: None, month: June, day: Ordinal(22), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2047), to_year: None, month: August, day: Ordinal(3), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2048), to_year: None, month: June, day: Ordinal(6), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2048), to_year: None, month: July, day: Ordinal(25), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2049), to_year: None, month: May, day: Ordinal(29), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2049), to_year: None, month: July, day: Ordinal(10), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2050), to_year: None, month: May, day: Ordinal(21), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2050), to_year: None, month: July, day: Ordinal(2), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2051), to_year: None, month: May, day: Ordinal(6), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2051), to_year: None, month: June, day: Ordinal(24), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2052), to_year: None, month: April, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2052), to_year: None, month: June, day: Ordinal(8), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2053), to_year: None, month: April, day: Ordinal(12), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2053), to_year: None, month: May, day: Ordinal(31), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2054), to_year: None, month: April, day: Ordinal(4), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2054), to_year: None, month: May, day: Ordinal(23), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2055), to_year: None, month: May, day: Ordinal(8), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2056), to_year: None, month: April, day: Ordinal(29), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2057), to_year: None, month: April, day: Ordinal(14), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2058), to_year: None, month: April, day: Ordinal(6), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2059), to_year: Some(Maximum), month: March, day: LastOnOrBefore(Saturday, 30), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2068), to_year: None, month: October, day: Ordinal(20), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2069), to_year: None, month: October, day: Ordinal(12), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2070), to_year: None, month: October, day: Ordinal(4), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2071), to_year: None, month: September, day: Ordinal(19), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2072), to_year: None, month: September, day: Ordinal(10), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2072), to_year: None, month: October, day: Ordinal(22), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2072), to_year: Some(Maximum), month: October, day: LastOnOrBefore(Saturday, 30), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2073), to_year: None, month: September, day: Ordinal(2), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2073), to_year: None, month: October, day: Ordinal(14), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2074), to_year: None, month: August, day: Ordinal(18), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2074), to_year: None, month: October, day: Ordinal(6), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2075), to_year: None, month: August, day: Ordinal(10), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2075), to_year: None, month: September, day: Ordinal(21), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2076), to_year: None, month: July, day: Ordinal(25), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2076), to_year: None, month: September, day: Ordinal(12), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2077), to_year: None, month: July, day: Ordinal(17), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2077), to_year: None, month: September, day: Ordinal(4), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2078), to_year: None, month: July, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2078), to_year: None, month: August, day: Ordinal(20), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2079), to_year: None, month: June, day: Ordinal(24), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2079), to_year: None, month: August, day: Ordinal(12), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2080), to_year: None, month: June, day: Ordinal(15), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2080), to_year: None, month: July, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2081), to_year: None, month: June, day: Ordinal(7), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2081), to_year: None, month: July, day: Ordinal(19), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2082), to_year: None, month: May, day: Ordinal(23), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2082), to_year: None, month: July, day: Ordinal(11), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2083), to_year: None, month: May, day: Ordinal(15), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2083), to_year: None, month: June, day: Ordinal(26), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2084), to_year: None, month: April, day: Ordinal(29), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2084), to_year: None, month: June, day: Ordinal(17), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2085), to_year: None, month: April, day: Ordinal(21), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2085), to_year: None, month: June, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2086), to_year: None, month: April, day: Ordinal(13), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2086), to_year: None, month: May, day: Ordinal(25), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }]
"C-Eur"
[RuleInfo { from_year: Number(1916), to_year: None, month: April, day: Ordinal(30), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1916), to_year: None, month: October, day: Ordinal(1), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1917), to_year: Some(Number(1918)), month: April, day: FirstOnOrAfter(Monday, 15), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1917), to_year: Some(Number(1918)), month: September, day: FirstOnOrAfter(Monday, 15), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1940), to_year: None, month: April, day: Ordinal(1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: November, day: Ordinal(2), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1943), to_year: None, month: March, day: Ordinal(29), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1943), to_year: None, month: October, day: Ordinal(4), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1944), to_year: Some(Number(1945)), month: April, day: FirstOnOrAfter(Monday, 1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1944), to_year: None, month: October, day: Ordinal(2), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1945), to_year: None, month: September, day: Ordinal(16), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1977), to_year: Some(Number(1980)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: None, month: September, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: October, day: Ordinal(1), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1979), to_year: Some(Number(1995)), month: September, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1981), to_year: Some(Maximum), month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1996), to_year: Some(Maximum), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: None }]
"Nic"
[RuleInfo { from_year: Number(1979), to_year: Some(Number(1980)), month: March, day: FirstOnOrAfter(Sunday, 16), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1979), to_year: Some(Number(1980)), month: June, day: FirstOnOrAfter(Monday, 23), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2005), to_year: None, month: April, day: Ordinal(10), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2005), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2006), to_year: None, month: April, day: Ordinal(30), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2006), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 1), time: 3600, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Taiwan"
[RuleInfo { from_year: Number(1946), to_year: None, month: May, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1946), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1947), to_year: None, month: April, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1947), to_year: None, month: November, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1948), to_year: Some(Number(1951)), month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1948), to_year: Some(Number(1951)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1952), to_year: None, month: March, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1952), to_year: Some(Number(1954)), month: November, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1953), to_year: Some(Number(1959)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1955), to_year: Some(Number(1961)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1960), to_year: Some(Number(1961)), month: June, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1974), to_year: Some(Number(1975)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1974), to_year: Some(Number(1975)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1979), to_year: None, month: July, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1979), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Cyprus"
[RuleInfo { from_year: Number(1975), to_year: None, month: April, day: Ordinal(13), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1975), to_year: None, month: October, day: Ordinal(12), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1976), to_year: None, month: May, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1976), to_year: None, month: October, day: Ordinal(11), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1977), to_year: Some(Number(1980)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: None, month: September, day: Ordinal(25), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: October, day: Ordinal(2), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1979), to_year: Some(Number(1997)), month: September, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1981), to_year: Some(Number(1998)), month: March, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }]
"Chatham"
[RuleInfo { from_year: Number(1974), to_year: None, month: November, day: FirstOnOrAfter(Sunday, 1), time: 9900, time_type: Standard, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1975), to_year: None, month: February, day: Last(Sunday), time: 9900, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1975), to_year: Some(Number(1988)), month: October, day: Last(Sunday), time: 9900, time_type: Standard, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1976), to_year: Some(Number(1989)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 9900, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1989), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 8), time: 9900, time_type: Standard, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1990), to_year: Some(Number(2006)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 9900, time_type: Standard, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1990), to_year: Some(Number(2007)), month: March, day: FirstOnOrAfter(Sunday, 15), time: 9900, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2007), to_year: Some(Maximum), month: September, day: Last(Sunday), time: 9900, time_type: Standard, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2008), to_year: Some(Maximum), month: April, day: FirstOnOrAfter(Sunday, 1), time: 9900, time_type: Standard, time_to_add: 0, letters: None }]
"SovietZone"
[RuleInfo { from_year: Number(1945), to_year: None, month: May, day: Ordinal(24), time: 7200, time_type: Wall, time_to_add: 7200, letters: Some("M") }, RuleInfo { from_year: Number(1945), to_year: None, month: September, day: Ordinal(24), time: 10800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1945), to_year: None, month: November, day: Ordinal(18), time: 7200, time_type: Standard, time_to_add: 0, letters: None }]
"Marengo"
[RuleInfo { from_year: Number(1951), to_year: None, month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1951), to_year: None, month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1954), to_year: Some(Number(1960)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1954), to_year: Some(Number(1960)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Detroit"
[RuleInfo { from_year: Number(1948), to_year: None, month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1948), to_year: None, month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"DR"
[RuleInfo { from_year: Number(1966), to_year: None, month: October, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("EDT") }, RuleInfo { from_year: Number(1967), to_year: None, month: February, day: Ordinal(28), time: 0, time_type: Wall, time_to_add: 0, letters: Some("EST") }, RuleInfo { from_year: Number(1969), to_year: Some(Number(1973)), month: October, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 1800, letters: Some("-0430") }, RuleInfo { from_year: Number(1970), to_year: None, month: February, day: Ordinal(21), time: 0, time_type: Wall, time_to_add: 0, letters: Some("EST") }, RuleInfo { from_year: Number(1971), to_year: None, month: January, day: Ordinal(20), time: 0, time_type: Wall, time_to_add: 0, letters: Some("EST") }, RuleInfo { from_year: Number(1972), to_year: Some(Number(1974)), month: January, day: Ordinal(21), time: 0, time_type: Wall, time_to_add: 0, letters: Some("EST") }]
"Arg"
[RuleInfo { from_year: Number(1930), to_year: None, month: December, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1931), to_year: None, month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1931), to_year: None, month: October, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1932), to_year: Some(Number(1940)), month: March, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1932), to_year: Some(Number(1939)), month: November, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1940), to_year: None, month: July, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1941), to_year: None, month: June, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1941), to_year: None, month: October, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1943), to_year: None, month: August, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1943), to_year: None, month: October, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1946), to_year: None, month: March, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1946), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1963), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1963), to_year: None, month: December, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1964), to_year: Some(Number(1966)), month: March, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1964), to_year: Some(Number(1966)), month: October, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1967), to_year: None, month: April, day: Ordinal(2), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1967), to_year: Some(Number(1968)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1968), to_year: Some(Number(1969)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1974), to_year: None, month: January, day: Ordinal(23), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1974), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1988), to_year: None, month: December, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1989), to_year: Some(Number(1993)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1989), to_year: Some(Number(1992)), month: October, day: FirstOnOrAfter(Sunday, 15), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1999), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2000), to_year: None, month: March, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2007), to_year: None, month: December, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2008), to_year: Some(Number(2009)), month: March, day: FirstOnOrAfter(Sunday, 15), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2008), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 15), time: 0, time_type: Wall, time_to_add: 3600, letters: None }]
"Pakistan"
[RuleInfo { from_year: Number(2002), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 2), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2002), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 2), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2008), to_year: None, month: June, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2008), to_year: Some(Number(2009)), month: November, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2009), to_year: None, month: April, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }]
"Peru"
[RuleInfo { from_year: Number(1938), to_year: None, month: January, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1938), to_year: None, month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1938), to_year: Some(Number(1939)), month: September, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1939), to_year: Some(Number(1940)), month: March, day: FirstOnOrAfter(Sunday, 24), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1986), to_year: Some(Number(1987)), month: January, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1986), to_year: Some(Number(1987)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1990), to_year: None, month: January, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1990), to_year: None, month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1994), to_year: None, month: January, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1994), to_year: None, month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }]
"AV"
[RuleInfo { from_year: Number(1971), to_year: Some(Number(1985)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1972), to_year: None, month: February, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1973), to_year: Some(Number(1985)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1986), to_year: Some(Number(1990)), month: March, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1986), to_year: Some(Number(1987)), month: October, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1988), to_year: Some(Number(1999)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1991), to_year: Some(Number(1994)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1995), to_year: Some(Number(2005)), month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2000), to_year: None, month: August, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2001), to_year: Some(Number(2007)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2006), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2007), to_year: None, month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2008), to_year: Some(Maximum), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2008), to_year: Some(Maximum), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }]
"Winn"
[RuleInfo { from_year: Number(1916), to_year: None, month: April, day: Ordinal(23), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1916), to_year: None, month: September, day: Ordinal(17), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1918), to_year: None, month: April, day: Ordinal(14), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1918), to_year: None, month: October, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1937), to_year: None, month: May, day: Ordinal(16), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1937), to_year: None, month: September, day: Ordinal(26), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: February, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("W") }, RuleInfo { from_year: Number(1945), to_year: None, month: August, day: Ordinal(14), time: 82800, time_type: UTC, time_to_add: 3600, letters: Some("P") }, RuleInfo { from_year: Number(1945), to_year: None, month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: None, month: May, day: Ordinal(12), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1946), to_year: None, month: October, day: Ordinal(13), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1949)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1949)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1950), to_year: None, month: May, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1950), to_year: None, month: September, day: Ordinal(30), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1951), to_year: Some(Number(1960)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1951), to_year: Some(Number(1958)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1959), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1960), to_year: None, month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1963), to_year: None, month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1963), to_year: None, month: September, day: Ordinal(22), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1966), to_year: Some(Number(1986)), month: April, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1966), to_year: Some(Number(2005)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1987), to_year: Some(Number(2005)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }]
"NBorneo"
[RuleInfo { from_year: Number(1935), to_year: Some(Number(1941)), month: September, day: Ordinal(14), time: 0, time_type: Wall, time_to_add: 1200, letters: None }, RuleInfo { from_year: Number(1935), to_year: Some(Number(1941)), month: December, day: Ordinal(14), time: 0, time_type: Wall, time_to_add: 0, letters: None }]
"Zion"
[RuleInfo { from_year: Number(1940), to_year: None, month: May, day: Ordinal(31), time: 86400, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1940), to_year: None, month: September, day: Ordinal(30), time: 86400, time_type: UTC, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1940), to_year: None, month: November, day: Ordinal(16), time: 86400, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1942), to_year: Some(Number(1946)), month: October, day: Ordinal(31), time: 86400, time_type: UTC, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1943), to_year: Some(Number(1944)), month: March, day: Ordinal(31), time: 86400, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1945), to_year: Some(Number(1946)), month: April, day: Ordinal(15), time: 86400, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1948), to_year: None, month: May, day: Ordinal(22), time: 86400, time_type: UTC, time_to_add: 7200, letters: Some("DD") }, RuleInfo { from_year: Number(1948), to_year: None, month: August, day: Ordinal(31), time: 86400, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1948), to_year: Some(Number(1949)), month: October, day: Ordinal(31), time: 86400, time_type: UTC, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1949), to_year: None, month: April, day: Ordinal(30), time: 86400, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1950), to_year: None, month: April, day: Ordinal(15), time: 86400, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1950), to_year: None, month: September, day: Ordinal(14), time: 86400, time_type: UTC, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1951), to_year: None, month: March, day: Ordinal(31), time: 86400, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1951), to_year: None, month: November, day: Ordinal(10), time: 86400, time_type: UTC, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1952), to_year: None, month: April, day: Ordinal(19), time: 86400, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1952), to_year: None, month: October, day: Ordinal(18), time: 86400, time_type: UTC, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1953), to_year: None, month: April, day: Ordinal(11), time: 86400, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1953), to_year: None, month: September, day: Ordinal(12), time: 86400, time_type: UTC, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1954), to_year: None, month: June, day: Ordinal(12), time: 86400, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1954), to_year: None, month: September, day: Ordinal(11), time: 86400, time_type: UTC, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1955), to_year: None, month: June, day: Ordinal(11), time: 86400, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1955), to_year: None, month: September, day: Ordinal(10), time: 86400, time_type: UTC, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1956), to_year: None, month: June, day: Ordinal(2), time: 86400, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1956), to_year: None, month: September, day: Ordinal(29), time: 86400, time_type: UTC, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1957), to_year: None, month: April, day: Ordinal(27), time: 86400, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1957), to_year: None, month: September, day: Ordinal(21), time: 86400, time_type: UTC, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1974), to_year: None, month: July, day: Ordinal(6), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1974), to_year: None, month: October, day: Ordinal(12), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1975), to_year: None, month: April, day: Ordinal(19), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1975), to_year: None, month: August, day: Ordinal(30), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1980), to_year: None, month: August, day: Ordinal(2), time: 86400, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1980), to_year: None, month: September, day: Ordinal(13), time: 86400, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1984), to_year: None, month: May, day: Ordinal(5), time: 86400, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1984), to_year: None, month: August, day: Ordinal(25), time: 86400, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1985), to_year: None, month: April, day: Ordinal(13), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1985), to_year: None, month: August, day: Ordinal(31), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1986), to_year: None, month: May, day: Ordinal(17), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1986), to_year: None, month: September, day: Ordinal(6), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1987), to_year: None, month: April, day: Ordinal(14), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1987), to_year: None, month: September, day: Ordinal(12), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1988), to_year: None, month: April, day: Ordinal(9), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1988), to_year: None, month: September, day: Ordinal(3), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1989), to_year: None, month: April, day: Ordinal(29), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1989), to_year: None, month: September, day: Ordinal(2), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1990), to_year: None, month: March, day: Ordinal(24), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1990), to_year: None, month: August, day: Ordinal(25), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1991), to_year: None, month: March, day: Ordinal(23), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1991), to_year: None, month: August, day: Ordinal(31), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1992), to_year: None, month: March, day: Ordinal(28), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1992), to_year: None, month: September, day: Ordinal(5), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1993), to_year: None, month: April, day: Ordinal(2), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1993), to_year: None, month: September, day: Ordinal(5), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1994), to_year: None, month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1994), to_year: None, month: August, day: Ordinal(28), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1995), to_year: None, month: March, day: Ordinal(31), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1995), to_year: None, month: September, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1996), to_year: None, month: March, day: Ordinal(14), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1996), to_year: None, month: September, day: Ordinal(15), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1997), to_year: None, month: March, day: Ordinal(20), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1997), to_year: None, month: September, day: Ordinal(13), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1998), to_year: None, month: March, day: Ordinal(20), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1998), to_year: None, month: September, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1999), to_year: None, month: April, day: Ordinal(2), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1999), to_year: None, month: September, day: Ordinal(3), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2000), to_year: None, month: April, day: Ordinal(14), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2000), to_year: None, month: October, day: Ordinal(6), time: 3600, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2001), to_year: None, month: April, day: Ordinal(9), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2001), to_year: None, month: September, day: Ordinal(24), time: 3600, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2002), to_year: None, month: March, day: Ordinal(29), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2002), to_year: None, month: October, day: Ordinal(7), time: 3600, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2003), to_year: None, month: March, day: Ordinal(28), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2003), to_year: None, month: October, day: Ordinal(3), time: 3600, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2004), to_year: None, month: April, day: Ordinal(7), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2004), to_year: None, month: September, day: Ordinal(22), time: 3600, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2005), to_year: Some(Number(2012)), month: April, day: LastOnOrBefore(Friday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2005), to_year: None, month: October, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2006), to_year: None, month: October, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2007), to_year: None, month: September, day: Ordinal(16), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2008), to_year: None, month: October, day: Ordinal(5), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2009), to_year: None, month: September, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2010), to_year: None, month: September, day: Ordinal(12), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2011), to_year: None, month: October, day: Ordinal(2), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2012), to_year: None, month: September, day: Ordinal(23), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2013), to_year: Some(Maximum), month: March, day: FirstOnOrAfter(Friday, 23), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2013), to_year: Some(Maximum), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Tonga"
[RuleInfo { from_year: Number(1999), to_year: None, month: October, day: Ordinal(7), time: 7200, time_type: Standard, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2000), to_year: None, month: March, day: Ordinal(19), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2000), to_year: Some(Number(2001)), month: November, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2001), to_year: Some(Number(2002)), month: January, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2016), to_year: None, month: November, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2017), to_year: None, month: January, day: FirstOnOrAfter(Sunday, 15), time: 10800, time_type: Wall, time_to_add: 0, letters: None }]
"Czech"
[RuleInfo { from_year: Number(1945), to_year: None, month: April, day: FirstOnOrAfter(Monday, 1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1945), to_year: None, month: October, day: Ordinal(1), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1946), to_year: None, month: May, day: Ordinal(6), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: Some(Number(1949)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1948)), month: April, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1949), to_year: None, month: April, day: Ordinal(9), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }]
"Sudan"
[RuleInfo { from_year: Number(1970), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1970), to_year: Some(Number(1985)), month: October, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1971), to_year: None, month: April, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1972), to_year: Some(Number(1985)), month: April, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }]
"Romania"
[RuleInfo { from_year: Number(1932), to_year: None, month: May, day: Ordinal(21), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1932), to_year: Some(Number(1939)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1933), to_year: Some(Number(1939)), month: April, day: FirstOnOrAfter(Sunday, 2), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1979), to_year: None, month: May, day: Ordinal(27), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1979), to_year: None, month: September, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1980), to_year: None, month: April, day: Ordinal(5), time: 82800, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1980), to_year: None, month: September, day: Last(Sunday), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1991), to_year: Some(Number(1993)), month: March, day: Last(Sunday), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1991), to_year: Some(Number(1993)), month: September, day: Last(Sunday), time: 0, time_type: Standard, time_to_add: 0, letters: None }]
"RussiaAsia"
[RuleInfo { from_year: Number(1981), to_year: Some(Number(1984)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1981), to_year: Some(Number(1983)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1984), to_year: Some(Number(1995)), month: September, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1985), to_year: Some(Number(2010)), month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1996), to_year: Some(Number(2010)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: None }]
"Azer"
[RuleInfo { from_year: Number(1997), to_year: Some(Number(2015)), month: March, day: Last(Sunday), time: 14400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1997), to_year: Some(Number(2015)), month: October, day: Last(Sunday), time: 18000, time_type: Wall, time_to_add: 0, letters: None }]
"Holiday"
[RuleInfo { from_year: Number(1992), to_year: Some(Number(1993)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1993), to_year: Some(Number(1994)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }]
"Morocco"
[RuleInfo { from_year: Number(1939), to_year: None, month: September, day: Ordinal(12), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1939), to_year: None, month: November, day: Ordinal(19), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1940), to_year: None, month: February, day: Ordinal(25), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1945), to_year: None, month: November, day: Ordinal(18), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1950), to_year: None, month: June, day: Ordinal(11), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1950), to_year: None, month: October, day: Ordinal(29), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1967), to_year: None, month: June, day: Ordinal(3), time: 43200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1967), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1974), to_year: None, month: June, day: Ordinal(24), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1974), to_year: None, month: September, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1976), to_year: Some(Number(1977)), month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1976), to_year: None, month: August, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1977), to_year: None, month: September, day: Ordinal(28), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: June, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: August, day: Ordinal(4), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2008), to_year: None, month: June, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2008), to_year: None, month: September, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2009), to_year: None, month: June, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2009), to_year: None, month: August, day: Ordinal(21), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2010), to_year: None, month: May, day: Ordinal(2), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2010), to_year: None, month: August, day: Ordinal(8), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2011), to_year: None, month: April, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2011), to_year: None, month: July, day: Ordinal(31), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2012), to_year: Some(Number(2013)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2012), to_year: None, month: July, day: Ordinal(20), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2012), to_year: None, month: August, day: Ordinal(20), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2012), to_year: None, month: September, day: Ordinal(30), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2013), to_year: None, month: July, day: Ordinal(7), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2013), to_year: None, month: August, day: Ordinal(10), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2013), to_year: Some(Number(2018)), month: October, day: Last(Sunday), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2014), to_year: Some(Number(2018)), month: March, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2014), to_year: None, month: June, day: Ordinal(28), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2014), to_year: None, month: August, day: Ordinal(2), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2015), to_year: None, month: June, day: Ordinal(14), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2015), to_year: None, month: July, day: Ordinal(19), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2016), to_year: None, month: June, day: Ordinal(5), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2016), to_year: None, month: July, day: Ordinal(10), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2017), to_year: None, month: May, day: Ordinal(21), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2017), to_year: None, month: July, day: Ordinal(2), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2018), to_year: None, month: May, day: Ordinal(13), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2018), to_year: None, month: June, day: Ordinal(17), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2019), to_year: None, month: May, day: Ordinal(5), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2019), to_year: None, month: June, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2020), to_year: None, month: April, day: Ordinal(19), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2020), to_year: None, month: May, day: Ordinal(31), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2021), to_year: None, month: April, day: Ordinal(11), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2021), to_year: None, month: May, day: Ordinal(16), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2022), to_year: None, month: March, day: Ordinal(27), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2022), to_year: None, month: May, day: Ordinal(8), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2023), to_year: None, month: March, day: Ordinal(19), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2023), to_year: None, month: April, day: Ordinal(23), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2024), to_year: None, month: March, day: Ordinal(10), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2024), to_year: None, month: April, day: Ordinal(14), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2025), to_year: None, month: February, day: Ordinal(23), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2025), to_year: None, month: April, day: Ordinal(6), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2026), to_year: None, month: February, day: Ordinal(15), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2026), to_year: None, month: March, day: Ordinal(22), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2027), to_year: None, month: February, day: Ordinal(7), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2027), to_year: None, month: March, day: Ordinal(14), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2028), to_year: None, month: January, day: Ordinal(23), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2028), to_year: None, month: March, day: Ordinal(5), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2029), to_year: None, month: January, day: Ordinal(14), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2029), to_year: None, month: February, day: Ordinal(18), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2029), to_year: None, month: December, day: Ordinal(30), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2030), to_year: None, month: February, day: Ordinal(10), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2030), to_year: None, month: December, day: Ordinal(22), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2031), to_year: None, month: January, day: Ordinal(26), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2031), to_year: None, month: December, day: Ordinal(14), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2032), to_year: None, month: January, day: Ordinal(18), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2032), to_year: None, month: November, day: Ordinal(28), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2033), to_year: None, month: January, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2033), to_year: None, month: November, day: Ordinal(20), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2033), to_year: None, month: December, day: Ordinal(25), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2034), to_year: None, month: November, day: Ordinal(5), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2034), to_year: None, month: December, day: Ordinal(17), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2035), to_year: None, month: October, day: Ordinal(28), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2035), to_year: None, month: December, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2036), to_year: None, month: October, day: Ordinal(19), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2036), to_year: None, month: November, day: Ordinal(23), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2037), to_year: None, month: October, day: Ordinal(4), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2037), to_year: None, month: November, day: Ordinal(15), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2038), to_year: None, month: September, day: Ordinal(26), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2038), to_year: None, month: October, day: Ordinal(31), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2039), to_year: None, month: September, day: Ordinal(18), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2039), to_year: None, month: October, day: Ordinal(23), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2040), to_year: None, month: September, day: Ordinal(2), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2040), to_year: None, month: October, day: Ordinal(14), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2041), to_year: None, month: August, day: Ordinal(25), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2041), to_year: None, month: September, day: Ordinal(29), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2042), to_year: None, month: August, day: Ordinal(10), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2042), to_year: None, month: September, day: Ordinal(21), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2043), to_year: None, month: August, day: Ordinal(2), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2043), to_year: None, month: September, day: Ordinal(13), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2044), to_year: None, month: July, day: Ordinal(24), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2044), to_year: None, month: August, day: Ordinal(28), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2045), to_year: None, month: July, day: Ordinal(9), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2045), to_year: None, month: August, day: Ordinal(20), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2046), to_year: None, month: July, day: Ordinal(1), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2046), to_year: None, month: August, day: Ordinal(5), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2047), to_year: None, month: June, day: Ordinal(23), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2047), to_year: None, month: July, day: Ordinal(28), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2048), to_year: None, month: June, day: Ordinal(7), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2048), to_year: None, month: July, day: Ordinal(19), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2049), to_year: None, month: May, day: Ordinal(30), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2049), to_year: None, month: July, day: Ordinal(4), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2050), to_year: None, month: May, day: Ordinal(15), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2050), to_year: None, month: June, day: Ordinal(26), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2051), to_year: None, month: May, day: Ordinal(7), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2051), to_year: None, month: June, day: Ordinal(18), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2052), to_year: None, month: April, day: Ordinal(28), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2052), to_year: None, month: June, day: Ordinal(2), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2053), to_year: None, month: April, day: Ordinal(13), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2053), to_year: None, month: May, day: Ordinal(25), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2054), to_year: None, month: April, day: Ordinal(5), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2054), to_year: None, month: May, day: Ordinal(10), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2055), to_year: None, month: March, day: Ordinal(28), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2055), to_year: None, month: May, day: Ordinal(2), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2056), to_year: None, month: March, day: Ordinal(12), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2056), to_year: None, month: April, day: Ordinal(23), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2057), to_year: None, month: March, day: Ordinal(4), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2057), to_year: None, month: April, day: Ordinal(8), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2058), to_year: None, month: February, day: Ordinal(17), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2058), to_year: None, month: March, day: Ordinal(31), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2059), to_year: None, month: February, day: Ordinal(9), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2059), to_year: None, month: March, day: Ordinal(23), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2060), to_year: None, month: February, day: Ordinal(1), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2060), to_year: None, month: March, day: Ordinal(7), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2061), to_year: None, month: January, day: Ordinal(16), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2061), to_year: None, month: February, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2062), to_year: None, month: January, day: Ordinal(8), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2062), to_year: None, month: February, day: Ordinal(12), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2062), to_year: None, month: December, day: Ordinal(31), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2063), to_year: None, month: February, day: Ordinal(4), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2063), to_year: None, month: December, day: Ordinal(16), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2064), to_year: None, month: January, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2064), to_year: None, month: December, day: Ordinal(7), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2065), to_year: None, month: January, day: Ordinal(11), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2065), to_year: None, month: November, day: Ordinal(22), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2066), to_year: None, month: January, day: Ordinal(3), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2066), to_year: None, month: November, day: Ordinal(14), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2066), to_year: None, month: December, day: Ordinal(26), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2067), to_year: None, month: November, day: Ordinal(6), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2067), to_year: None, month: December, day: Ordinal(11), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2068), to_year: None, month: October, day: Ordinal(21), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2068), to_year: None, month: December, day: Ordinal(2), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2069), to_year: None, month: October, day: Ordinal(13), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2069), to_year: None, month: November, day: Ordinal(17), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2070), to_year: None, month: October, day: Ordinal(5), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2070), to_year: None, month: November, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2071), to_year: None, month: September, day: Ordinal(20), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2071), to_year: None, month: November, day: Ordinal(1), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2072), to_year: None, month: September, day: Ordinal(11), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2072), to_year: None, month: October, day: Ordinal(16), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2073), to_year: None, month: August, day: Ordinal(27), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2073), to_year: None, month: October, day: Ordinal(8), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2074), to_year: None, month: August, day: Ordinal(19), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2074), to_year: None, month: September, day: Ordinal(30), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2075), to_year: None, month: August, day: Ordinal(11), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2075), to_year: None, month: September, day: Ordinal(15), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2076), to_year: None, month: July, day: Ordinal(26), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2076), to_year: None, month: September, day: Ordinal(6), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2077), to_year: None, month: July, day: Ordinal(18), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2077), to_year: None, month: August, day: Ordinal(22), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2078), to_year: None, month: July, day: Ordinal(10), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2078), to_year: None, month: August, day: Ordinal(14), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2079), to_year: None, month: June, day: Ordinal(25), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2079), to_year: None, month: August, day: Ordinal(6), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2080), to_year: None, month: June, day: Ordinal(16), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2080), to_year: None, month: July, day: Ordinal(21), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2081), to_year: None, month: June, day: Ordinal(1), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2081), to_year: None, month: July, day: Ordinal(13), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2082), to_year: None, month: May, day: Ordinal(24), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2082), to_year: None, month: June, day: Ordinal(28), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2083), to_year: None, month: May, day: Ordinal(16), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2083), to_year: None, month: June, day: Ordinal(20), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2084), to_year: None, month: April, day: Ordinal(30), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2084), to_year: None, month: June, day: Ordinal(11), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2085), to_year: None, month: April, day: Ordinal(22), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2085), to_year: None, month: May, day: Ordinal(27), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2086), to_year: None, month: April, day: Ordinal(14), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2086), to_year: None, month: May, day: Ordinal(19), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2087), to_year: None, month: March, day: Ordinal(30), time: 10800, time_type: Wall, time_to_add: -3600, letters: None }, RuleInfo { from_year: Number(2087), to_year: None, month: May, day: Ordinal(11), time: 7200, time_type: Wall, time_to_add: 0, letters: None }]
"Chicago"
[RuleInfo { from_year: Number(1920), to_year: None, month: June, day: Ordinal(13), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1920), to_year: Some(Number(1921)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1921), to_year: None, month: March, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1922), to_year: Some(Number(1966)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1922), to_year: Some(Number(1954)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1955), to_year: Some(Number(1966)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Yukon"
[RuleInfo { from_year: Number(1965), to_year: None, month: April, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 7200, letters: Some("DD") }, RuleInfo { from_year: Number(1965), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Fiji"
[RuleInfo { from_year: Number(1998), to_year: Some(Number(1999)), month: November, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1999), to_year: Some(Number(2000)), month: February, day: Last(Sunday), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2009), to_year: None, month: November, day: Ordinal(29), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2010), to_year: None, month: March, day: Last(Sunday), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2010), to_year: Some(Number(2013)), month: October, day: FirstOnOrAfter(Sunday, 21), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2011), to_year: None, month: March, day: FirstOnOrAfter(Sunday, 1), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2012), to_year: Some(Number(2013)), month: January, day: FirstOnOrAfter(Sunday, 18), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2014), to_year: None, month: January, day: FirstOnOrAfter(Sunday, 18), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2014), to_year: Some(Number(2018)), month: November, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2015), to_year: Some(Number(2021)), month: January, day: FirstOnOrAfter(Sunday, 12), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2019), to_year: None, month: November, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2020), to_year: None, month: December, day: Ordinal(20), time: 7200, time_type: Wall, time_to_add: 3600, letters: None }]
"Bermuda"
[RuleInfo { from_year: Number(1917), to_year: None, month: April, day: Ordinal(5), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1917), to_year: None, month: September, day: Ordinal(30), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1918), to_year: None, month: April, day: Ordinal(13), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1918), to_year: None, month: September, day: Ordinal(15), time: 86400, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: January, day: Ordinal(11), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1942), to_year: None, month: October, day: Ordinal(18), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1943), to_year: None, month: March, day: Ordinal(21), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1943), to_year: None, month: October, day: Ordinal(31), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1944), to_year: Some(Number(1945)), month: March, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1944), to_year: Some(Number(1945)), month: November, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1947), to_year: None, month: May, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1947), to_year: None, month: September, day: FirstOnOrAfter(Sunday, 8), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1948), to_year: Some(Number(1952)), month: May, day: FirstOnOrAfter(Sunday, 22), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1948), to_year: Some(Number(1952)), month: September, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1956), to_year: None, month: May, day: FirstOnOrAfter(Sunday, 22), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1956), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Starke"
[RuleInfo { from_year: Number(1947), to_year: Some(Number(1961)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1947), to_year: Some(Number(1954)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1955), to_year: Some(Number(1956)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1957), to_year: Some(Number(1958)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1959), to_year: Some(Number(1961)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Cuba"
[RuleInfo { from_year: Number(1928), to_year: None, month: June, day: Ordinal(10), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1928), to_year: None, month: October, day: Ordinal(10), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1940), to_year: Some(Number(1942)), month: June, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1940), to_year: Some(Number(1942)), month: September, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1945), to_year: Some(Number(1946)), month: June, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1945), to_year: Some(Number(1946)), month: September, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1965), to_year: None, month: June, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1965), to_year: None, month: September, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1966), to_year: None, month: May, day: Ordinal(29), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1966), to_year: None, month: October, day: Ordinal(2), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1967), to_year: None, month: April, day: Ordinal(8), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1967), to_year: Some(Number(1968)), month: September, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1968), to_year: None, month: April, day: Ordinal(14), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1969), to_year: Some(Number(1977)), month: April, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1969), to_year: Some(Number(1971)), month: October, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1972), to_year: Some(Number(1974)), month: October, day: Ordinal(8), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1975), to_year: Some(Number(1977)), month: October, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1978), to_year: None, month: May, day: Ordinal(7), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1978), to_year: Some(Number(1990)), month: October, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1979), to_year: Some(Number(1980)), month: March, day: FirstOnOrAfter(Sunday, 15), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1981), to_year: Some(Number(1985)), month: May, day: FirstOnOrAfter(Sunday, 5), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1986), to_year: Some(Number(1989)), month: March, day: FirstOnOrAfter(Sunday, 14), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1990), to_year: Some(Number(1997)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1991), to_year: Some(Number(1995)), month: October, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1996), to_year: None, month: October, day: Ordinal(6), time: 0, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1997), to_year: None, month: October, day: Ordinal(12), time: 0, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1998), to_year: Some(Number(1999)), month: March, day: Last(Sunday), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1998), to_year: Some(Number(2003)), month: October, day: Last(Sunday), time: 0, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2000), to_year: Some(Number(2003)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2004), to_year: None, month: March, day: Last(Sunday), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2006), to_year: Some(Number(2010)), month: October, day: Last(Sunday), time: 0, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2007), to_year: None, month: March, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2008), to_year: None, month: March, day: FirstOnOrAfter(Sunday, 15), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2009), to_year: Some(Number(2010)), month: March, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2011), to_year: None, month: March, day: FirstOnOrAfter(Sunday, 15), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2011), to_year: None, month: November, day: Ordinal(13), time: 0, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2012), to_year: None, month: April, day: Ordinal(1), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2012), to_year: Some(Maximum), month: November, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2013), to_year: Some(Maximum), month: March, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("D") }]
"Barb"
[RuleInfo { from_year: Number(1942), to_year: None, month: April, day: Ordinal(19), time: 18000, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1942), to_year: None, month: August, day: Ordinal(31), time: 21600, time_type: UTC, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1943), to_year: None, month: May, day: Ordinal(2), time: 18000, time_type: UTC, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1943), to_year: None, month: September, day: Ordinal(5), time: 21600, time_type: UTC, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1944), to_year: None, month: April, day: Ordinal(10), time: 18000, time_type: UTC, time_to_add: 1800, letters: None }, RuleInfo { from_year: Number(1944), to_year: None, month: September, day: Ordinal(10), time: 21600, time_type: UTC, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: None, month: June, day: Ordinal(12), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1977), to_year: Some(Number(1978)), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1978), to_year: Some(Number(1980)), month: April, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1979), to_year: None, month: September, day: Ordinal(30), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1980), to_year: None, month: September, day: Ordinal(25), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"W-Eur"
[RuleInfo { from_year: Number(1977), to_year: Some(Number(1980)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: None, month: September, day: Last(Sunday), time: 3600, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: October, day: Ordinal(1), time: 3600, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1979), to_year: Some(Number(1995)), month: September, day: Last(Sunday), time: 3600, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1981), to_year: Some(Maximum), month: March, day: Last(Sunday), time: 3600, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1996), to_year: Some(Maximum), month: October, day: Last(Sunday), time: 3600, time_type: Standard, time_to_add: 0, letters: None }]
"E-Eur"
[RuleInfo { from_year: Number(1977), to_year: Some(Number(1980)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: None, month: September, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1979), to_year: Some(Number(1995)), month: September, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1981), to_year: Some(Maximum), month: March, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1996), to_year: Some(Maximum), month: October, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: None }]
"Aus"
[RuleInfo { from_year: Number(1917), to_year: None, month: January, day: Ordinal(1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1917), to_year: None, month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: January, day: Ordinal(1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1942), to_year: None, month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: September, day: Ordinal(27), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1943), to_year: Some(Number(1944)), month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1943), to_year: None, month: October, day: Ordinal(3), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }]
"Libya"
[RuleInfo { from_year: Number(1951), to_year: None, month: October, day: Ordinal(14), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1952), to_year: None, month: January, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1953), to_year: None, month: October, day: Ordinal(9), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1954), to_year: None, month: January, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1955), to_year: None, month: September, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1956), to_year: None, month: January, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1982), to_year: Some(Number(1984)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1982), to_year: Some(Number(1985)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1985), to_year: None, month: April, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1986), to_year: None, month: April, day: Ordinal(4), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1986), to_year: None, month: October, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1987), to_year: Some(Number(1989)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1987), to_year: Some(Number(1989)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1997), to_year: None, month: April, day: Ordinal(4), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1997), to_year: None, month: October, day: Ordinal(4), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2013), to_year: None, month: March, day: Last(Friday), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2013), to_year: None, month: October, day: Last(Friday), time: 7200, time_type: Wall, time_to_add: 0, letters: None }]
"AQ"
[RuleInfo { from_year: Number(1971), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1972), to_year: None, month: February, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1989), to_year: Some(Number(1991)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1990), to_year: Some(Number(1992)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }]
"Halifax"
[RuleInfo { from_year: Number(1916), to_year: None, month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1916), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1920), to_year: None, month: May, day: Ordinal(9), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1920), to_year: None, month: August, day: Ordinal(29), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1921), to_year: None, month: May, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1921), to_year: Some(Number(1922)), month: September, day: Ordinal(5), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1922), to_year: None, month: April, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1923), to_year: Some(Number(1925)), month: May, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1923), to_year: None, month: September, day: Ordinal(4), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1924), to_year: None, month: September, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1925), to_year: None, month: September, day: Ordinal(28), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1926), to_year: None, month: May, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1926), to_year: None, month: September, day: Ordinal(13), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1927), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1927), to_year: None, month: September, day: Ordinal(26), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1928), to_year: Some(Number(1931)), month: May, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1928), to_year: None, month: September, day: Ordinal(9), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1929), to_year: None, month: September, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1930), to_year: None, month: September, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1931), to_year: Some(Number(1932)), month: September, day: FirstOnOrAfter(Monday, 24), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1932), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1933), to_year: None, month: April, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1933), to_year: None, month: October, day: Ordinal(2), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1934), to_year: None, month: May, day: Ordinal(20), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1934), to_year: None, month: September, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1935), to_year: None, month: June, day: Ordinal(2), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1935), to_year: None, month: September, day: Ordinal(30), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1936), to_year: None, month: June, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1936), to_year: None, month: September, day: Ordinal(14), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1937), to_year: Some(Number(1938)), month: May, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1937), to_year: Some(Number(1941)), month: September, day: FirstOnOrAfter(Monday, 24), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1939), to_year: None, month: May, day: Ordinal(28), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1940), to_year: Some(Number(1941)), month: May, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1946), to_year: Some(Number(1949)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1946), to_year: Some(Number(1949)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1951), to_year: Some(Number(1954)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1951), to_year: Some(Number(1954)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1956), to_year: Some(Number(1959)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1956), to_year: Some(Number(1959)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1962), to_year: Some(Number(1973)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1962), to_year: Some(Number(1973)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"EgyptAsia"
[RuleInfo { from_year: Number(1957), to_year: None, month: May, day: Ordinal(10), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1957), to_year: Some(Number(1958)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1958), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1959), to_year: Some(Number(1967)), month: May, day: Ordinal(1), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1959), to_year: Some(Number(1965)), month: September, day: Ordinal(30), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1966), to_year: None, month: October, day: Ordinal(1), time: 10800, time_type: Wall, time_to_add: 0, letters: None }]
"Pulaski"
[RuleInfo { from_year: Number(1946), to_year: Some(Number(1960)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1946), to_year: Some(Number(1954)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1955), to_year: Some(Number(1956)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1957), to_year: Some(Number(1960)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"EU"
[RuleInfo { from_year: Number(1977), to_year: Some(Number(1980)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 3600, time_type: UTC, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: None, month: September, day: Last(Sunday), time: 3600, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: October, day: Ordinal(1), time: 3600, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1979), to_year: Some(Number(1995)), month: September, day: Last(Sunday), time: 3600, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1981), to_year: Some(Maximum), month: March, day: Last(Sunday), time: 3600, time_type: UTC, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1996), to_year: Some(Maximum), month: October, day: Last(Sunday), time: 3600, time_type: UTC, time_to_add: 0, letters: None }]
"Brazil"
[RuleInfo { from_year: Number(1931), to_year: None, month: October, day: Ordinal(3), time: 39600, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1932), to_year: Some(Number(1933)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1932), to_year: None, month: October, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1949), to_year: Some(Number(1952)), month: December, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1950), to_year: None, month: April, day: Ordinal(16), time: 3600, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1951), to_year: Some(Number(1952)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1953), to_year: None, month: March, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1963), to_year: None, month: December, day: Ordinal(9), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1964), to_year: None, month: March, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1965), to_year: None, month: January, day: Ordinal(31), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1965), to_year: None, month: March, day: Ordinal(31), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1965), to_year: None, month: December, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1966), to_year: Some(Number(1968)), month: March, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1966), to_year: Some(Number(1967)), month: November, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1985), to_year: None, month: November, day: Ordinal(2), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1986), to_year: None, month: March, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1986), to_year: None, month: October, day: Ordinal(25), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1987), to_year: None, month: February, day: Ordinal(14), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1987), to_year: None, month: October, day: Ordinal(25), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1988), to_year: None, month: February, day: Ordinal(7), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1988), to_year: None, month: October, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1989), to_year: None, month: January, day: Ordinal(29), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1989), to_year: None, month: October, day: Ordinal(15), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1990), to_year: None, month: February, day: Ordinal(11), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1990), to_year: None, month: October, day: Ordinal(21), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1991), to_year: None, month: February, day: Ordinal(17), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1991), to_year: None, month: October, day: Ordinal(20), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1992), to_year: None, month: February, day: Ordinal(9), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1992), to_year: None, month: October, day: Ordinal(25), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1993), to_year: None, month: January, day: Ordinal(31), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1993), to_year: Some(Number(1995)), month: October, day: FirstOnOrAfter(Sunday, 11), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1994), to_year: Some(Number(1995)), month: February, day: FirstOnOrAfter(Sunday, 15), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1996), to_year: None, month: February, day: Ordinal(11), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1996), to_year: None, month: October, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1997), to_year: None, month: February, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1997), to_year: None, month: October, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1998), to_year: None, month: March, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1998), to_year: None, month: October, day: Ordinal(11), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1999), to_year: None, month: February, day: Ordinal(21), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1999), to_year: None, month: October, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2000), to_year: None, month: February, day: Ordinal(27), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2000), to_year: Some(Number(2001)), month: October, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2001), to_year: Some(Number(2006)), month: February, day: FirstOnOrAfter(Sunday, 15), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2002), to_year: None, month: November, day: Ordinal(3), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2003), to_year: None, month: October, day: Ordinal(19), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2004), to_year: None, month: November, day: Ordinal(2), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2005), to_year: None, month: October, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2006), to_year: None, month: November, day: Ordinal(5), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2007), to_year: None, month: February, day: Ordinal(25), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2007), to_year: None, month: October, day: FirstOnOrAfter(Sunday, 8), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2008), to_year: Some(Number(2017)), month: October, day: FirstOnOrAfter(Sunday, 15), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2008), to_year: Some(Number(2011)), month: February, day: FirstOnOrAfter(Sunday, 15), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2012), to_year: None, month: February, day: FirstOnOrAfter(Sunday, 22), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2013), to_year: Some(Number(2014)), month: February, day: FirstOnOrAfter(Sunday, 15), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2015), to_year: None, month: February, day: FirstOnOrAfter(Sunday, 22), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2016), to_year: Some(Number(2019)), month: February, day: FirstOnOrAfter(Sunday, 15), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2018), to_year: None, month: November, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }]
"Vanuatu"
[RuleInfo { from_year: Number(1973), to_year: None, month: December, day: Ordinal(22), time: 43200, time_type: UTC, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1974), to_year: None, month: March, day: Ordinal(30), time: 43200, time_type: UTC, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1983), to_year: Some(Number(1991)), month: September, day: FirstOnOrAfter(Saturday, 22), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1984), to_year: Some(Number(1991)), month: March, day: FirstOnOrAfter(Saturday, 22), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1992), to_year: Some(Number(1993)), month: January, day: FirstOnOrAfter(Saturday, 22), time: 86400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1992), to_year: None, month: October, day: FirstOnOrAfter(Saturday, 22), time: 86400, time_type: Wall, time_to_add: 3600, letters: None }]
"NYC"
[RuleInfo { from_year: Number(1920), to_year: None, month: March, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1920), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1921), to_year: Some(Number(1966)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1921), to_year: Some(Number(1954)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1955), to_year: Some(Number(1966)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Hond"
[RuleInfo { from_year: Number(1987), to_year: Some(Number(1988)), month: May, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1987), to_year: Some(Number(1988)), month: September, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2006), to_year: None, month: May, day: FirstOnOrAfter(Sunday, 1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2006), to_year: None, month: August, day: FirstOnOrAfter(Monday, 1), time: 0, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"E-EurAsia"
[RuleInfo { from_year: Number(1981), to_year: Some(Maximum), month: March, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1979), to_year: Some(Number(1995)), month: September, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1996), to_year: Some(Maximum), month: October, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 0, letters: None }]
"Tunisia"
[RuleInfo { from_year: Number(1939), to_year: None, month: April, day: Ordinal(15), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1939), to_year: None, month: November, day: Ordinal(18), time: 82800, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1940), to_year: None, month: February, day: Ordinal(25), time: 82800, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1941), to_year: None, month: October, day: Ordinal(6), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1942), to_year: None, month: March, day: Ordinal(9), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1942), to_year: None, month: November, day: Ordinal(2), time: 10800, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1943), to_year: None, month: March, day: Ordinal(29), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1943), to_year: None, month: April, day: Ordinal(17), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1943), to_year: None, month: April, day: Ordinal(25), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1943), to_year: None, month: October, day: Ordinal(4), time: 7200, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1944), to_year: Some(Number(1945)), month: April, day: FirstOnOrAfter(Monday, 1), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1944), to_year: None, month: October, day: Ordinal(8), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1945), to_year: None, month: September, day: Ordinal(16), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1977), to_year: None, month: April, day: Ordinal(30), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1977), to_year: None, month: September, day: Ordinal(24), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1978), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1978), to_year: None, month: October, day: Ordinal(1), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1988), to_year: None, month: June, day: Ordinal(1), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1988), to_year: Some(Number(1990)), month: September, day: Last(Sunday), time: 0, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1989), to_year: None, month: March, day: Ordinal(26), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(1990), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2005), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2005), to_year: None, month: September, day: Ordinal(30), time: 3600, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2006), to_year: Some(Number(2008)), month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("S") }, RuleInfo { from_year: Number(2006), to_year: Some(Number(2008)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: None }]
"Japan"
[RuleInfo { from_year: Number(1948), to_year: None, month: May, day: FirstOnOrAfter(Saturday, 1), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1948), to_year: Some(Number(1951)), month: September, day: FirstOnOrAfter(Saturday, 8), time: 90000, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1949), to_year: None, month: April, day: FirstOnOrAfter(Saturday, 1), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1950), to_year: Some(Number(1951)), month: May, day: FirstOnOrAfter(Saturday, 1), time: 86400, time_type: Wall, time_to_add: 3600, letters: Some("D") }]
"Iraq"
[RuleInfo { from_year: Number(1982), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1982), to_year: Some(Number(1984)), month: October, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1983), to_year: None, month: March, day: Ordinal(31), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1984), to_year: Some(Number(1985)), month: April, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1985), to_year: Some(Number(1990)), month: September, day: Last(Sunday), time: 3600, time_type: Standard, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(1986), to_year: Some(Number(1990)), month: March, day: Last(Sunday), time: 3600, time_type: Standard, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1991), to_year: Some(Number(2007)), month: April, day: Ordinal(1), time: 10800, time_type: Standard, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1991), to_year: Some(Number(2007)), month: October, day: Ordinal(1), time: 10800, time_type: Standard, time_to_add: 0, letters: None }]
"WS"
[RuleInfo { from_year: Number(2010), to_year: None, month: September, day: Last(Sunday), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2011), to_year: None, month: April, day: FirstOnOrAfter(Saturday, 1), time: 14400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2011), to_year: None, month: September, day: Last(Saturday), time: 10800, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(2012), to_year: Some(Number(2021)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 14400, time_type: Wall, time_to_add: 0, letters: None }, RuleInfo { from_year: Number(2012), to_year: Some(Number(2020)), month: September, day: Last(Sunday), time: 10800, time_type: Wall, time_to_add: 3600, letters: None }]
"Indianapolis"
[RuleInfo { from_year: Number(1941), to_year: None, month: June, day: Ordinal(22), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1941), to_year: Some(Number(1954)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1946), to_year: Some(Number(1954)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }]
"Moncton"
[RuleInfo { from_year: Number(1933), to_year: Some(Number(1935)), month: June, day: FirstOnOrAfter(Sunday, 8), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1933), to_year: Some(Number(1935)), month: September, day: FirstOnOrAfter(Sunday, 8), time: 3600, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1936), to_year: Some(Number(1938)), month: June, day: FirstOnOrAfter(Sunday, 1), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1936), to_year: Some(Number(1938)), month: September, day: FirstOnOrAfter(Sunday, 1), time: 3600, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1939), to_year: None, month: May, day: Ordinal(27), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1939), to_year: Some(Number(1941)), month: September, day: FirstOnOrAfter(Saturday, 21), time: 3600, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1940), to_year: None, month: May, day: Ordinal(19), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1941), to_year: None, month: May, day: Ordinal(4), time: 3600, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1946), to_year: Some(Number(1972)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1946), to_year: Some(Number(1956)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1957), to_year: Some(Number(1972)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1993), to_year: Some(Number(2006)), month: April, day: FirstOnOrAfter(Sunday, 1), time: 60, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1993), to_year: Some(Number(2006)), month: October, day: Last(Sunday), time: 60, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Pike"
[RuleInfo { from_year: Number(1955), to_year: None, month: May, day: Ordinal(1), time: 0, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1955), to_year: Some(Number(1960)), month: September, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1956), to_year: Some(Number(1964)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1961), to_year: Some(Number(1964)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"Denver"
[RuleInfo { from_year: Number(1920), to_year: Some(Number(1921)), month: March, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1920), to_year: None, month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1921), to_year: None, month: May, day: Ordinal(22), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1965), to_year: Some(Number(1966)), month: April, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1965), to_year: Some(Number(1966)), month: October, day: Last(Sunday), time: 7200, time_type: Wall, time_to_add: 0, letters: Some("S") }]
"AS"
[RuleInfo { from_year: Number(1971), to_year: Some(Number(1985)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1986), to_year: None, month: October, day: Ordinal(19), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1987), to_year: Some(Number(2007)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1972), to_year: None, month: February, day: Ordinal(27), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1973), to_year: Some(Number(1985)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1986), to_year: Some(Number(1990)), month: March, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1991), to_year: None, month: March, day: Ordinal(3), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1992), to_year: None, month: March, day: Ordinal(22), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1993), to_year: None, month: March, day: Ordinal(7), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1994), to_year: None, month: March, day: Ordinal(20), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1995), to_year: Some(Number(2005)), month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2006), to_year: None, month: April, day: Ordinal(2), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2007), to_year: None, month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2008), to_year: Some(Maximum), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2008), to_year: Some(Maximum), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }]
"Ecuador"
[RuleInfo { from_year: Number(1992), to_year: None, month: November, day: Ordinal(28), time: 0, time_type: Wall, time_to_add: 3600, letters: None }, RuleInfo { from_year: Number(1993), to_year: None, month: February, day: Ordinal(5), time: 0, time_type: Wall, time_to_add: 0, letters: None }]
"AN"
[RuleInfo { from_year: Number(1971), to_year: Some(Number(1985)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1972), to_year: None, month: February, day: Ordinal(27), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1973), to_year: Some(Number(1981)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1982), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1983), to_year: Some(Number(1985)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1986), to_year: Some(Number(1989)), month: March, day: FirstOnOrAfter(Sunday, 15), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1986), to_year: None, month: October, day: Ordinal(19), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1987), to_year: Some(Number(1999)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(1990), to_year: Some(Number(1995)), month: March, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(1996), to_year: Some(Number(2005)), month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2000), to_year: None, month: August, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2001), to_year: Some(Number(2007)), month: October, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }, RuleInfo { from_year: Number(2006), to_year: None, month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2007), to_year: None, month: March, day: Last(Sunday), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2008), to_year: Some(Maximum), month: April, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 0, letters: Some("S") }, RuleInfo { from_year: Number(2008), to_year: Some(Maximum), month: October, day: FirstOnOrAfter(Sunday, 1), time: 7200, time_type: Standard, time_to_add: 3600, letters: Some("D") }]
